-- phpMyAdmin SQL Dump
-- version 4.1.14
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: May 11, 2016 at 04:10 PM
-- Server version: 5.6.17
-- PHP Version: 5.5.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `moocv5`
--

-- --------------------------------------------------------

--
-- Table structure for table `aime`
--

CREATE TABLE IF NOT EXISTS `aime` (
  `id_aime` int(11) NOT NULL AUTO_INCREMENT,
  `id_sujet_aime` int(11) DEFAULT NULL,
  `id_utilisateur_aime` int(11) DEFAULT NULL,
  `id_cours_aime` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_aime`),
  KEY `IDX_A86190D67A0878A8` (`id_sujet_aime`),
  KEY `IDX_A86190D622580603` (`id_utilisateur_aime`),
  KEY `IDX_A86190D67EAF80D0` (`id_cours_aime`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=84 ;

--
-- Dumping data for table `aime`
--

INSERT INTO `aime` (`id_aime`, `id_sujet_aime`, `id_utilisateur_aime`, `id_cours_aime`) VALUES
(76, NULL, 19, 11),
(77, NULL, 19, 9),
(78, NULL, 19, 10),
(80, NULL, 19, 12),
(82, 12, 19, NULL),
(83, 31, 19, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `appreciation`
--

CREATE TABLE IF NOT EXISTS `appreciation` (
  `id_appreciation` int(11) NOT NULL AUTO_INCREMENT,
  `id_apprenant_appreciation` int(11) DEFAULT NULL,
  `id_cours_appreciation` int(11) DEFAULT NULL,
  `valeur_appreciation` longtext COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_appreciation`),
  KEY `IDX_5CD4DEABE5D8D4F8` (`id_apprenant_appreciation`),
  KEY `IDX_5CD4DEABC8036527` (`id_cours_appreciation`),
  KEY `id_cours` (`id_cours_appreciation`,`id_apprenant_appreciation`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=4 ;

--
-- Dumping data for table `appreciation`
--

INSERT INTO `appreciation` (`id_appreciation`, `id_apprenant_appreciation`, `id_cours_appreciation`, `valeur_appreciation`) VALUES
(2, 20, 10, '<p>Quelque chose vas mal dans ce cours</p>\r\n'),
(3, 19, 9, '<p>sdfsdf</p>\r\n');

-- --------------------------------------------------------

--
-- Table structure for table `bibliotheque`
--

CREATE TABLE IF NOT EXISTS `bibliotheque` (
  `id_bibliotheque` int(11) NOT NULL AUTO_INCREMENT,
  `id_cours_bibliotheque` int(11) DEFAULT NULL,
  `id_apprenant_bibliotheque` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_bibliotheque`),
  UNIQUE KEY `id_apprenant_bibliotheque` (`id_apprenant_bibliotheque`,`id_cours_bibliotheque`),
  KEY `IDX_4690D34DD24768C1` (`id_cours_bibliotheque`),
  KEY `IDX_4690D34DFF9CD91E` (`id_apprenant_bibliotheque`),
  KEY `id_cours_bibliotheque` (`id_cours_bibliotheque`,`id_apprenant_bibliotheque`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=11 ;

--
-- Dumping data for table `bibliotheque`
--

INSERT INTO `bibliotheque` (`id_bibliotheque`, `id_cours_bibliotheque`, `id_apprenant_bibliotheque`) VALUES
(9, 9, 19),
(3, 10, 20),
(8, 10, 21);

-- --------------------------------------------------------

--
-- Table structure for table `chapitre`
--

CREATE TABLE IF NOT EXISTS `chapitre` (
  `id_chapitre` int(11) NOT NULL AUTO_INCREMENT,
  `id_cours_chapitre` int(11) DEFAULT NULL,
  `titre_chapitre` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `description_chapitre` longtext COLLATE utf8_unicode_ci NOT NULL,
  `chemin_chapitre` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `chemin_video_chapitre` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `chemin_presentation_chapitre` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `contenu_chapitre` longtext COLLATE utf8_unicode_ci NOT NULL,
  `duree_chapitre` int(11) NOT NULL,
  `niveau_chapitre` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `introduction_chapitre` longtext COLLATE utf8_unicode_ci NOT NULL,
  `objectif_chapitre` longtext COLLATE utf8_unicode_ci NOT NULL,
  `date_ajout` datetime NOT NULL,
  `id_quizz_chapitre` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_chapitre`),
  KEY `IDX_8C62B0257690A3FE` (`id_cours_chapitre`),
  KEY `IDX_8C62B02530D0F131` (`id_quizz_chapitre`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=11 ;

--
-- Dumping data for table `chapitre`
--

INSERT INTO `chapitre` (`id_chapitre`, `id_cours_chapitre`, `titre_chapitre`, `description_chapitre`, `chemin_chapitre`, `chemin_video_chapitre`, `chemin_presentation_chapitre`, `contenu_chapitre`, `duree_chapitre`, `niveau_chapitre`, `introduction_chapitre`, `objectif_chapitre`, `date_ajout`, `id_quizz_chapitre`) VALUES
(4, 9, 'SYMFONY2, UN FRAMEWORK PHP', '<p><strong>Symfony2 est un puissant framework</strong>&nbsp;qui va vous permettre de r&eacute;aliser des sites complexes rapidement, mais de fa&ccedil;on structur&eacute;e et avec un code clair et maintenable. En un mot : le paradis du d&eacute;veloppeur !</p>\r\n\r\n<p>Si vous ne ma&icirc;trisez pas ces trois points, je vous invite vraiment &agrave; les apprendre avant de commencer la lecture de ce cours. Symfony2 requiert ces bases, et si vous ne les avez pas, vous risquez de mettre plus de temps pour assimiler ce cours. C&#39;est comme acheter un A380 sans savoir piloter : c&#39;est joli mais vous n&#39;irez pas bien loin.</p>\r\n', '9SYMFONY2UNFRAMEWORKPHP.pdf', '9SYMFONY2UNFRAMEWORKPHP.MP4', '9gsbSymfony.pdf', '<h3 style="text-align:justify">Qu&#39;est-ce qu&#39;un framework ?</h3>\r\n\r\n<h4 style="text-align:justify">L&#39;objectif d&#39;un framework</h4>\r\n\r\n<p style="text-align: justify;">L&#39;objectif de ce chapitre n&#39;est pas de vous fournir toutes les cl&eacute;s pour&nbsp;<em>concevoir</em>&nbsp;un framework, mais suffisamment pour pouvoir en&nbsp;<em>utiliser</em>&nbsp;un. On exposera rapidement l&#39;int&eacute;r&ecirc;t, les avantages et les inconv&eacute;nients de l&#39;utilisation d&#39;un tel outil.</p>\r\n\r\n<h5 style="text-align:justify">D&eacute;finition</h5>\r\n\r\n<p style="text-align: justify;">Le mot &laquo;&nbsp;<em>framework</em>&nbsp;&raquo; provient de l&#39;anglais &laquo;&nbsp;<em>frame</em>&nbsp;&raquo; qui veut dire &laquo; cadre &raquo; en fran&ccedil;ais, et &laquo;&nbsp;<em>work</em>&nbsp;&raquo; qui signifie &laquo; travail &raquo;. Litt&eacute;ralement, c&#39;est donc un &laquo; cadre de travail &raquo;. Vous voil&agrave; bien avanc&eacute;s, hein ?&nbsp;<img alt=":p" src="https://openclassrooms.com/bundles/common/images/smiley/langue.png" />&nbsp;Concr&egrave;tement, c&#39;est un ensemble de composants qui sert &agrave; cr&eacute;er les fondations, l&#39;architecture et les grandes lignes d&#39;un logiciel. Il existe des centaines de frameworks couvrant la plupart des langages de programmation. Ils sont destin&eacute;s au d&eacute;veloppement de sites web ou bien &agrave; la conception de logiciels.</p>\r\n\r\n<p style="text-align: justify;">Un framework est une bo&icirc;te &agrave; outils con&ccedil;ue par un ou plusieurs d&eacute;veloppeurs &agrave; destination d&#39;autres d&eacute;veloppeurs. Contrairement &agrave; certains scripts tels que WordPress, Dotclear ou autres, un framework n&#39;est pas utilisable tel quel. Il n&#39;est pas fait pour &ecirc;tre utilis&eacute; par les utilisateurs finaux. Le d&eacute;veloppeur qui se sert d&#39;un framework a encore du boulot &agrave; fournir, d&#39;o&ugrave; ce cours !</p>\r\n\r\n<h5 style="text-align:justify">Objectif d&#39;un framework</h5>\r\n\r\n<p style="text-align: justify;">L&#39;objectif premier d&#39;un framework est d&#39;am&eacute;liorer la productivit&eacute; des d&eacute;veloppeurs qui l&#39;utilisent. Plut&ocirc;t sympa, non ? Souvent organis&eacute; en diff&eacute;rents composants, un framework offre la possibilit&eacute; au d&eacute;veloppeur final d&#39;utiliser tel ou tel composant pour lui faciliter le d&eacute;veloppement, et lui permet ainsi de se concentrer sur le plus important.</p>\r\n\r\n<p style="text-align: justify;">Prenons un exemple concret. Il existe dans Symfony2 un composant qui g&egrave;re les formulaires HTML : leur affichage, leur validation, etc. Le d&eacute;veloppeur qui l&#39;utilise se concentre sur l&#39;essentiel dans son application : chaque formulaire effectue une action, et c&#39;est cette action qui est importante, pas les formulaires. &Eacute;tendez ce principe &agrave; toute une application ou tout un site Internet, et vous comprenez l&#39;int&eacute;r&ecirc;t d&#39;un framework ! Autrement dit, le framework s&#39;occupe de la forme et permet au d&eacute;veloppeur de se concentrer sur le fond.</p>\r\n\r\n<h4 style="text-align:justify">Pesons le pour et le contre</h4>\r\n\r\n<p style="text-align: justify;">Comme tout bon d&eacute;veloppeur, lorsqu&#39;on veut utiliser un nouvel outil, on doit en peser le pour et le contre pour &ecirc;tre s&ucirc;r de faire le bon choix !</p>\r\n\r\n<h5 style="text-align:justify">Les pour</h5>\r\n\r\n<p style="text-align: justify;">L&#39;avantage premier est donc, on vient de le voir, le gain en productivit&eacute;. Mais il en existe bien d&#39;autres ! On peut les classer en plusieurs cat&eacute;gories : le code, le travail et la communaut&eacute;.</p>\r\n\r\n<p style="text-align: justify;">Tout d&#39;abord, un framework va vous aider &agrave; r&eacute;aliser un&nbsp;<strong>&laquo; bon code &raquo;</strong>. Par &laquo; bon code &raquo;, j&#39;entends qu&#39;il vous incite, de par sa propre architecture, &agrave; bien organiser votre code. Et un code bien organis&eacute; est un code facilement maintenable et &eacute;volutif ! De plus, un framework offre des briques pr&ecirc;tes &agrave; &ecirc;tre utilis&eacute;es (le composant&nbsp;<em>Formulaire</em>&nbsp;de Symfony2 par exemple), ce qui vous &eacute;vite de r&eacute;inventer la roue, et surtout qui vous permet d&#39;utiliser des briques puissantes et &eacute;prouv&eacute;es. En effet, ces briques sont d&eacute;velopp&eacute;es par des &eacute;quipes de d&eacute;veloppeurs chevronn&eacute;s, elles sont donc tr&egrave;s flexibles et tr&egrave;s robustes. Vous &eacute;conomisez ainsi des heures de d&eacute;veloppement !</p>\r\n\r\n<p style="text-align: justify;">Ensuite, un framework&nbsp;<strong>am&eacute;liore la fa&ccedil;on dont vous travaillez</strong>. En effet, dans le cas d&#39;un site Internet, vous travaillez souvent avec d&#39;autres d&eacute;veloppeurs PHP et un designer. Un framework vous aide doublement dans ce travail en &eacute;quipe. D&#39;une part, un framework utilise presque toujours l&#39;architecture MVC ; on en reparlera, mais sachez pour le moment que c&#39;est une fa&ccedil;on d&#39;organiser son code qui s&eacute;pare le code PHP du code HTML. Ainsi, votre designer peut travailler sur des fichiers diff&eacute;rents des v&ocirc;tres, fini les probl&egrave;mes d&#39;&eacute;dition simultan&eacute;e d&#39;un m&ecirc;me fichier ! D&#39;autre part, un framework a une structure et des conventions de code connues. Ainsi, vous pouvez facilement recruter un autre d&eacute;veloppeur : s&#39;il conna&icirc;t d&eacute;j&agrave; le framework en question, il s&#39;int&eacute;grera tr&egrave;s rapidement au projet.</p>\r\n\r\n<p style="text-align: justify;">Enfin, le dernier avantage est la&nbsp;<strong>communaut&eacute;</strong>&nbsp;soutenant chaque framework. C&#39;est elle qui fournit les tutoriaux ou les cours (comme celui que vous lisez !), de l&#39;aide sur les forums, et bien s&ucirc;r les mises &agrave; jour du framework. Ces mises &agrave; jour sont tr&egrave;s importantes : imaginez que vous codiez vous-m&ecirc;mes tout ce qui est connexion utilisateur, session, moteur de&nbsp;<em>templates</em>, etc. Comme il est impossible de coder sans bugs, vous devriez logiquement corriger chaque bug d&eacute;clar&eacute; sur votre code. Maintenant, imaginez que toutes les briques de votre site, qui ne sont pas forc&eacute;ment votre tasse de th&eacute;, soient fournies par le framework. &Agrave; chaque fois que vous ou les milliers d&#39;autres utilisateurs du framework trouverez un bug, les d&eacute;veloppeurs et la communaut&eacute; s&#39;occuperont de le corriger, et vous n&#39;aurez plus qu&#39;&agrave; suivre les mises &agrave; jour. Un vrai paradis !</p>\r\n\r\n<p style="text-align: justify;">Il existe plein d&#39;autres avantages que je ne vais pas vous d&eacute;tailler, mais un framework, c&#39;est aussi :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;">une communaut&eacute; active qui utilise le framework et qui contribue en retour ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">une documentation de qualit&eacute; et r&eacute;guli&egrave;rement mise &agrave; jour ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">un code source maintenu par des d&eacute;veloppeurs attitr&eacute;s ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">un code qui respecte les standards de programmation ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">un support &agrave; long terme garanti et des mises &agrave; jour qui ne cassent pas la compatibilit&eacute; ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">etc.</p>\r\n	</li>\r\n</ul>\r\n\r\n<h5 style="text-align:justify">Les contre</h5>\r\n\r\n<p style="text-align: justify;">Vous vous en doutez, avec autant d&#39;avantages il y a forc&eacute;ment des inconv&eacute;nients. Et bien, figurez-vous qu&#39;il n&#39;y en a pas tant que &ccedil;a !</p>\r\n\r\n<p style="text-align: justify;">S&#39;il ne fallait en citer qu&#39;un, cela serait &eacute;videmment la courbe d&#39;apprentissage qui est plus &eacute;lev&eacute;e. En effet, pour ma&icirc;triser un framework, il faut un temps d&#39;apprentissage non n&eacute;gligeable. Chaque brique qui compose un framework a sa complexit&eacute; propre qu&#39;il vous faudra appr&eacute;hender.</p>\r\n\r\n<p style="text-align: justify;">Notez &eacute;galement que pour les frameworks les plus r&eacute;cents, tels que Symfony2 justement, il faut &eacute;galement &ecirc;tre au courant des derni&egrave;res nouveaut&eacute;s de PHP. Je pense notamment &agrave;&nbsp;<a href="https://openclassrooms.com/informatique/cours/concevez-votre-site-web-avec-php-et-mysql/la-programmation-orientee-objet-6">la programmation orient&eacute;e objet (par Mathieu Nebra)</a>&nbsp;et aux&nbsp;<a href="https://openclassrooms.com/informatique/cours/les-espaces-de-noms-en-php">namespaces (par Victor Thuillier)</a>. De plus, conna&icirc;tre certaines bonnes pratiques telles que l&#39;architecture MVC est un plus.</p>\r\n\r\n<p style="text-align: justify;">Mais rien de tout cela ne doit vous effrayer ! Voyez l&#39;apprentissage d&#39;un framework comme un investissement : il y a un certain effort &agrave; fournir au d&eacute;but, mais les r&eacute;sultats se r&eacute;coltent ensuite sur le long terme !</p>\r\n\r\n<h4 style="text-align:justify">Alors, convaincus ?</h4>\r\n\r\n<p style="text-align: justify;">J&#39;esp&egrave;re vous avoir convaincus que les pour l&#39;emportent largement sur les contre. Si vous &ecirc;tes pr&ecirc;ts &agrave; relever le d&eacute;fi aujourd&#39;hui pour &ecirc;tre plus productifs demain, alors ce cours est fait pour vous !</p>\r\n\r\n<h3 style="text-align:justify">Qu&#39;est-ce que Symfony2 ?</h3>\r\n\r\n<h4 style="text-align:justify">Un framework</h4>\r\n\r\n<p style="text-align: justify;">Symfony2 est donc un framework PHP. Bien s&ucirc;r, il en existe d&#39;autres ; pour ne citer que les plus connus :&nbsp;<a href="http://framework.zend.com/">Zend Framework</a>,&nbsp;<a href="http://codeigniter.com/">CodeIgniter</a>,&nbsp;<a href="http://cakephp.org/">CakePHP</a>, etc. Le choix d&#39;un framework est assez personnel, et doit &ecirc;tre adapt&eacute; au projet engag&eacute;. Sans vouloir pr&ecirc;cher pour ma paroisse, Symfony2 est l&#39;un des plus flexibles et des plus puissants.</p>\r\n\r\n<h4 style="text-align:justify">Un framework populaire</h4>\r\n\r\n<p style="text-align: justify;">Symfony est tr&egrave;s populaire. C&#39;est un des frameworks les plus utilis&eacute;s dans le monde, notamment dans les entreprises. Il est utilis&eacute; par Dailymotion par exemple ! La premi&egrave;re version de Symfony est sortie en 2005 et est aujourd&#39;hui toujours tr&egrave;s utilis&eacute;e. Cela lui apporte un retour d&#39;exp&eacute;rience et une notori&eacute;t&eacute; exceptionnels. Aujourd&#39;hui, beaucoup d&#39;entreprises dans le domaine de l&#39;Internet (dont OpenClassrooms !) recrutent des d&eacute;veloppeurs capables de travailler sous ce framework. Ces d&eacute;veloppeurs pourront ainsi se greffer aux projets de l&#39;entreprise tr&egrave;s rapidement, car ils en conna&icirc;tront d&eacute;j&agrave; les grandes lignes. C&#39;est un atout si vous souhaitez travailler dans ce domaine.&nbsp;<img alt=";)" src="https://openclassrooms.com/bundles/common/images/smiley/clin.png" /></p>\r\n\r\n<p style="text-align: justify;">La deuxi&egrave;me version, que nous &eacute;tudierons dans ce cours, est sortie en ao&ucirc;t 2011. Elle est encore jeune, son d&eacute;veloppement a &eacute;t&eacute; fulgurant gr&acirc;ce &agrave; une communaut&eacute; de d&eacute;veloppeurs d&eacute;vou&eacute;s. Bien que diff&eacute;rente dans sa conception, cette deuxi&egrave;me version est plus rapide et plus souple que la premi&egrave;re. D&eacute;j&agrave;, beaucoup d&#39;entreprises s&#39;arrachent les comp&eacute;tences des d&eacute;veloppeurs Symfony2. Faites-en partie !</p>\r\n\r\n<h4 style="text-align:justify">Un framework populaire et fran&ccedil;ais</h4>\r\n\r\n<p style="text-align: justify;">Et oui, Symfony2, l&#39;un des meilleurs frameworks PHP au monde, est un framework fran&ccedil;ais ! Il est &eacute;dit&eacute; par la soci&eacute;t&eacute;&nbsp;<a href="http://sensiolabs.com/?utm_source=openclassroom&amp;utm_medium=accueil&amp;utm_campaign=PARTENARIATS">SensioLabs</a>, dont le cr&eacute;ateur est Fabien Potencier. Mais Symfony2 &eacute;tant&nbsp;<em>open source</em>, il a &eacute;galement &eacute;t&eacute; &eacute;crit par toute la communaut&eacute; : beaucoup de Fran&ccedil;ais, mais aussi des d&eacute;veloppeurs de tous horizons : Europe, &Eacute;tats-Unis, etc. C&#39;est gr&acirc;ce au talent de Fabien et &agrave; la g&eacute;n&eacute;rosit&eacute; de la communaut&eacute; que Symfony2 a vu le jour.</p>\r\n\r\n<h4 style="text-align:justify">Qu&#39;est-il possible de faire avec Symfony ?</h4>\r\n\r\n<p style="text-align: justify;">Avec Symfony, comme avec beaucoup de frameworks PHP, vous n&#39;&ecirc;tes limit&eacute;s que par votre imagination ! En effet, il est possible de tout faire : ce n&#39;est pas le framework qui vous posera des limites, celui-ci ne met en place qu&#39;un cadre de travail. Libre &agrave; vous d&#39;utiliser ce cadre comme bon vous semble ! Je vous ai parl&eacute; de<a href="http://www.dailymotion.com/fr">Dailymotion</a>, un site de partage de vid&eacute;os ; mais vous pouvez &eacute;galement cr&eacute;er un site e-commerce, comme je l&#39;ai fait avec&nbsp;<a href="https://www.caissin.fr/">Caissin</a>&nbsp;;&nbsp;ou encore un site plus complexe tel qu&#39;<a href="https://openclassrooms.com/">OpenClassrooms</a>&nbsp;qui tourne &eacute;galement sur Symfony2.</p>\r\n\r\n<p style="text-align: justify;">C&#39;est donc l&#39;une des forces de Symfony2 : il vous permettra de cr&eacute;er le site internet de vos r&ecirc;ves en vous fournissant tous les outils n&eacute;cessaires pour y arriver avec succ&egrave;s.</p>\r\n\r\n<h3 style="text-align:justify">T&eacute;l&eacute;charger Symfony2</h3>\r\n\r\n<h4 style="text-align:justify">V&eacute;rifier l&#39;installation de PHP en console</h4>\r\n\r\n<p style="text-align: justify;">Nous aurons parfois besoin d&#39;ex&eacute;cuter des commandes PHP via la console, pour g&eacute;n&eacute;rer du code ou g&eacute;rer la base de donn&eacute;es. Ce sont des commandes qui vont nous faire gagner du temps (toujours le m&ecirc;me objectif !), v&eacute;rifions donc que PHP est bien disponible en console. Rassurez-vous, je vous indiquerai toujours pas &agrave; pas comment les utiliser.</p>\r\n\r\n<p style="text-align: justify;">Si vous &ecirc;tes sous Linux ou Mac, vous ne devriez pas avoir de soucis, PHP est bien disponible en console. Si vous &ecirc;tes sous Windows, rien n&#39;est s&ucirc;r. Dans tous les cas, v&eacute;rifiez-le en ouvrant l&#39;invite de commandes pour Windows, ou le terminal pour Linux.</p>\r\n\r\n<h5 style="text-align:justify">Sous Windows</h5>\r\n\r\n<p style="text-align: justify;">Lancez l&#39;invite de commandes :</p>\r\n\r\n<p style="text-align: justify;"><code>Menu D&eacute;marrer &gt; Programmes &gt; Accessoires &gt; Invite de commandes</code>.</p>\r\n\r\n<p style="text-align: justify;">Une fen&ecirc;tre semblable &agrave; la figure suivante devrait appara&icirc;tre.</p>\r\n\r\n<p style="text-align: center;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt="La console Windows" src="https://user.oc-static.com/files/415001_416000/415158.jpg" /></p>\r\n\r\n<p style="text-align: justify;">La console Windows</p>\r\n\r\n<p style="text-align: justify;">Puis ex&eacute;cutez la commande suivante :</p>\r\n\r\n<pre>\r\n<code class="language-bash">C:\\Users\\winzou&gt; php -v​\r\nPHP 5.5.12 (cli) (built: Apr 30 2014 11:20:55)​\r\nCopyright (c) 1997-2014 The PHP Group\r\nZend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies\r\n with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n', 12, 'Normale', 'Vous savez déjà faire des sites Internet ? Vous maîtrisez votre code, mais n''êtes pas totalement satisfait ? Vous avez trop souvent l''impression de réinventer la roue ?', '<p>Ce cours est destin&eacute; aux d&eacute;butants de Symfony2. Vous n&#39;avez besoin d&#39;aucune notion sur les frameworks pour l&#39;aborder, car nous allons les d&eacute;couvrir ensemble, pas &agrave; pas. Cependant, il est fortement conseill&eacute; :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>d&#39;avoir d&eacute;j&agrave; une bonne exp&eacute;rience de PHP (<a href="https://openclassrooms.com/informatique/cours/concevez-votre-site-web-avec-php-et-mysql">consultez le cours Concevez votre site web avec PHP et MySQL par Mathieu Nebra</a>) ;</p>\r\n	</li>\r\n	<li>\r\n	<p>de ma&icirc;triser les notions de base de la POO (<a href="https://openclassrooms.com/informatique/cours/concevez-votre-site-web-avec-php-et-mysql/la-programmation-orientee-objet-6">consultez le cours La programmation orient&eacute;e objet par Mathieu Nebra</a>) ;</p>\r\n	</li>\r\n	<li>\r\n	<p>d&#39;avoir &eacute;ventuellement des notions de namespace (<a href="https://openclassrooms.com/informatique/cours/les-espaces-de-noms-en-php">consultez le cours Les espaces de nom par Victor Thuillier</a>).</p>\r\n	</li>\r\n</ul>\r\n', '2016-03-14 23:08:45', 5),
(5, 12, ' Introduction au développement web avec ASP.NET MVC', '<p>Remarquez qu&rsquo;ASP.NET MVC est utilisable &eacute;galement avec le langage de programmation VB.NET. Les principes sont les m&ecirc;mes que le C# mais la syntaxe est quand m&ecirc;me diff&eacute;rente. Si vous connaissez le VB.NET mais pas le C#, vous pourrez sans doute adapter les exemples de code que vous trouverez dans ce cours.</p>\r\n', '12introductionCsharp.pdf', '12Responsive Website - ASP .NET & Bootstrap - Part 1 - Introduction & Basic Setup - YouTube.MP4', '12outilJava.pdf', '<h3><span style="color:#FF8C00">Qu&#39;est-ce qu&#39;ASP.NET ?</span></h3>\r\n\r\n<p>Commen&ccedil;ons par le commencement : comment &ccedil;a se prononce ?<br />\r\nASP.NET peut &ecirc;tre prononc&eacute; &agrave; l&#39;anglaise (&quot;&eacute; est-ce pi dot nette&quot;), &agrave; la franco-anglaise (&quot;ah est-ce p&eacute; dot nette&quot;) ou encore &agrave; la fran&ccedil;aise (&quot;ah est-ce p&eacute; point nette&quot;). &Agrave; vous de choisir votre prononciation, celle-ci n&#39;ayant aucune incidence sur votre apprentissage.&nbsp;<img alt=":)" src="https://openclassrooms.com/bundles/common/images/smiley/smile.png" /></p>\r\n\r\n<p>Et qu&rsquo;est-ce que c&rsquo;est donc ?<br />\r\nASP.NET est la plateforme de d&eacute;veloppement de Microsoft permettant la r&eacute;alisation d&#39;applications web.</p>\r\n\r\n<p>M&ecirc;me si nous allons r&eacute;aliser des sites Internet, .NET ce n&rsquo;est pas l&rsquo;abr&eacute;viation d&rsquo;Internet, mais&nbsp;correspond, vous vous en doutez,&nbsp;au .NET du framework .NET.</p>\r\n\r\n<p>Ce qu&rsquo;on appelle &laquo; plateforme &raquo; ici est un ensemble de composants permettant de construire une application web. Quand nous construisons une maison, nous avons besoin d&rsquo;un terrain, d&rsquo;un chef de chantier, de mat&eacute;riaux de construction, d&rsquo;un plan de construction, d&rsquo;outils, et de savoir-faire (et s&ucirc;rement d&rsquo;autres choses). Et bien pour r&eacute;aliser une application web, c&rsquo;est un peu le m&ecirc;me principe, nous avons besoin (entre autres) :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>D&rsquo;un outil de d&eacute;veloppement.</p>\r\n	</li>\r\n	<li>\r\n	<p>D&rsquo;une bo&icirc;te &agrave; fonctionnalit&eacute;s pour d&eacute;velopper.</p>\r\n	</li>\r\n	<li>\r\n	<p>D&rsquo;une logique de d&eacute;veloppement.</p>\r\n	</li>\r\n	<li>\r\n	<p>D&rsquo;un langage de programmation.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>L&rsquo;outil de d&eacute;veloppement est Visual Studio (et comporte une version gratuite du nom de &laquo; Visual Studio Express pour le web &raquo;). Il est le logiciel qui va nous permettre de r&eacute;aliser le site web et qui va nous fournir les outils pour orchestrer nos d&eacute;veloppements. C&rsquo;est un peu le chef de chantier d&rsquo;ASP.NET.&nbsp;<br />\r\nLa bo&icirc;te &agrave; fonctionnalit&eacute;s c&rsquo;est le &laquo; framework .NET &raquo;, qui comporte diff&eacute;rents types de fonctionnalit&eacute;s :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>des fonctionnalit&eacute;s dites g&eacute;n&eacute;rales qui vont servir &agrave; toutes les applications utilisant le framework .NET, que ce soient des applications web ou des applications Windows, de t&eacute;l&eacute;phonie, des jeux, etc.</p>\r\n	</li>\r\n	<li>\r\n	<p>des fonctionnalit&eacute;s sp&eacute;cifiques &agrave; la cr&eacute;ation de sites web : il s&rsquo;agit d&rsquo;ASP.NET. Dans notre chantier, le framework .NET repr&eacute;senterait les mat&eacute;riaux que l&rsquo;on retrouve dans tout chantier, des briques, du ciment, etc. tandis qu&rsquo;ASP.NET repr&eacute;senterait un mat&eacute;riau sp&eacute;cifique &agrave; un type de construction, par exemple le liner pour construire une piscine.&nbsp;</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>La logique de d&eacute;veloppement correspondrait un peu au plan de construction. Elle fournit un sch&eacute;ma directeur&nbsp;permettant la r&eacute;alisation d&rsquo;un site web. ASP.NET nous propose deux logiques&nbsp;pour construire une application web : WebForms et MVC.&nbsp;Dans ce cours, nous nous int&eacute;resserons &agrave; la logique de d&eacute;veloppement MVC.<br />\r\nEnfin, le langage de programmation dans ce cours sera le C#, dont on reparlera un peu plus tard dans ce chapitre.</p>\r\n\r\n<h3><span style="color:#FFA500">MVC et WebForms</span></h3>\r\n\r\n<p>On peut dire grosso modo qu&rsquo;ASP.NET se d&eacute;compose en deux grandes parties (les fameuses logiques!), &agrave; savoir :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>ASP.NET WebForms</p>\r\n	</li>\r\n	<li>\r\n	<p>ASP.NET MVC</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>ASP.NET c&rsquo;est le socle de la plateforme de d&eacute;veloppement de Microsoft pour r&eacute;aliser des applications web. WebForms et MVC sont deux logiques diff&eacute;rentes de d&eacute;veloppement s&rsquo;inscrivant au-dessus du socle d&rsquo;ASP.NET.</p>\r\n\r\n<p>Nous allons &eacute;tudier dans ce cours ASP.NET MVC et non pas ASP.NET WebForms et je vais vous expliquer pourquoi, mais avant tout qu&rsquo;est-ce qu&rsquo;ASP.NET WebForms ?</p>\r\n\r\n<p>ASP.NET WebForms a &eacute;t&eacute; cr&eacute;&eacute; en 2002 et en est aujourd&#39;hui &agrave; sa version 5. C&#39;est une plateforme mature qui a fait ses preuves et qui est largement utilis&eacute;e dans le monde professionnel. &Agrave;&nbsp;l&rsquo;origine, ASP.NET WebForms a &eacute;t&eacute; cr&eacute;&eacute; par Microsoft afin que les d&eacute;veloppeurs d&#39;applications Windows puissent facilement cr&eacute;er des applications web &agrave; partir de leurs connaissances de l&#39;environnement de d&eacute;veloppement Windows. Ainsi, ASP.NET WebForms dispose de toute une m&eacute;canique qui permet d&#39;abstraire le plus possible le mod&egrave;le web (que nous allons d&eacute;crire en d&eacute;tail plus loin) afin que les d&eacute;veloppeurs aient l&#39;impression de se retrouver dans les conditions de d&eacute;veloppement d&#39;une application Windows. Ceci implique une certaine logique de d&eacute;veloppement. Les applications ASP.NET WebForms se rapprochent d&#39;un mod&egrave;le &eacute;v&eacute;nementiel, c&#39;est-&agrave;-dire que chaque composant d&#39;une page est capable de r&eacute;agir &agrave; une action de l&#39;utilisateur. Le mod&egrave;le ASP.NET WebForms permet &eacute;galement de conserver l&#39;&eacute;tat d&#39;une page, chose que le protocole HTTP ne permet pas.</p>\r\n\r\n<p>HTTP est l&#39;acronyme de HyperText Transfer Protocol. C&#39;est un protocole de communication client-serveur qui permet de consulter un site web depuis un navigateur Internet. Le principe est que le navigateur fait une demande au site web via ce protocole et le site web lui renvoie une r&eacute;ponse qui est le contenu de la page que le navigateur souhaite afficher. Ce protocole est sans &eacute;tat, c&rsquo;est-&agrave;-dire que les requ&ecirc;tes sont ind&eacute;pendantes les unes des autres et qu&rsquo;aucune information propre &agrave; une requ&ecirc;te n&rsquo;est conserv&eacute;e.</p>\r\n\r\n<p>ASP.NET WebForms est un logique de d&eacute;veloppement tr&egrave;s puissante pour r&eacute;aliser des applications web. Elle ajoute une couche d&rsquo;abstraction qui &eacute;tonne chaque jour ses utilisateurs. Cette couche d&#39;abstraction permet de masquer la complexit&eacute; du travail &agrave; r&eacute;aliser ainsi que toutes les sp&eacute;cificit&eacute;s de la programmation d&#39;applications web que nous d&eacute;couvrirons plus loin. ASP.NET WebForms fourni &eacute;galement beaucoup de contr&ocirc;les serveurs permettant de g&eacute;n&eacute;rer du HTML. Par exemple en quelques lignes de codes nous pouvons g&eacute;n&eacute;rer une grille compl&egrave;te affichant des donn&eacute;es, g&eacute;rant les pages multiples, les tris, etc. Mais tout ceci a un co&ucirc;t : cycle de vie de la page complexe, moins de ma&icirc;trise du HTML g&eacute;n&eacute;r&eacute;, beaucoup d&rsquo;efforts pour contourner certaines limitations, etc.</p>\r\n\r\n<p>ASP.NET MVC est plus r&eacute;cent et a fait son apparition en 2009. Cette fa&ccedil;on de penser la r&eacute;alisation des applications web s&rsquo;appuie sur un patron de conception tr&egrave;s c&eacute;l&egrave;bre, MVC (de l&rsquo;Anglais &laquo; model-view-controller &raquo;), qui existe depuis 1979, l&rsquo;ann&eacute;e de ma naissance&hellip; co&iuml;ncidence ?&nbsp;<img alt=":D" src="https://openclassrooms.com/bundles/common/images/smiley/heureux.png" /></p>\r\n\r\n<p>&nbsp;Tr&egrave;s connu sous son appellation anglaise &laquo; design pattern &raquo;, un patron de conception constitue une solution &eacute;prouv&eacute;e et reconnue comme une bonne pratique &agrave; un probl&egrave;me r&eacute;current dans la conception d&rsquo;applications informatiques. En g&eacute;n&eacute;ral, il d&eacute;crit une mod&eacute;lisation de classes utilis&eacute;es pour r&eacute;soudre un probl&egrave;me pr&eacute;cis. Il existe beaucoup de patrons de conceptions. Je d&eacute;crirai le patron de conception MVC un peu plus loin en d&eacute;tail mais sachez d&egrave;s &agrave; pr&eacute;sent que ce patron de conception permet de s&eacute;parer les donn&eacute;es et leurs pr&eacute;sentations.</p>\r\n\r\n<p>ASP.NET MVC est &eacute;galement une brique qui se rajoute au-dessus d&rsquo;ASP.NET et qui exploite toute sa plomberie. Ici le principe n&rsquo;est pas d&rsquo;offrir une couche d&rsquo;abstraction permettant de simplifier le travail,&nbsp;mais plut&ocirc;t un cadre de r&eacute;alisation des applications web, gr&acirc;ce &agrave; ce patron de conception r&eacute;put&eacute; ; une esp&egrave;ce de ligne directrice qui va nous guider dans la r&eacute;alisation d&#39;une application web. Mais ASP.NET MVC donne &eacute;galement plus de libert&eacute; dans le rendu du HTML en permettant notamment d&rsquo;utiliser des biblioth&egrave;ques Javascript externes afin d&rsquo;am&eacute;liorer l&rsquo;exp&eacute;rience utilisateur et de cr&eacute;er des applications web 2.0 puissantes, gr&acirc;ce &agrave; l&rsquo;AJAX (que nous &eacute;tudirons plus en d&eacute;tail en fin de cours).</p>\r\n\r\n<h3><span style="color:#FF8C00">Pourquoi utiliser ASP.NET MVC ?</span></h3>\r\n\r\n<p>Alors, que faut-il &eacute;tudier ? ASP.NET WebForms ou ASP.NET MVC ?</p>\r\n\r\n<p>C&rsquo;est une question importante qu&rsquo;il faut se poser ! Il n&rsquo;y a pas une bonne et une mauvaise fa&ccedil;on de concevoir des sites web avec ASP.NET, les deux solutions sont bonnes et d&eacute;pendent de vos besoins. Le mieux &eacute;tant bien s&ucirc;r d&rsquo;apprendre les deux, mais c&rsquo;est une autre histoire.&nbsp;<img alt=";)" src="https://openclassrooms.com/bundles/common/images/smiley/clin.png" /></p>\r\n\r\n<p>Vous avez besoin de cr&eacute;er votre propre contr&ocirc;le, pour le r&eacute;utiliser &agrave; plusieurs endroits, ou pour le vendre ? Vous ne connaissez rien au web mais vous savez programmer des applications Windows ?<br />\r\nAlors ASP.NET WebForms est pour vous ! Son mod&egrave;le &eacute;v&eacute;nementiel et son abstraction du protocole HTTP vous raviront et vous permettront d&rsquo;&ecirc;tre rapidement efficaces. ASP.NET WebForms a l&rsquo;avantage de poss&eacute;der de nombreux contr&ocirc;les avanc&eacute;s : une grille complexe, un treeview ou plein d&rsquo;autres choses qui ne n&eacute;cessitent que tr&egrave;s peu de code pour fonctionner et qui sont r&eacute;utilisables &agrave; souhait.</p>\r\n\r\n<p>Si vous &ecirc;tes un pro du d&eacute;veloppement web et que vous avez d&eacute;j&agrave; fait plein de PHP (ou autre langage du m&ecirc;me genre), je vous dirai de foncer sur ASP.NET MVC et de continuer &agrave; lire ce cours. Car ASP.NET MVC va se rapprocher beaucoup de ce que vous avez d&eacute;j&agrave; pu faire. Vous aurez quelques particularit&eacute;s sp&eacute;cifiques &agrave; apprendre, mais la logique sera globalement la m&ecirc;me. Vous aurez une totale ma&icirc;trise du mod&egrave;le HTTP ainsi que du code HTML g&eacute;n&eacute;r&eacute;. La ma&icirc;trise du HTML g&eacute;n&eacute;r&eacute; est &eacute;galement un &eacute;l&eacute;ment d&eacute;terminant si vous comptez faire un site qui fonctionne sur des PC mais &eacute;galement sur des tablettes ou des smartphones. Le &laquo; responsive design &raquo;, pratique tr&egrave;s &agrave; la mode qui consiste &agrave; adapter un site web au dispositif de support (smartphone, tablette, ordinateur etc.), implique d&rsquo;avoir un bon contr&ocirc;le sur le HTML g&eacute;n&eacute;r&eacute;, ce qui est plus compliqu&eacute; &agrave; faire avec ASP.NET WebForms. Par contre, avec ASP.NET MVC il vous faudra &eacute;crire vous m&ecirc;me tout le HTML n&eacute;cessaire pour cela.</p>\r\n\r\n<p>ASP.NET WebForms b&eacute;n&eacute;ficie de toute la maturit&eacute; d&rsquo;une plateforme solide, massivement utilis&eacute;e par les professionnels. ASP.NET MVC, plus r&eacute;cent, est moins mature m&ecirc;me s&rsquo;il en est d&eacute;j&agrave; &agrave; sa version 5 et que Microsoft a beaucoup investi sur le sujet. La communaut&eacute; est plus jeune mais &eacute;galement plus dynamique. Les ressources sont peut-&ecirc;tre un peu moins nombreuses, mais &ccedil;a ce n&rsquo;est pas grave car vous avez en main la cl&eacute; pour apprendre ASP.NET MVC.&nbsp;<img alt=":)" src="https://openclassrooms.com/bundles/common/images/smiley/smile.png" /></p>\r\n\r\n<p>En tous cas, c&rsquo;est ce que j&rsquo;ai choisi de vous apprendre ici : ASP.NET MVC. J&rsquo;ai personnellement travaill&eacute; avec les deux et ils sont tous les deux int&eacute;ressants. Maintenant, c&rsquo;est &agrave; vous de choisir celui que vous voulez apprendre, mais vous avez des &eacute;l&eacute;ments pour d&eacute;cider, et sauf si vous avez opt&eacute; pour l&rsquo;apprentissage d&rsquo;ASP.NET WebForms, je vous propose de continuer ensemble et &agrave; d&eacute;couvrir cette formidable plateforme.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><span style="color:#FF8C00">One ASP.NET</span></h3>\r\n\r\n<p>Je vous ai parl&eacute; d&#39;un socle de d&eacute;veloppement (ASP.NET), et de ses deux logiques diff&eacute;rentes pour r&eacute;aliser un site web (WebForms et MVC). &nbsp;Et bien sachez que nous pouvons m&eacute;langer ces deux logiques aussi pour r&eacute;aliser l&#39;application de nos r&ecirc;ves.&nbsp;Il est tout &agrave; fait possible de construire un site web en faisant &agrave; la fois du WebForms, &agrave; la fois du MVC et &agrave; la fois d&#39;autres choses dont je n&#39;ai pas encore parl&eacute; (comme Web API que j&#39;aborderai tout &agrave; la fin du cours, ou SignalR dont je ne parlerai pas et qui n&#39;a rien &agrave; voir avec du dentifrice...).</p>\r\n\r\n<p>C&#39;est ce qu&#39;on appelle One ASP.NET. C&#39;est la possibilit&eacute; d&#39;activer ces briques ind&eacute;pendamment ou ensemble dans nos diff&eacute;rents projets. Il s&#39;agit d&#39;une fonctionnalit&eacute; int&eacute;ressante qui ne nous lie pas &agrave; un socle technique d&egrave;s la construction du projet.</p>\r\n\r\n<p>Nous allons ici nous concentrer sur l&#39;apprentissage de MVC, donc je ne reviendrai pas sur One ASP.NET.</p>\r\n\r\n<h3>Pr&eacute;requis</h3>\r\n\r\n<p>Il n&rsquo;y a que deux pr&eacute;requis pour suivre ce cours&nbsp;:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Le premier, c&rsquo;est de poss&eacute;der un ordinateur.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Le plus simple, c&rsquo;est qu&rsquo;il soit &eacute;quip&eacute; du syst&egrave;me d&rsquo;exploitation Windows car je vais pr&eacute;senter l&rsquo;installation des outils gratuits dont nous allons nous servir avec ce syst&egrave;me d&rsquo;exploitation. Ce n&rsquo;est par contre pas indispensable car il existe une solution permettant de d&eacute;velopper avec ASP.NET MVC sous linux par exemple, gr&acirc;ce &agrave; Mono&nbsp;<a href="http://www.mono-project.com/ASP.NET">http://www.mono-project.com/ASP.NET</a>. Son installation et son utilisation ne sont pas d&eacute;crites dans ce cours mais vous devriez &ecirc;tre capable facilement d&rsquo;utiliser ce cours avec Mono.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Le second c&rsquo;est de parler le C#.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Le C# est le langage de d&eacute;veloppement phare de Microsoft et permet la cr&eacute;ation d&rsquo;applications informatiques de toutes sortes. Il est indispensable de conna&icirc;tre un peu le langage de programmation C# afin de pouvoir d&eacute;velopper des applications ASP.NET. Comme je vous disais en introduction, son &eacute;tude n&rsquo;est pas trait&eacute;e dans ce cours mais vous pouvez retrouver un cours complet sur C# sur OpenClassrooms &agrave; cette adresse<a href="http://fr.openclassrooms.com/informatique/cours/apprenez-a-developper-en-c">http://fr.openclassrooms.com/informatique/cours/apprenez-a-developper-en-c</a>.</p>\r\n\r\n<p>Pour r&eacute;sumer ce qu&rsquo;est le C#, on peut dire qu&rsquo;il s&rsquo;agit d&rsquo;un langage orient&eacute; objet apparu en m&ecirc;me temps que le framework .NET qui n&rsquo;a cess&eacute; d&rsquo;&eacute;voluer depuis 2001. Il permet d&rsquo;utiliser les briques du framework .NET pour r&eacute;aliser des applications de toutes sortes et notamment des applications pour ASP.NET, mais aussi pour Windows, Windows Phone, des jeux, etc. C&rsquo;est le ciment et les outils qui permettent d&rsquo;assembler les briques de nos applications.</p>\r\n', 5, 'Normale', 'Alors, ASP.NET MVC c’est quoi ? Ça va vraiment me permettre de créer des sites web ? En quoi c’est différent du HTML ? Pourquoi utiliser ASP.NET MVC plutôt qu’autre chose ? De quoi ai-je besoin pour commencer à apprendre ASP.NET MVC ? Et comment fonctionne un site web ?\r\n', '<p><br />\r\nVoil&agrave; tout ce que nous allons apprendre dans ce chapitre. Il va vous permettre de vous faire une bonne id&eacute;e des &eacute;tapes n&eacute;cessaires pour r&eacute;aliser un site web, et des solutions qu&#39; ASP.NET MVC propose pour les franchir. Entrons dans le vif du sujet et d&eacute;couvrons ce qu&rsquo;est ASP.NET&hellip;</p>\r\n', '2016-03-18 20:08:52', 7);
INSERT INTO `chapitre` (`id_chapitre`, `id_cours_chapitre`, `titre_chapitre`, `description_chapitre`, `chemin_chapitre`, `chemin_video_chapitre`, `chemin_presentation_chapitre`, `contenu_chapitre`, `duree_chapitre`, `niveau_chapitre`, `introduction_chapitre`, `objectif_chapitre`, `date_ajout`, `id_quizz_chapitre`) VALUES
(6, 9, 'QU’EST-CE QU’UN SITE WEB ?', '<h3>&nbsp;</h3>\r\n\r\n<p>Pour un utilisateur, il n&#39;est pas fondamental de comprendre comment fonctionne la m&eacute;canique qui se cache derri&egrave;re une page web, par contre cela devient indispensable pour le d&eacute;veloppeur d&#39;application web qui se doit d&#39;appr&eacute;hender correctement la fa&ccedil;on dont les choses fonctionnent afin d&#39;en tirer le meilleur parti.</p>\r\n', '9outilJava.pdf', '9C#.mp4', '9introductionCsharp.pdf', '<h3 style="text-align:justify"><span style="color:#FF8C00">Comment fonctionne un site web</span></h3>\r\n\r\n<h3 style="text-align:justify"><span style="font-size:13px; line-height:1.6">Un site web est un ensemble de fichiers qui sont h&eacute;berg&eacute;s sur un serveur, consult&eacute;s par un navigateur Internet et mis en forme par un moteur de rendu. Pas tr&egrave;s clair ? D&eacute;taillons un peu :</span></h3>\r\n\r\n<p style="text-align: justify;">Ces fichiers peuvent &ecirc;tre des simples pages HTML (extension .htm ou .html) ou des fichiers ex&eacute;cutables qui seront interpr&eacute;t&eacute;s par le moteur de rendu.</p>\r\n\r\n<p style="text-align: justify;">Un serveur, c&rsquo;est un (ou plusieurs) ordinateur puissant qui h&eacute;berge des applications et auquel on peut se connecter via une adresse Internet, par exemple :&nbsp;<a href="http://fr.openclassrooms.com/">http://fr.openclassrooms.com</a>.</p>\r\n\r\n<p style="text-align: justify;">Sur ce serveur, il y a bien s&ucirc;r un syst&egrave;me d&rsquo;exploitation (Windows, Linux,&hellip;) mais &eacute;galement des applications informatiques dont une particuli&egrave;re qui sert &agrave; ex&eacute;cuter des applications web, c&rsquo;est ce que j&rsquo;ai appel&eacute; le moteur de rendu.</p>\r\n\r\n<p style="text-align: justify;">Lorsque l&rsquo;utilisateur va vouloir naviguer sur le site d&#39;OpenClassrooms, il va saisir l&rsquo;adresse du site dans son navigateur (Internet Explorer, Firefox, Chrome, etc...) et le navigateur va afficher une page HTML.</p>\r\n\r\n<p style="text-align: justify;">Ce qu&rsquo;il se passe en fait c&rsquo;est qu&rsquo;en tentant d&rsquo;acc&eacute;der &agrave; une page d&#39;un site (par exemple http://fr.openclassrooms.com/cours), le moteur va se connecter &agrave; cette adresse et demander au moteur de rendu de transformer la page demand&eacute;e en quelque chose de compr&eacute;hensible et d&rsquo;affichable par le navigateur, en l&rsquo;occurrence du HTML.</p>\r\n\r\n<p style="text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt="Fonctionnement d''un site web" src="https://sdz-upload.s3.amazonaws.com/prod/upload/01_02_02_01_serveur_web.png" /></p>\r\n\r\n<p style="text-align: justify;"><span style="color:#FF8C00">Fonctionnement d&#39;un site web</span></p>\r\n\r\n<p style="text-align: justify;">Pour ne pas se m&eacute;langer, j&#39;ai parl&eacute; d&#39;un moteur de rendu. Il est temps de l&#39;appeler par son petit nom : le serveur web. Ici, nous parlons bien d&rsquo;une application qui s&#39;occupe de faire fonctionner l&#39;application web. &Agrave;&nbsp;ne pas confondre avec le serveur qui est une machine physique sur laquelle est install&eacute; le serveur web.</p>\r\n\r\n<h3 style="text-align:justify">Sites statiques, sites dynamiques</h3>\r\n\r\n<p style="text-align: justify;">Vous &ecirc;tes d&eacute;j&agrave; tous all&eacute;s sur un site web. Si ! D&eacute;j&agrave;, si vous lisez ce cours en ligne, c&rsquo;est que vous &ecirc;tes all&eacute;s sur une page du site d&#39;OpenClassrooms. Il existe des sites web plus ou moins compliqu&eacute;s, mais on peut les classer grosso modo en deux grandes cat&eacute;gories : les sites statiques et les sites dynamiques.</p>\r\n\r\n<p style="text-align: justify;">Dans un site dit&nbsp;<em>statique</em>&nbsp;c&rsquo;est un peu comme si vous affichiez un document issu d&rsquo;un traitement de texte. Il s&rsquo;agit d&#39;un contenu structur&eacute; qui a &eacute;t&eacute; mis &agrave; disposition &agrave; cet emplacement gr&acirc;ce &agrave; un langage de programmation fait pour &ccedil;a : le HTML. Vous saisissez dans la barre de votre navigateur Internet l&rsquo;adresse d&rsquo;un site, prenons par exemple le site d&#39;un g&icirc;te sympathique o&ugrave; j&#39;ai eu l&#39;occasion de passer quelques nuits agr&eacute;ables,&nbsp;<a href="http://www.lesmelusines.com/Decouvrir.htm">http://www.lesmelusines.com/Decouvrir.htm</a>. La page Decouvrir.htm&nbsp;correspond &agrave; un&nbsp;document structur&eacute; situ&eacute; sur le site&nbsp;<a href="http://www.lesmelusines.com/">http://www.lesmelusines.com/</a>. Il y a plusieurs documents structur&eacute;s sur ce site web (citons encore la page&nbsp;<a href="http://www.lesmelusines.com/acces.htm">http://www.lesmelusines.com/acces.htm</a>), puis&nbsp;en demandant &agrave; notre navigateur d&#39;afficher cette page, celui-ci&nbsp;interpr&egrave;te le contenu de ce document structur&eacute; et vous l&rsquo;affiche dans votre navigateur.</p>\r\n\r\n<p style="text-align: justify;">Ce genre de site est tr&egrave;s bien pour pr&eacute;senter de l&rsquo;information mais est tr&egrave;s vite limit&eacute;. Imaginons que sur le site d&#39;OpenClassrooms je vous apprenne ASP.NET MVC mais qu&rsquo;il y ait un endroit qui ne soit pas tr&egrave;s clair (honte &agrave; moi !)&hellip; L&rsquo;id&eacute;al serait de pouvoir mettre un commentaire demandant une pr&eacute;cision afin que je (ou un autre lecteur) puisse &eacute;claircir ce point particulier. Et ceci n&rsquo;est pas faisable avec du HTML tout simple&hellip;</p>\r\n\r\n<p style="text-align: justify;">C&rsquo;est l&agrave; qu&rsquo;entrent en action les sites dit&nbsp;<em>dynamiques</em>&hellip; En fait, aujourd&rsquo;hui, il n&rsquo;y a quasiment plus que &ccedil;a. Rares sont les sites qui n&rsquo;affichent que du HTML, &agrave; part quelques pages persos perdues au fin fond des m&eacute;andres d&rsquo;Internet ou bien des sites qui n&#39;ont besoin d&#39;afficher que quelques informations, comme le site du gite par exemple. Le site d&#39;OpenClassrooms par exemple est un site dynamique, les utilisateurs peuvent poser des questions sur le forum, commenter les cours, s&rsquo;inscrire, changer la photo de leur profil&hellip; Le site de votre banque est un site dynamique &eacute;galement, qui affiche en permanence l&lsquo;&eacute;tat de votre compte ; et ce n&rsquo;est pas un &ecirc;tre humain qui, &agrave; chaque fois que vous faites un paiement, vient modifier le HTML de la page pour refl&eacute;ter les changements.</p>\r\n\r\n<p style="text-align: justify;">Ces sites-l&agrave; sont capables d&rsquo;ex&eacute;cuter des programmes qui vont &ecirc;tre en mesure d&rsquo;afficher des informations diff&eacute;rentes en fonction du besoin. C&rsquo;est le r&ocirc;le du serveur web, il ex&eacute;cute la page dynamique (qui peut par exemple afficher la liste de tous les messages d&rsquo;un utilisateur) et la transforme en HTML afin qu&rsquo;elle soit affichable par le navigateur internet.</p>\r\n\r\n<p style="text-align: justify;">Lorsqu&rsquo;on acc&egrave;de &agrave; un site web et qu&rsquo;on lui demande de nous renvoyer le contenu d&rsquo;une page, on fait ce qu&rsquo;on appelle une &laquo; requ&ecirc;te HTTP &raquo; sur le site web.&nbsp;Rappelez-vous, cela correspond aux &eacute;tapes 1 et 3 dans notre sch&eacute;ma de fonctionnement d&rsquo;un site web :</p>\r\n\r\n<p style="text-align: justify;"><img alt="La requête HTTP correspond à l''envoi d''une demande de consultation et à la réception de la réponse" src="https://sdz-upload.s3.amazonaws.com/prod/upload/01_02_02_01_bis_requette_http.png" /></p>\r\n\r\n<p style="text-align: justify;">La requ&ecirc;te HTTP correspond &agrave; l&#39;envoi d&#39;une demande et &agrave; la r&eacute;ception de la r&eacute;ponse</p>\r\n\r\n<p style="text-align: justify;">Un serveur web est capable d&rsquo;interpr&eacute;ter plusieurs types de requ&ecirc;tes. Celles qui vont nous servir ici sont les requ&ecirc;tes du type GET et du type POST.</p>\r\n\r\n<p style="text-align: justify;">Une requ&ecirc;te du type GET (que l&rsquo;on peut traduire par &laquo; obtenir &raquo;) correspond &agrave; une demande qui va nous permettre d&rsquo;obtenir une ressource du site web en lecture seule. C&rsquo;est la requ&ecirc;te la plus souvent utilis&eacute;e et qui permet de dire au serveur web &laquo; donne-moi le HTML correspondant &agrave; cette page &raquo;, par exemple<a href="http://www.lesmelusines.com/index.htm">http://www.lesmelusines.com/index.htm</a>. Ici, le serveur bien disciplin&eacute; va vous renvoyer le HTML correspondant au fichier index.htm.</p>\r\n\r\n<p style="text-align: justify;">Il est possible de passer des param&egrave;tres &agrave; une requ&ecirc;te GET, pour cela on utilise une construction particuli&egrave;re de l&#39;URL. Par exemple, imaginons une page fictive du site d&#39;OpenClassrooms qui permet d&#39;afficher un cours.</p>\r\n\r\n<p style="text-align: justify;">C&#39;est juste pour l&#39;exemple car le site d&#39;OpenClassrooms ne fonctionne pas comme &ccedil;a.</p>\r\n\r\n<p style="text-align: justify;">Appelons cette page fictive pagedecours.html. Pour afficher le cours ASP.NET on pourrait envisager d&rsquo;aller sur cette page de cette fa&ccedil;on : http://fr.openclassrooms.com/pagedecours.html?cours=ASP.NET. Ceci est possible gr&acirc;ce au point d&#39;interrogation (?) qui se place apr&egrave;s le nom de la page web, qui fait office de s&eacute;parateur et qui indique qu&#39;apr&egrave;s lui, on trouve des param&egrave;tres. Ici, le param&egrave;tre cours vaudra ASP.NET, ce qui permettra d&rsquo;afficher le cours qui nous int&eacute;resse. Pour afficher le cours sur PHP, il faudrait faire par exemple http://fr.openclassrooms.com/pagedecours.html?cours=PHP.</p>\r\n\r\n<p style="text-align: justify;">Il est possible de passer plusieurs param&egrave;tres &agrave; une requ&ecirc;te GET, il suffit d&rsquo;encha&icirc;ner les param&egrave;tres et de les s&eacute;parer par le symbole &amp;. Par exemple, en reprenant l&#39;exemple de ma page fictive http://fr.openclassrooms.com/pagedecours.html, si je voulais retrouver mon cours en ligne sur ASP.NET, je pourrais faire un requ&ecirc;te GET avec deux param&egrave;tres : &nbsp;http://fr.openclassrooms.com/pagedecours.html?cours=ASP.NET&amp;auteur=nico.pyright. Vous aurez compris que le param&egrave;tre cours vaudra ASP.NET et que le param&egrave;tre auteur vaudra nico.pyright.</p>\r\n\r\n<p style="text-align: justify;">&Agrave;&nbsp;noter qu&rsquo;une requ&ecirc;te GET correspond &agrave; une consultation, elle ne doit pas modifier le contenu d&rsquo;une page et doit pouvoir &ecirc;tre r&eacute;ex&eacute;cut&eacute;e &agrave; l&rsquo;infini.</p>\r\n\r\n<p style="text-align: justify;">La requ&ecirc;te du type POST (que l&rsquo;on peut traduire par &laquo; envoyer &raquo;) soumet des donn&eacute;es &agrave; une ressource d&#39;un site web. C&rsquo;est typiquement le cas d&rsquo;un formulaire HTML, par exemple lorsque vous vous inscrivez sur le site d&#39;OpenClassrooms, vous devez fournir votre pseudo, votre email, votre mot de passe, etc. dans le formulaire d&rsquo;inscription :</p>\r\n\r\n<p style="text-align: justify;"><img alt="Le formulaire d''inscription d''Open Class Room" src="https://sdz-upload.s3.amazonaws.com/prod/upload/01_02_02_02_formulaire.png" /></p>\r\n\r\n<p style="text-align: justify;">Le formulaire d&#39;inscription d&#39;OpenClassrooms</p>\r\n\r\n<p style="text-align: justify;">Ces donn&eacute;es doivent &ecirc;tre envoy&eacute;es au serveur web afin qu&rsquo;il puisse r&eacute;aliser votre inscription et vous envoyer un email de bienvenue.</p>\r\n\r\n<p style="text-align: justify;">Une requ&ecirc;te POST modifie des donn&eacute;es, elle ne doit normalement pas pouvoir &ecirc;tre ex&eacute;cut&eacute;e &agrave; l&rsquo;infini. Par exemple ici, je ne dois pas pouvoir inscrire deux fois le m&ecirc;me utilisateur.</p>\r\n\r\n<p style="text-align: justify;">Nous verrons plus loin comment ces requ&ecirc;tes HTTP s&rsquo;inscrivent dans nos applications ASP.NET MVC.</p>\r\n\r\n<h3 style="text-align:justify">En r&eacute;sum&eacute;</h3>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;">Un site web est constitu&eacute; d&#39;un ensemble de pages HTML</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Un site web peut &ecirc;tre soit statique, soit dynamique</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Aujourd&rsquo;hui, il n&rsquo;y a quasiment plus que des sites dynamiques</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Le serveur web peut ex&eacute;cuter des mini-programmes qui renvoient du HTML afin d&rsquo;&ecirc;tre affich&eacute; dans un navigateur internet</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Pour acc&eacute;der &agrave; la page d&rsquo;un site web sur notre navigateur Internet, on effectue ce qu&rsquo;on appelle une &laquo; requ&ecirc;te http &raquo; aupr&egrave;s du serveur web h&eacute;bergeant le site. Le serveur web ex&eacute;cute alors des mini-programmes qui renvoient du HTML et nous permettent d&rsquo;afficher la page du site dans notre navigateur.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">On peut effectuer plusieurs types de requ&ecirc;tes sur un serveur web, et notamment les requ&ecirc;tes GET et POST qui permettent respectivement de consulter des informations et d&#39;envoyer des informations.</p>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li style="text-align: justify;"><a href="https://openclassrooms.com/courses/apprendre-asp-net-mvc/qu-est-ce-qu-un-site-web#">#</a></li>\r\n</ul>\r\n', 21, 'Normale', 'Alors, qu’est-ce qu’un site web et comment ça fonctionne ?\r\n\r\nPour un utilisateur, il n''est pas fondamental de comprendre comment fonctionne la mécanique qui se cache derrière une page web, par contre cela devient indispensable pour le développeur d''application web qui se doit d''appréhender correctement la façon dont les choses fonctionnent afin d''en tirer le meilleur parti.\r\n\r\nVous verrez, c''est plutôt simple. Et même si tout ne vous paraît pas clair dès le début, votre perception de ces concepts s''affinera petit à petit.', '<p>Vous verrez, c&#39;est plut&ocirc;t simple. Et m&ecirc;me si tout ne vous para&icirc;t pas clair d&egrave;s le d&eacute;but, votre perception de ces concepts s&#39;affinera petit &agrave; petit.</p>\r\n', '2016-03-18 20:14:52', 6);
INSERT INTO `chapitre` (`id_chapitre`, `id_cours_chapitre`, `titre_chapitre`, `description_chapitre`, `chemin_chapitre`, `chemin_video_chapitre`, `chemin_presentation_chapitre`, `contenu_chapitre`, `duree_chapitre`, `niveau_chapitre`, `introduction_chapitre`, `objectif_chapitre`, `date_ajout`, `id_quizz_chapitre`) VALUES
(7, NULL, 'LA COUCHE MÉTIER : LES ENTITÉS', '<p style="text-align: justify;">se charger de l&#39;enregistrement de vos donn&eacute;es en vous faisant oublier que vous avez une base de donn&eacute;es. Comment ? En s&#39;occupant de tout ! Nous n&#39;allons plus &eacute;crire de requ&ecirc;tes, ni cr&eacute;er de tables via phpMyAdmin. Dans notre code PHP, nous allons faire appel &agrave; Doctrine2, l&#39;ORM par d&eacute;faut de Symfony2, pour faire tout cela.</p>\r\n', 'introductionCsharp.pdf', 'SensioLabs.MP4', 'outilJava.pdf', '<h3 style="text-align:justify"><big><span style="color:#FFA07A"><ins>Cr&eacute;er une premi&egrave;re entit&eacute; avec Doctrine2</ins></span></big></h3>\r\n\r\n<p style="text-align: justify;">&lt;input type=&rdquo;text&rdquo;&gt;</p>\r\n\r\n<p style="text-align: justify;">Derri&egrave;re ce titre se cache la v&eacute;rit&eacute;. Une entit&eacute;, ce que l&#39;ORM va manipuler et enregistrer dans la base de donn&eacute;es, ce n&#39;est vraiment rien d&#39;autre qu&#39;un simple objet. Voici ce &agrave; quoi pourrait ressembler l&#39;objet<code>Advert</code>&nbsp;de notre plateforme d&#39;annonces :</p>\r\n\r\n<pre>\r\n<code class="language-php">&lt;?php\r\n// src/OC/PlatformBundle/Entity/Advert.php\r\n\r\nnamespace OC\\PlatformBundle\\Entity;\r\n\r\nclass Advert\r\n{\r\n  protected $id;\r\n\r\n  protected $content;\r\n\r\n  // Et bien sûr les getters/setters :\r\n\r\n  public function setId($id)\r\n  {\r\n    $this-&gt;id = $id;\r\n  }\r\n  public function getId()\r\n  {\r\n    return $this-&gt;id;\r\n  }\r\n\r\n  public function setContent($content)\r\n  {\r\n    $this-&gt;content = $content;\r\n  }\r\n  public function getContent()\r\n  {\r\n    return $this-&gt;content;\r\n  }\r\n}</code></pre>\r\n\r\n<p style="text-align: justify;">&lt;div class=&rdquo;alert alert-info&rdquo;&gt;</p>\r\n\r\n<p style="text-align: justify;">Comme vous pouvez le voir, c&#39;est tr&egrave;s simple. Un objet, des propri&eacute;t&eacute;s, et bien s&ucirc;r, les&nbsp;<em>getters/setters</em>correspondants. On pourrait en r&eacute;alit&eacute; utiliser notre objet d&egrave;s maintenant !</p>\r\n\r\n<p style="text-align: justify;"><span style="line-height:1.6">&lt;/div&gt;</span></p>\r\n\r\n<pre>\r\n<code class="language-php">&lt;?php\r\n// src/OC/PlatformBundle/Controller/AdvertController.php\r\n\r\nnamespace OC\\PlatformBundle\\Controller;\r\n\r\nuse OC\\PlatformBundle\\Entity\\Advert;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\r\n\r\nclass AdvertController extends Controller\r\n{\r\n  public function viewAction()\r\n  {\r\n    $advert = new Advert;\r\n    $advert-&gt;setContent("Recherche développeur Symfony2.");\r\n	\r\n    return $this-&gt;render(''OCPlatformBundle:Advert:view.html.twig'', array(\r\n      ''advert'' =&gt; $advert\r\n    ));\r\n  }\r\n}</code></pre>\r\n\r\n<p style="text-align: justify;">Et voil&agrave; notre objet Advert est op&eacute;rationel. Bien s&ucirc;r, l&#39;exemple est un peu limit&eacute; car statique, mais l&#39;id&eacute;e est l&agrave; et vous voyez comment l&#39;on peut se servir d&#39;une entit&eacute;. Retenez donc : une entit&eacute; n&#39;est rien d&#39;autre qu&#39;un objet.</p>\r\n\r\n<p style="text-align: justify;">Normalement, vous devez vous poser une question : comment l&#39;ORM va-t-il faire pour enregistrer cet objet dans la base de donn&eacute;es s&#39;il ne conna&icirc;t rien de nos propri&eacute;t&eacute;s&nbsp;<code>id</code>&nbsp;et&nbsp;<code>content</code>&nbsp;? Comment peut-il deviner que notre propri&eacute;t&eacute; id&nbsp;doit &ecirc;tre stock&eacute;e dans une colonne de type&nbsp;<code>INT</code>&nbsp;dans la table ? La r&eacute;ponse est aussi simple que logique : il ne devine rien, on va le lui dire !</p>\r\n\r\n<h4 style="text-align:justify">Une entit&eacute;, c&#39;est juste un objet&hellip; mais avec des commentaires !</h4>\r\n\r\n<p style="text-align: justify;">Quoi ? Des commentaires ?</p>\r\n\r\n<p style="text-align: justify;">OK, je dois avouer que ce n&#39;est pas intuitif si vous ne vous en &ecirc;tes jamais servi, mais oui, on va ajouter des commentaires dans notre code et Symfony2 va se servir directement de ces commentaires pour ajouter des fonctionnalit&eacute;s &agrave; notre application. Ce type de commentaires se nomme l&#39;<strong>annotation</strong>. Les annotations doivent respecter une syntaxe particuli&egrave;re, regardez par vous-m&ecirc;mes :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Entity/Advert.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Entity; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On d&eacute;finit le namespace des annotations utilis&eacute;es par Doctrine2 </code></p>\r\n\r\n<p style="text-align: justify;"><code>// En effet, il existe d&#39;autres annotations, on le verra par la suite, </code></p>\r\n\r\n<p style="text-align: justify;"><code>// qui utiliseront un autre namespace </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Doctrine\\ORM\\Mapping as ORM; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Entity </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;id&quot;, type=&quot;integer&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Id </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\GeneratedValue(strategy=&quot;AUTO&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $id; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;date&quot;, type=&quot;date&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $date; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;title&quot;, type=&quot;string&quot;, length=255) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $title; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;author&quot;, type=&quot;string&quot;, length=255) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $author; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;content&quot;, type=&quot;text&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $content; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Les getters </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Les setters </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">Ne recopiez toujours pas toutes ces annotations &agrave; la main, on utilise le g&eacute;n&eacute;rateur en console au paragraphe juste en dessous.</p>\r\n\r\n<p style="text-align: justify;">Attention par contre pour les prochaines annotations que vous serez amen&eacute;s &agrave; &eacute;crire &agrave; la main : elles doivent &ecirc;tre dans des commentaires de type &laquo;&nbsp;<code>/**</code>&nbsp;&raquo;, avec pr&eacute;cis&eacute;ment deux &eacute;toiles. Si vous essayez de les mettre dans un commentaire de type &laquo;&nbsp;<code>/*</code>&nbsp;&raquo; ou encore &laquo;&nbsp;<code>//</code>&nbsp;&raquo;, elles seront simplement ignor&eacute;es.</p>\r\n\r\n<p style="text-align: justify;">Gr&acirc;ce &agrave; ces annotations, Doctrine2 dispose de toutes les informations n&eacute;cessaires pour utiliser notre objet, cr&eacute;er la table correspondante, l&#39;enregistrer, d&eacute;finir un identifiant (id) en auto-incr&eacute;ment, nommer les colonnes, etc. Ces informations se nomment les&nbsp;<em>metadata</em>&nbsp;de notre entit&eacute;. Je ne vais pas &eacute;piloguer sur les annotations, elles sont suffisamment claires pour &ecirc;tre comprises par tous.&nbsp;<img alt=":)" src="https://openclassrooms.com/bundles/common/images/smiley/smile.png" />&nbsp;Ce qu&#39;on vient de faire, &agrave; savoir rajouter les&nbsp;<em>metadata</em>&nbsp;&agrave; notre objet&nbsp;<code>Advert</code>, s&#39;appelle&nbsp;<em>mapper</em>&nbsp;l&#39;objet&nbsp;<code>Advert</code>. C&#39;est-&agrave;-dire faire le lien entre notre objet de base et la repr&eacute;sentation physique qu&#39;utilise Doctrine2.</p>\r\n\r\n<p style="text-align: justify;">Sachez quand m&ecirc;me que, bien que l&#39;on utilisera les annotations tout au long de ce cours, il existe d&#39;autres moyens de d&eacute;finir les&nbsp;<em>metadata</em>&nbsp;d&#39;une entit&eacute; : en YAML, en XML et en PHP. Si cela vous int&eacute;resse, vous trouverez plus d&#39;informations sur la d&eacute;finition des&nbsp;<em>metadata</em>&nbsp;via les autres moyens dans le&nbsp;<a href="http://symfony.com/doc/master/book/doctrine.html">chapitre Doctrine2 de la documentation de Symfony2</a>.</p>\r\n\r\n<h4 style="text-align:justify">G&eacute;n&eacute;rer une entit&eacute; : le g&eacute;n&eacute;rateur &agrave; la rescousse !</h4>\r\n\r\n<p style="text-align: justify;">En tant que bon d&eacute;veloppeur, on est fain&eacute;ant &agrave; souhait, et &ccedil;a, Symfony2 l&#39;a bien compris ! On va donc se refaire une petite session en console afin de g&eacute;n&eacute;rer notre premi&egrave;re entit&eacute;. Entrez la commande suivante et suivez le guide :</p>\r\n\r\n<pre style="text-align: justify;">\r\n<samp>C:\\wamp\\www\\Symfony&gt;php&nbsp;app/console&nbsp;generate:doctrine:entity</samp></pre>\r\n\r\n<ol>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>&nbsp;&nbsp;Welcome&nbsp;to&nbsp;the&nbsp;Doctrine2&nbsp;entity&nbsp;generator\r\n\r\n\r\n\r\nThis&nbsp;command&nbsp;helps&nbsp;you&nbsp;generate&nbsp;Doctrine2&nbsp;entities.\r\n\r\nFirst,&nbsp;you&nbsp;need&nbsp;to&nbsp;give&nbsp;the&nbsp;entity&nbsp;name&nbsp;you&nbsp;want&nbsp;to&nbsp;generate.\r\nYou&nbsp;must&nbsp;use&nbsp;the&nbsp;shortcut&nbsp;notation&nbsp;like&nbsp;AcmeBlogBundle:Post.\r\n\r\nThe&nbsp;Entity&nbsp;shortcut&nbsp;name:_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Gr&acirc;ce &agrave; ce que le g&eacute;n&eacute;rateur vous dit, vous l&#39;avez compris, il faut entrer le nom de l&#39;entit&eacute; sous le format&nbsp;<code>NomBundle:NomEntit&eacute;</code>. Dans notre cas, on entre donc&nbsp;<code>OCPlatformBundle:Advert</code>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>The&nbsp;Entity&nbsp;shortcut&nbsp;name:&nbsp;OCPlatformBundle:Advert\r\n\r\nDetermine&nbsp;the&nbsp;format&nbsp;to&nbsp;use&nbsp;for&nbsp;the&nbsp;mapping&nbsp;information.\r\n\r\nConfiguration&nbsp;format&nbsp;(yml,&nbsp;xml,&nbsp;php,&nbsp;or&nbsp;annotation)&nbsp;[annotation]:_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Comme je vous l&#39;ai dit, nous allons utiliser les annotations, qui sont d&#39;ailleurs le format par d&eacute;faut. Appuyez juste sur la touche&nbsp;<kbd>Entr&eacute;e</kbd>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>Configuration&nbsp;format&nbsp;(yml,&nbsp;xml,&nbsp;php,&nbsp;or&nbsp;annotation)&nbsp;[annotation]:\r\n\r\nInstead&nbsp;of&nbsp;starting&nbsp;with&nbsp;a&nbsp;blank&nbsp;entity,&nbsp;you&nbsp;can&nbsp;add&nbsp;some&nbsp;fields&nbsp;now.\r\nNote&nbsp;that&nbsp;the&nbsp;primary&nbsp;key&nbsp;will&nbsp;be&nbsp;added&nbsp;automatically&nbsp;(named&nbsp;id).\r\n\r\nAvailable types: array, simple_array, json_array, object,\r\nboolean, integer, smallint, bigint, string, text, datetime, datetimetz,\r\ndate, time, decimal, float, blob, guid.\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):_</samp></pre>\r\n\r\n	<p style="text-align: justify;">On commence &agrave; saisir le nom de nos champs. Lisez bien ce qui est inscrit avant : Doctrine2 va ajouter automatiquement l&#39;id, de ce fait, pas besoin de le red&eacute;finir ici. On entre donc notre date :&nbsp;<code>date</code>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>New&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;date\r\nField&nbsp;type&nbsp;[string]:_</samp></pre>\r\n\r\n	<p style="text-align: justify;">C&#39;est maintenant que l&#39;on va dire &agrave; Doctrine &agrave; quel type correspond notre propri&eacute;t&eacute;&nbsp;<code>date</code>. La liste des types possibles vous est donn&eacute; par Symfony juste au dessus. Nous voulons une date avec les informations de temps, tapez donc&nbsp;<code>datetime</code>.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">R&eacute;p&eacute;tez les points 3 et 4 pour les propri&eacute;t&eacute;s&nbsp;<code>title</code>,&nbsp;<code>author</code>&nbsp;et&nbsp;<code>content</code>.&nbsp;<code>title</code>&nbsp;et<code>author</code>&nbsp;sont de type&nbsp;<code>string</code>&nbsp;de 255 caract&egrave;res (pourquoi pas).&nbsp;<code>Content</code>&nbsp;est par contre de type<code>text</code>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>New&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;date\r\nField&nbsp;type&nbsp;[string]:&nbsp;datetime\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;title\r\nField&nbsp;type&nbsp;[string]:&nbsp;string\r\nField&nbsp;length&nbsp;[255]:&nbsp;255\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;author\r\nField&nbsp;type&nbsp;[string]:&nbsp;string\r\nField&nbsp;length&nbsp;[255]:&nbsp;255\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;content\r\nField&nbsp;type&nbsp;[string]:&nbsp;text\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Lorsque vous avez fini, appuyez sur la touche&nbsp;<kbd>Entr&eacute;e</kbd>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>New&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):\r\n\r\nDo&nbsp;you&nbsp;want&nbsp;to&nbsp;generate&nbsp;an&nbsp;empty&nbsp;repository&nbsp;class&nbsp;[no]?_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Oui, on va cr&eacute;er le&nbsp;<em>repository</em>&nbsp;associ&eacute;, c&#39;est tr&egrave;s pratique, nous en reparlerons largement. Entrez donc<code>yes</code>.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Confirmez la g&eacute;n&eacute;ration, et voil&agrave; !</p>\r\n\r\n	<pre style="text-align: justify;">\r\n<samp>Do&nbsp;you&nbsp;want&nbsp;to&nbsp;generate&nbsp;an&nbsp;empty&nbsp;repository&nbsp;class&nbsp;[no]?&nbsp;yes\r\n\r\n\r\n&nbsp;&nbsp;Summary&nbsp;before&nbsp;generation\r\n\r\n\r\nYou&nbsp;are&nbsp;going&nbsp;to&nbsp;generate&nbsp;a&nbsp;&quot;OCPlatformBundle:Advert&quot;&nbsp;Doctrine2&nbsp;entity\r\nusing&nbsp;the&nbsp;&quot;annotation&quot;&nbsp;format.\r\n\r\nDo&nbsp;you&nbsp;confirm&nbsp;generation&nbsp;[yes]?\r\n\r\n\r\n&nbsp;&nbsp;Entity&nbsp;generation\r\n\r\n\r\nGenerating&nbsp;the&nbsp;entity&nbsp;code:&nbsp;OK\r\n\r\n\r\n&nbsp;&nbsp;You&nbsp;can&nbsp;now&nbsp;start&nbsp;using&nbsp;the&nbsp;generated&nbsp;code!\r\n\r\n\r\n\r\nC:\\wamp\\www\\Symfony&gt;_</samp></pre>\r\n	</li>\r\n</ol>\r\n\r\n<p style="text-align: justify;">Allez tout de suite voir le r&eacute;sultat dans le fichier&nbsp;<code>Entity/Advert.php</code>. Symfony2 a tout g&eacute;n&eacute;r&eacute;, m&ecirc;me les<em>getters</em>&nbsp;et les&nbsp;<em>setters</em>&nbsp;! Vous &ecirc;tes l&#39;heureux propri&eacute;taire d&#39;une simple classe&hellip; avec plein d&#39;annotations !</p>\r\n\r\n<p style="text-align: justify;">On a utilis&eacute; le g&eacute;n&eacute;rateur de code pour nous faciliter la vie. Mais sachez que vous pouvez tout &agrave; fait vous en passer ! Comme vous pouvez le voir, le code g&eacute;n&eacute;r&eacute; n&#39;est pas franchement compliqu&eacute;, et vous pouvez bien entendu l&#39;&eacute;crire &agrave; la main si vous pr&eacute;f&eacute;rez.</p>\r\n\r\n<h4 style="text-align:justify">Affiner notre entit&eacute; avec de la logique m&eacute;tier</h4>\r\n\r\n<p style="text-align: justify;">L&#39;exemple de notre entit&eacute; Advert&nbsp;est un peu simple, mais rappelez-vous que la couche mod&egrave;le dans une application est la couche m&eacute;tier. C&#39;est-&agrave;-dire qu&#39;en plus de g&eacute;rer vos donn&eacute;es un mod&egrave;le contient &eacute;galement la logique de l&#39;application. Voyez par vous-m&ecirc;mes avec les exemples ci-dessous.</p>\r\n\r\n<h5 style="text-align:justify">Attributs calcul&eacute;s</h5>\r\n\r\n<p style="text-align: justify;">Prenons l&#39;exemple d&#39;une entit&eacute;&nbsp;<code>Commande</code>, qui repr&eacute;senterait un ensemble de produits &agrave; acheter sur un site d&#39;e-commerce. Cette entit&eacute; aurait les attributs suivants :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;"><code>ListeProduits</code>&nbsp;qui contient un tableau des produits de la commande ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>AdresseLivraison</code>&nbsp;qui contient l&#39;adresse o&ugrave; exp&eacute;dier la commande ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>Date</code>&nbsp;qui contient la date de la prise de la commande ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Etc.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p style="text-align: justify;">Ces trois attributs devront bien entendu &ecirc;tre&nbsp;<em>mapp&eacute;s</em>&nbsp;(c&#39;est-&agrave;-dire d&eacute;finis comme des colonnes pour l&#39;ORM via des annotations) pour &ecirc;tre enregistr&eacute;s en base de donn&eacute;es par Doctrine2. Mais il existe d&#39;autres caract&eacute;ristiques pour une commande, qui n&eacute;cessitent un peu de calcul : le prix total, un &eacute;ventuel coupon de r&eacute;duction, etc. Ces caract&eacute;ristiques n&#39;ont pas &agrave; &ecirc;tre persist&eacute;es en base de donn&eacute;es, car elles peuvent &ecirc;tre d&eacute;duites des informations que l&#39;on a d&eacute;j&agrave;. Par exemple, pour avoir le prix total, il suffit de faire une boucle sur<code>ListeProduits</code>&nbsp;et d&#39;additionner le prix de chaque produit :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Exemple : </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Commande </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function getPrixTotal() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$prix = 0; </code></p>\r\n\r\n<p style="text-align: justify;"><code>foreach($this-&gt;getListeProduits() as $produit) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$prix += $produit-&gt;getPrix(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $prix; </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">N&#39;h&eacute;sitez donc pas &agrave; cr&eacute;er des m&eacute;thodes&nbsp;<code>getQuelquechose()</code>&nbsp;qui contiennent de la logique m&eacute;tier. L&#39;avantage de mettre la logique dans l&#39;entit&eacute; m&ecirc;me est que vous &ecirc;tes s&ucirc;rs de r&eacute;utiliser cette m&ecirc;me logique partout dans votre application. Il est bien plus propre et pratique de faire&nbsp;<code>&lt;?php $commande-&gt;getPrixTotal()</code>&nbsp;que d&#39;&eacute;parpiller &agrave; droite et &agrave; gauche diff&eacute;rentes mani&egrave;res de calculer ce prix total. Bien s&ucirc;r, ces m&eacute;thodes n&#39;ont pas d&#39;&eacute;quivalent&nbsp;<code>setQuelquechose()</code>, cela n&#39;a pas de sens !</p>\r\n\r\n<h5 style="text-align:justify">Attributs par d&eacute;faut</h5>\r\n\r\n<p style="text-align: justify;">Vous avez aussi parfois besoin de d&eacute;finir une certaine valeur &agrave; vos entit&eacute;s lors de leur cr&eacute;ation. Or nos entit&eacute;s sont de simples objets PHP, et la cr&eacute;ation d&#39;un objet PHP fait appel&hellip; au constructeur. Pour notre entit&eacute;<code>Advert</code>, on pourrait d&eacute;finir le constructeur suivant :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Entity/Advert.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Entity; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Doctrine\\ORM\\Mapping as ORM; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>* </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Table() </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Entity(repositoryClass=&quot;OC\\PlatformBundle\\Entity\\AdvertRepository&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>// ... </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function __construct() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Par d&eacute;faut, la date de l&#39;annonce est la date d&#39;aujourd&#39;hui </code></p>\r\n\r\n<p style="text-align: justify;"><code>$this-&gt;date = new \\Datetime(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>// ... </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<h4 style="text-align:justify">Conclusion</h4>\r\n\r\n<p style="text-align: justify;">N&#39;oubliez pas : une entit&eacute; est un objet PHP qui correspond &agrave; un besoin dans votre application.</p>\r\n\r\n<p style="text-align: justify;">N&#39;essayez donc pas de raisonner en termes de tables, base de donn&eacute;es, etc. Vous travaillez maintenant avec des objets PHP, qui contiennent une part de logique m&eacute;tier, et qui peuvent se manipuler facilement. C&#39;est vraiment important que vous fassiez l&#39;effort d&egrave;s maintenant de prendre l&#39;habitude de manipuler des objets, et non des tables.</p>\r\n\r\n<h3 style="text-align:justify">Tout sur le mapping !</h3>\r\n\r\n<p style="text-align: justify;">Vous avez rapidement vu comment&nbsp;<em>mapper</em>&nbsp;vos objets avec les annotations. Mais ces annotations permettent d&#39;inscrire pas mal d&#39;autres informations. Il faut juste en conna&icirc;tre la syntaxe, c&#39;est l&#39;objectif de cette section.</p>\r\n\r\n<p style="text-align: justify;">Tout ce qui va &ecirc;tre d&eacute;crit ici se trouve bien entendu dans&nbsp;<a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/basic-mapping.html">la documentation officielle sur le mapping</a>, que vous pouvez garder &agrave; port&eacute;e de main.</p>\r\n\r\n<h4 style="text-align:justify">L&#39;annotation&nbsp;<code>Entity</code></h4>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Entity</code>&nbsp;s&#39;applique sur une classe, il faut donc la placer avant la d&eacute;finition de la classe en PHP. Elle d&eacute;finit un objet comme &eacute;tant une entit&eacute;, et donc persist&eacute; par Doctrine. Cette annotation s&#39;&eacute;crit comme suit :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Entity</code></pre>\r\n\r\n<p style="text-align: justify;">Il existe un seul param&egrave;tre facultatif pour cette annotation,&nbsp;<code>repositoryClass</code>. Il permet de pr&eacute;ciser le namespace complet du repository qui g&egrave;re cette entit&eacute;. Nous donnerons le m&ecirc;me nom &agrave; nos repositories qu&#39;&agrave; nos entit&eacute;s, en les suffixant simplement de &laquo; Repository &raquo;. Pour notre entit&eacute;&nbsp;<code>Advert</code>, cela donne :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>@ORM\\Entity(repositoryClass=&quot;OC\\PlatformBundle\\Entity\\AdvertRepository&quot;) </code></p>\r\n\r\n<p style="text-align: justify;">Un&nbsp;<em>repository</em>&nbsp;sert &agrave; r&eacute;cup&eacute;rer vos entit&eacute;s depuis la base de donn&eacute;es, on en reparle dans un chapitre d&eacute;di&eacute; plus loin dans le cours.</p>\r\n\r\n<h4 style="text-align:justify">L&#39;annotation&nbsp;<code>Table</code></h4>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Table</code>&nbsp;s&#39;applique sur une classe &eacute;galement. C&#39;est une annotation facultative, une entit&eacute; se d&eacute;finit juste par son annotation&nbsp;<code>Entity</code>. Cependant, l&#39;annotation&nbsp;<code>Table</code>&nbsp;permet de personnaliser le nom de la table qui sera cr&eacute;&eacute;e dans la base de donn&eacute;es. Par exemple, on pourrait pr&eacute;fixer notre table&nbsp;<code>advert</code>&nbsp;par &laquo; oc &raquo; :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>@ORM\\Table(name=&quot;oc_advert&quot;) </code></p>\r\n\r\n<p style="text-align: justify;">Elle se positionne juste avant la d&eacute;finition de la classe.</p>\r\n\r\n<p style="text-align: justify;">Par d&eacute;faut, si vous ne pr&eacute;cisez pas cette annotation, le nom de la table cr&eacute;&eacute;e par Doctrine2 est le m&ecirc;me que celui de l&#39;entit&eacute;. Dans notre cas, cela aurait &eacute;t&eacute; &laquo; Advert &raquo;, avec la majuscule donc, attention car la convention de nommage des tables d&#39;une base de donn&eacute;es est de ne pas employer de majuscule. Pensez aussi que si vous &ecirc;tes sous Windows cela n&#39;a pas d&#39;importance, mais quand vous d&eacute;ploierez votre site sur un serveur sous Linux, bonjour les erreurs de casse !</p>\r\n\r\n<h4 style="text-align:justify">L&#39;annotation&nbsp;<code>Column</code></h4>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Column</code>&nbsp;s&#39;applique sur un attribut de classe, elle se positionne donc juste avant la d&eacute;finition PHP de l&#39;attribut concern&eacute;. Cette annotation permet de d&eacute;finir les caract&eacute;ristiques de la colonne concern&eacute;e. Elle s&#39;&eacute;crit comme suit :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Column</code></pre>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Column</code>&nbsp;comprend quelques param&egrave;tres, dont le plus important est le type de la colonne.</p>\r\n\r\n<h5 style="text-align:justify">Les types de colonnes</h5>\r\n\r\n<p style="text-align: justify;">Les types de colonnes que vous pouvez d&eacute;finir en annotation sont des types Doctrine,&nbsp;<em>et uniquement Doctrine</em>. Ne les confondez pas avec leurs homologues SQL ou PHP, ce sont des types &agrave; Doctrine seul. Ils font la transition des types SQL aux types PHP.</p>\r\n\r\n<p style="text-align: justify;">Voici dans le tableau suivant la liste exhaustive des types Doctrine2 disponibles.</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>\r\n			<p style="text-align: justify;">Type Doctrine</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Type SQL</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Type PHP</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Utilisation</p>\r\n			</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">VARCHAR</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Toutes les cha&icirc;nes de caract&egrave;res jusqu&#39;&agrave; 255 caract&egrave;res.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">integer</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">INT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">integer</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres jusqu&#39;&agrave; 2 147 483 647.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">smallint</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">SMALLINT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">integer</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres jusqu&#39;&agrave; 32 767.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">bigint</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">BIGINT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres jusqu&#39;&agrave; 9 223 372 036 854 775 807.<br />\r\n			Attention, PHP re&ccedil;oit une cha&icirc;ne de caract&egrave;res, car il ne supporte pas un si grand nombre (suivant que vous &ecirc;tes en 32 ou en 64 bits).</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">boolean</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">BOOLEAN</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">boolean</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Les valeurs bool&eacute;ennes&nbsp;<code>true</code>&nbsp;et&nbsp;<code>false</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">decimal</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">DECIMAL</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">double</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Les nombres &agrave; virgule.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">date ou datetime</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">DATETIME</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">objet DateTime</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Toutes les dates et heures.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">time</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">TIME</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">objet DateTime-</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Toutes les heures.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">text</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">CLOB</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Les cha&icirc;nes de caract&egrave;res de plus de 255 caract&egrave;res.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">object</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">CLOB</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Type de l&#39;objet stock&eacute;</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Stocke un objet PHP en utilisant&nbsp;<code>serialize</code>/<code>unserialize</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">array</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">CLOB</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">array</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Stocke un tableau PHP en utilisant&nbsp;<code>serialize</code>/<code>unserialize</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">float</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">FLOAT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">double</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres &agrave; virgule.<br />\r\n			Attention, fonctionne uniquement sur les serveurs dont la locale utilise un point comme s&eacute;parateur.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="text-align: justify;">Les types Doctrine sont sensibles &agrave; la casse. Ainsi, le type &laquo; String &raquo; n&#39;existe pas, il s&#39;agit du type &laquo; string &raquo;. Facile &agrave; retenir : tout est en minuscule !</p>\r\n\r\n<p style="text-align: justify;">Le type de colonne se d&eacute;finit en tant que param&egrave;tre de l&#39;annotation&nbsp;<code>Column</code>, comme suit :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Column(type="string")</code></pre>\r\n\r\n<h5 style="text-align:justify">Les param&egrave;tres de l&#39;annotation&nbsp;<code>Column</code></h5>\r\n\r\n<p style="text-align: justify;">Il existe 7 param&egrave;tres, tous facultatifs, que l&#39;on peut passer &agrave; l&#39;annotation&nbsp;<code>Column</code>&nbsp;afin de personnaliser le comportement. Voici la liste exhaustive dans le tableau suivant.</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>\r\n			<p style="text-align: justify;">Param&egrave;tre</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Valeur par d&eacute;faut</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Utilisation</p>\r\n			</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">type</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit le type de colonne comme nous venons de le voir.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">name</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Nom de l&#39;attribut</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit le nom de la colonne dans la table. Par d&eacute;faut, le nom de la colonne est le nom de l&#39;attribut de l&#39;objet, ce qui convient parfaitement.<br />\r\n			Mais vous pouvez changer le nom de la colonne, par exemple si vous pr&eacute;f&eacute;rez &laquo; isExpired &raquo; en attribut, mais &laquo; is_expired &raquo; dans la table.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">length</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">255</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit la longueur de la colonne.<br />\r\n			Applicable uniquement sur un type de colonne&nbsp;<code>string</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">unique</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code>false</code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit la colonne comme unique. Par exemple sur une colonne e-mail pour vos membres.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">nullable</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code>false</code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Permet &agrave; la colonne de contenir des&nbsp;<code>NULL</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">precision</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">0</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit la pr&eacute;cision d&#39;un nombre &agrave; virgule, c&#39;est-&agrave;-dire le nombre de chiffres en tout.<br />\r\n			Applicable uniquement sur un type de colonne&nbsp;<code>decimal</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">scale</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">0</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit le&nbsp;<em>scale</em>&nbsp;d&#39;un nombre &agrave; virgule, c&#39;est-&agrave;-dire le nombre de chiffres apr&egrave;s la virgule.<br />\r\n			Applicable uniquement sur un type de colonne&nbsp;<code>decimal</code>.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="text-align: justify;">Pour d&eacute;finir plusieurs options en m&ecirc;me temps, il faut simplement les s&eacute;parer avec une virgule. Par exemple, pour une colonne &laquo; e-mail &raquo; en&nbsp;<code>string</code>&nbsp;255 et unique, il faudra faire :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Column(type="string", length=255, unique=true)</code></pre>\r\n\r\n<h4 style="text-align:justify">Pour conclure</h4>\r\n\r\n<p style="text-align: justify;">Vous savez maintenant tout ce qu&#39;il faut savoir sur la couche Mod&egrave;le sous Symfony2 en utilisant les entit&eacute;s de l&#39;ORM Doctrine2.</p>\r\n\r\n<p style="text-align: justify;">Je vous redonne l&#39;adresse de la documentation Doctrine2, que vous serez amen&eacute;s &agrave; utiliser maintes fois dans vos d&eacute;veloppements :&nbsp;<a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">http://docs.doctrine-project.org/proje [...] st/index.html</a>. J&#39;insiste : enregistrez-la dans vos favoris, car Doctrine est une biblioth&egrave;que tr&egrave;s large, et bien que je vous donne un maximum d&#39;informations dans cette partie du cours, je ne pourrai pas tout couvrir.</p>\r\n\r\n<p style="text-align: justify;">Attention, Doctrine &eacute;tant une biblioth&egrave;que totalement ind&eacute;pendante de Symfony2, sa documentation fait r&eacute;f&eacute;rence &agrave; ce type d&#39;annotation :&nbsp;<code>/**&nbsp;@Entity&nbsp;**/</code>.<br />\r\nIl faut imp&eacute;rativement l&#39;adapter &agrave; votre projet Symfony2, en pr&eacute;fixant toutes les annotations par &laquo; ORM\\ &raquo; comme nous l&#39;avons vu dans ce chapitre :&nbsp;<code>/**&nbsp;@ORM\\Entity&nbsp;**/</code>.<br />\r\nCar dans nos entit&eacute;s, c&#39;est le namespace ORM que nous chargeons. Ainsi, l&#39;annotation&nbsp;<code>@Entity</code>n&#39;existe pas pour nous, c&#39;est&nbsp;<code>@ORM</code>&nbsp;qui existe (et tous ses enfants :&nbsp;<code>@ORM\\Entity</code>,&nbsp;<code>@ORM\\Table</code>, etc.).</p>\r\n\r\n<p style="text-align: justify;">Dans le prochain chapitre, nous apprendrons &agrave; manipuler les entit&eacute;s que nous savons maintenant construire.</p>\r\n\r\n<h4 style="text-align:justify">En r&eacute;sum&eacute;</h4>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;">Le r&ocirc;le d&#39;un ORM est de se charger de la persistance de vos donn&eacute;es : vous manipulez des objets, et lui s&#39;occupe de les enregistrer en base de donn&eacute;es.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">L&#39;ORM par d&eacute;faut livr&eacute; avec Symfony2 est Doctrine2.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">L&#39;utilisation d&#39;un ORM implique un changement de raisonnement : on utilise des objets, et on raisonne en POO. C&#39;est au d&eacute;veloppeur de s&#39;adapter &agrave; Doctrine2, et non l&#39;inverse !</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Une entit&eacute; est, du point de vue PHP, un simple objet. Du point de vue de Doctrine, c&#39;est un objet compl&eacute;t&eacute; avec des informations de&nbsp;<em>mapping</em>&nbsp;qui lui permettent d&#39;enregistrer correctement l&#39;objet en base de donn&eacute;es.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Une entit&eacute; est, du point de vue de votre code, un objet PHP qui correspond &agrave; un besoin, et ind&eacute;pendant du reste de votre application.</p>\r\n	</li>\r\n</ul>\r\n', 30, 'Difficile', 'L''objectif d''un ORM (pour Object-Relation Mapper, soit en français « lien objet-relation ») est simple : se charger de l''enregistrement de vos données en vous faisant oublier que vous avez une base de données. Comment ? En s''occupant de tout ! Nous n''allons plus écrire de requêtes, ni créer de tables via phpMyAdmin. Dans notre code PHP, nous allons faire appel à Doctrine2, l''ORM par défaut de Symfony2, pour faire tout cela.', '<p>Mais l&#39;effort que vous devrez faire pour bien utiliser un ORM, c&#39;est d&#39;oublier votre c&ocirc;t&eacute; &laquo; administrateur de base de donn&eacute;es &raquo;. Oubliez les requ&ecirc;tes SQL, pensez objet !</p>\r\n', '2016-03-24 23:07:39', NULL);
INSERT INTO `chapitre` (`id_chapitre`, `id_cours_chapitre`, `titre_chapitre`, `description_chapitre`, `chemin_chapitre`, `chemin_video_chapitre`, `chemin_presentation_chapitre`, `contenu_chapitre`, `duree_chapitre`, `niveau_chapitre`, `introduction_chapitre`, `objectif_chapitre`, `date_ajout`, `id_quizz_chapitre`) VALUES
(8, 9, 'LA COUCHE MÉTIER : LES ENTITÉS', '<p style="text-align: justify;">se charger de l&#39;enregistrement de vos donn&eacute;es en vous faisant oublier que vous avez une base de donn&eacute;es. Comment ? En s&#39;occupant de tout ! Nous n&#39;allons plus &eacute;crire de requ&ecirc;tes, ni cr&eacute;er de tables via phpMyAdmin. Dans notre code PHP, nous allons faire appel &agrave; Doctrine2, l&#39;ORM par d&eacute;faut de Symfony2, pour faire tout cela.</p>\r\n', '9presentationJava.pdf', '9SensioLabs.MP4', '9presentationCSharp .pdf', '<h3 style="text-align:justify"><big><span style="color:#FFA07A"><ins>Cr&eacute;er une premi&egrave;re entit&eacute; avec Doctrine2</ins></span></big></h3>\r\n\r\n<p style="text-align: justify;">&lt;input type=&rdquo;text&rdquo;&gt;</p>\r\n\r\n<p style="text-align: justify;">Derri&egrave;re ce titre se cache la v&eacute;rit&eacute;. Une entit&eacute;, ce que l&#39;ORM va manipuler et enregistrer dans la base de donn&eacute;es, ce n&#39;est vraiment rien d&#39;autre qu&#39;un simple objet. Voici ce &agrave; quoi pourrait ressembler l&#39;objet<code>Advert</code>&nbsp;de notre plateforme d&#39;annonces :</p>\r\n\r\n<pre>\r\n<code class="language-php">&lt;?php\r\n// src/OC/PlatformBundle/Entity/Advert.php\r\n\r\nnamespace OC\\PlatformBundle\\Entity;\r\n\r\nclass Advert\r\n{\r\n  protected $id;\r\n\r\n  protected $content;\r\n\r\n  // Et bien sûr les getters/setters :\r\n\r\n  public function setId($id)\r\n  {\r\n    $this-&gt;id = $id;\r\n  }\r\n  public function getId()\r\n  {\r\n    return $this-&gt;id;\r\n  }\r\n\r\n  public function setContent($content)\r\n  {\r\n    $this-&gt;content = $content;\r\n  }\r\n  public function getContent()\r\n  {\r\n    return $this-&gt;content;\r\n  }\r\n}</code></pre>\r\n\r\n<p style="text-align: justify;">&lt;div class=&rdquo;alert alert-info&rdquo;&gt;</p>\r\n\r\n<p style="text-align: justify;">Comme vous pouvez le voir, c&#39;est tr&egrave;s simple. Un objet, des propri&eacute;t&eacute;s, et bien s&ucirc;r, les&nbsp;<em>getters/setters</em>correspondants. On pourrait en r&eacute;alit&eacute; utiliser notre objet d&egrave;s maintenant !</p>\r\n\r\n<p style="text-align: justify;"><span style="line-height:1.6">&lt;/div&gt;</span></p>\r\n\r\n<pre>\r\n<code class="language-php">&lt;?php\r\n// src/OC/PlatformBundle/Controller/AdvertController.php\r\n\r\nnamespace OC\\PlatformBundle\\Controller;\r\n\r\nuse OC\\PlatformBundle\\Entity\\Advert;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\r\n\r\nclass AdvertController extends Controller\r\n{\r\n  public function viewAction()\r\n  {\r\n    $advert = new Advert;\r\n    $advert-&gt;setContent("Recherche développeur Symfony2.");\r\n	\r\n    return $this-&gt;render(''OCPlatformBundle:Advert:view.html.twig'', array(\r\n      ''advert'' =&gt; $advert\r\n    ));\r\n  }\r\n}</code></pre>\r\n\r\n<p style="text-align: justify;">Et voil&agrave; notre objet Advert est op&eacute;rationel. Bien s&ucirc;r, l&#39;exemple est un peu limit&eacute; car statique, mais l&#39;id&eacute;e est l&agrave; et vous voyez comment l&#39;on peut se servir d&#39;une entit&eacute;. Retenez donc : une entit&eacute; n&#39;est rien d&#39;autre qu&#39;un objet.</p>\r\n\r\n<p style="text-align: justify;">Normalement, vous devez vous poser une question : comment l&#39;ORM va-t-il faire pour enregistrer cet objet dans la base de donn&eacute;es s&#39;il ne conna&icirc;t rien de nos propri&eacute;t&eacute;s&nbsp;<code>id</code>&nbsp;et&nbsp;<code>content</code>&nbsp;? Comment peut-il deviner que notre propri&eacute;t&eacute; id&nbsp;doit &ecirc;tre stock&eacute;e dans une colonne de type&nbsp;<code>INT</code>&nbsp;dans la table ? La r&eacute;ponse est aussi simple que logique : il ne devine rien, on va le lui dire !</p>\r\n\r\n<h4 style="text-align:justify">Une entit&eacute;, c&#39;est juste un objet&hellip; mais avec des commentaires !</h4>\r\n\r\n<p style="text-align: justify;">Quoi ? Des commentaires ?</p>\r\n\r\n<p style="text-align: justify;">OK, je dois avouer que ce n&#39;est pas intuitif si vous ne vous en &ecirc;tes jamais servi, mais oui, on va ajouter des commentaires dans notre code et Symfony2 va se servir directement de ces commentaires pour ajouter des fonctionnalit&eacute;s &agrave; notre application. Ce type de commentaires se nomme l&#39;<strong>annotation</strong>. Les annotations doivent respecter une syntaxe particuli&egrave;re, regardez par vous-m&ecirc;mes :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Entity/Advert.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Entity; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On d&eacute;finit le namespace des annotations utilis&eacute;es par Doctrine2 </code></p>\r\n\r\n<p style="text-align: justify;"><code>// En effet, il existe d&#39;autres annotations, on le verra par la suite, </code></p>\r\n\r\n<p style="text-align: justify;"><code>// qui utiliseront un autre namespace </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Doctrine\\ORM\\Mapping as ORM; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Entity </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;id&quot;, type=&quot;integer&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Id </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\GeneratedValue(strategy=&quot;AUTO&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $id; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;date&quot;, type=&quot;date&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $date; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;title&quot;, type=&quot;string&quot;, length=255) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $title; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;author&quot;, type=&quot;string&quot;, length=255) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $author; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;content&quot;, type=&quot;text&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>protected $content; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Les getters </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Les setters </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">Ne recopiez toujours pas toutes ces annotations &agrave; la main, on utilise le g&eacute;n&eacute;rateur en console au paragraphe juste en dessous.</p>\r\n\r\n<p style="text-align: justify;">Attention par contre pour les prochaines annotations que vous serez amen&eacute;s &agrave; &eacute;crire &agrave; la main : elles doivent &ecirc;tre dans des commentaires de type &laquo;&nbsp;<code>/**</code>&nbsp;&raquo;, avec pr&eacute;cis&eacute;ment deux &eacute;toiles. Si vous essayez de les mettre dans un commentaire de type &laquo;&nbsp;<code>/*</code>&nbsp;&raquo; ou encore &laquo;&nbsp;<code>//</code>&nbsp;&raquo;, elles seront simplement ignor&eacute;es.</p>\r\n\r\n<p style="text-align: justify;">Gr&acirc;ce &agrave; ces annotations, Doctrine2 dispose de toutes les informations n&eacute;cessaires pour utiliser notre objet, cr&eacute;er la table correspondante, l&#39;enregistrer, d&eacute;finir un identifiant (id) en auto-incr&eacute;ment, nommer les colonnes, etc. Ces informations se nomment les&nbsp;<em>metadata</em>&nbsp;de notre entit&eacute;. Je ne vais pas &eacute;piloguer sur les annotations, elles sont suffisamment claires pour &ecirc;tre comprises par tous.&nbsp;<img alt=":)" src="https://openclassrooms.com/bundles/common/images/smiley/smile.png" />&nbsp;Ce qu&#39;on vient de faire, &agrave; savoir rajouter les&nbsp;<em>metadata</em>&nbsp;&agrave; notre objet&nbsp;<code>Advert</code>, s&#39;appelle&nbsp;<em>mapper</em>&nbsp;l&#39;objet&nbsp;<code>Advert</code>. C&#39;est-&agrave;-dire faire le lien entre notre objet de base et la repr&eacute;sentation physique qu&#39;utilise Doctrine2.</p>\r\n\r\n<p style="text-align: justify;">Sachez quand m&ecirc;me que, bien que l&#39;on utilisera les annotations tout au long de ce cours, il existe d&#39;autres moyens de d&eacute;finir les&nbsp;<em>metadata</em>&nbsp;d&#39;une entit&eacute; : en YAML, en XML et en PHP. Si cela vous int&eacute;resse, vous trouverez plus d&#39;informations sur la d&eacute;finition des&nbsp;<em>metadata</em>&nbsp;via les autres moyens dans le&nbsp;<a href="http://symfony.com/doc/master/book/doctrine.html">chapitre Doctrine2 de la documentation de Symfony2</a>.</p>\r\n\r\n<h4 style="text-align:justify">G&eacute;n&eacute;rer une entit&eacute; : le g&eacute;n&eacute;rateur &agrave; la rescousse !</h4>\r\n\r\n<p style="text-align: justify;">En tant que bon d&eacute;veloppeur, on est fain&eacute;ant &agrave; souhait, et &ccedil;a, Symfony2 l&#39;a bien compris ! On va donc se refaire une petite session en console afin de g&eacute;n&eacute;rer notre premi&egrave;re entit&eacute;. Entrez la commande suivante et suivez le guide :</p>\r\n\r\n<pre style="text-align: justify;">\r\n<samp>C:\\wamp\\www\\Symfony&gt;php&nbsp;app/console&nbsp;generate:doctrine:entity</samp></pre>\r\n\r\n<ol>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>&nbsp;&nbsp;Welcome&nbsp;to&nbsp;the&nbsp;Doctrine2&nbsp;entity&nbsp;generator\r\n\r\n\r\n\r\nThis&nbsp;command&nbsp;helps&nbsp;you&nbsp;generate&nbsp;Doctrine2&nbsp;entities.\r\n\r\nFirst,&nbsp;you&nbsp;need&nbsp;to&nbsp;give&nbsp;the&nbsp;entity&nbsp;name&nbsp;you&nbsp;want&nbsp;to&nbsp;generate.\r\nYou&nbsp;must&nbsp;use&nbsp;the&nbsp;shortcut&nbsp;notation&nbsp;like&nbsp;AcmeBlogBundle:Post.\r\n\r\nThe&nbsp;Entity&nbsp;shortcut&nbsp;name:_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Gr&acirc;ce &agrave; ce que le g&eacute;n&eacute;rateur vous dit, vous l&#39;avez compris, il faut entrer le nom de l&#39;entit&eacute; sous le format&nbsp;<code>NomBundle:NomEntit&eacute;</code>. Dans notre cas, on entre donc&nbsp;<code>OCPlatformBundle:Advert</code>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>The&nbsp;Entity&nbsp;shortcut&nbsp;name:&nbsp;OCPlatformBundle:Advert\r\n\r\nDetermine&nbsp;the&nbsp;format&nbsp;to&nbsp;use&nbsp;for&nbsp;the&nbsp;mapping&nbsp;information.\r\n\r\nConfiguration&nbsp;format&nbsp;(yml,&nbsp;xml,&nbsp;php,&nbsp;or&nbsp;annotation)&nbsp;[annotation]:_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Comme je vous l&#39;ai dit, nous allons utiliser les annotations, qui sont d&#39;ailleurs le format par d&eacute;faut. Appuyez juste sur la touche&nbsp;<kbd>Entr&eacute;e</kbd>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>Configuration&nbsp;format&nbsp;(yml,&nbsp;xml,&nbsp;php,&nbsp;or&nbsp;annotation)&nbsp;[annotation]:\r\n\r\nInstead&nbsp;of&nbsp;starting&nbsp;with&nbsp;a&nbsp;blank&nbsp;entity,&nbsp;you&nbsp;can&nbsp;add&nbsp;some&nbsp;fields&nbsp;now.\r\nNote&nbsp;that&nbsp;the&nbsp;primary&nbsp;key&nbsp;will&nbsp;be&nbsp;added&nbsp;automatically&nbsp;(named&nbsp;id).\r\n\r\nAvailable types: array, simple_array, json_array, object,\r\nboolean, integer, smallint, bigint, string, text, datetime, datetimetz,\r\ndate, time, decimal, float, blob, guid.\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):_</samp></pre>\r\n\r\n	<p style="text-align: justify;">On commence &agrave; saisir le nom de nos champs. Lisez bien ce qui est inscrit avant : Doctrine2 va ajouter automatiquement l&#39;id, de ce fait, pas besoin de le red&eacute;finir ici. On entre donc notre date :&nbsp;<code>date</code>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>New&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;date\r\nField&nbsp;type&nbsp;[string]:_</samp></pre>\r\n\r\n	<p style="text-align: justify;">C&#39;est maintenant que l&#39;on va dire &agrave; Doctrine &agrave; quel type correspond notre propri&eacute;t&eacute;&nbsp;<code>date</code>. La liste des types possibles vous est donn&eacute; par Symfony juste au dessus. Nous voulons une date avec les informations de temps, tapez donc&nbsp;<code>datetime</code>.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">R&eacute;p&eacute;tez les points 3 et 4 pour les propri&eacute;t&eacute;s&nbsp;<code>title</code>,&nbsp;<code>author</code>&nbsp;et&nbsp;<code>content</code>.&nbsp;<code>title</code>&nbsp;et<code>author</code>&nbsp;sont de type&nbsp;<code>string</code>&nbsp;de 255 caract&egrave;res (pourquoi pas).&nbsp;<code>Content</code>&nbsp;est par contre de type<code>text</code>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>New&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;date\r\nField&nbsp;type&nbsp;[string]:&nbsp;datetime\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;title\r\nField&nbsp;type&nbsp;[string]:&nbsp;string\r\nField&nbsp;length&nbsp;[255]:&nbsp;255\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;author\r\nField&nbsp;type&nbsp;[string]:&nbsp;string\r\nField&nbsp;length&nbsp;[255]:&nbsp;255\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):&nbsp;content\r\nField&nbsp;type&nbsp;[string]:&nbsp;text\r\n\r\nNew&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Lorsque vous avez fini, appuyez sur la touche&nbsp;<kbd>Entr&eacute;e</kbd>.</p>\r\n	</li>\r\n	<li>\r\n	<pre style="text-align: justify;">\r\n<samp>New&nbsp;field&nbsp;name&nbsp;(press&nbsp;&lt;return&gt;&nbsp;to&nbsp;stop&nbsp;adding&nbsp;fields):\r\n\r\nDo&nbsp;you&nbsp;want&nbsp;to&nbsp;generate&nbsp;an&nbsp;empty&nbsp;repository&nbsp;class&nbsp;[no]?_</samp></pre>\r\n\r\n	<p style="text-align: justify;">Oui, on va cr&eacute;er le&nbsp;<em>repository</em>&nbsp;associ&eacute;, c&#39;est tr&egrave;s pratique, nous en reparlerons largement. Entrez donc<code>yes</code>.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Confirmez la g&eacute;n&eacute;ration, et voil&agrave; !</p>\r\n\r\n	<pre style="text-align: justify;">\r\n<samp>Do&nbsp;you&nbsp;want&nbsp;to&nbsp;generate&nbsp;an&nbsp;empty&nbsp;repository&nbsp;class&nbsp;[no]?&nbsp;yes\r\n\r\n\r\n&nbsp;&nbsp;Summary&nbsp;before&nbsp;generation\r\n\r\n\r\nYou&nbsp;are&nbsp;going&nbsp;to&nbsp;generate&nbsp;a&nbsp;&quot;OCPlatformBundle:Advert&quot;&nbsp;Doctrine2&nbsp;entity\r\nusing&nbsp;the&nbsp;&quot;annotation&quot;&nbsp;format.\r\n\r\nDo&nbsp;you&nbsp;confirm&nbsp;generation&nbsp;[yes]?\r\n\r\n\r\n&nbsp;&nbsp;Entity&nbsp;generation\r\n\r\n\r\nGenerating&nbsp;the&nbsp;entity&nbsp;code:&nbsp;OK\r\n\r\n\r\n&nbsp;&nbsp;You&nbsp;can&nbsp;now&nbsp;start&nbsp;using&nbsp;the&nbsp;generated&nbsp;code!\r\n\r\n\r\n\r\nC:\\wamp\\www\\Symfony&gt;_</samp></pre>\r\n	</li>\r\n</ol>\r\n\r\n<p style="text-align: justify;">Allez tout de suite voir le r&eacute;sultat dans le fichier&nbsp;<code>Entity/Advert.php</code>. Symfony2 a tout g&eacute;n&eacute;r&eacute;, m&ecirc;me les<em>getters</em>&nbsp;et les&nbsp;<em>setters</em>&nbsp;! Vous &ecirc;tes l&#39;heureux propri&eacute;taire d&#39;une simple classe&hellip; avec plein d&#39;annotations !</p>\r\n\r\n<p style="text-align: justify;">On a utilis&eacute; le g&eacute;n&eacute;rateur de code pour nous faciliter la vie. Mais sachez que vous pouvez tout &agrave; fait vous en passer ! Comme vous pouvez le voir, le code g&eacute;n&eacute;r&eacute; n&#39;est pas franchement compliqu&eacute;, et vous pouvez bien entendu l&#39;&eacute;crire &agrave; la main si vous pr&eacute;f&eacute;rez.</p>\r\n\r\n<h4 style="text-align:justify">Affiner notre entit&eacute; avec de la logique m&eacute;tier</h4>\r\n\r\n<p style="text-align: justify;">L&#39;exemple de notre entit&eacute; Advert&nbsp;est un peu simple, mais rappelez-vous que la couche mod&egrave;le dans une application est la couche m&eacute;tier. C&#39;est-&agrave;-dire qu&#39;en plus de g&eacute;rer vos donn&eacute;es un mod&egrave;le contient &eacute;galement la logique de l&#39;application. Voyez par vous-m&ecirc;mes avec les exemples ci-dessous.</p>\r\n\r\n<h5 style="text-align:justify">Attributs calcul&eacute;s</h5>\r\n\r\n<p style="text-align: justify;">Prenons l&#39;exemple d&#39;une entit&eacute;&nbsp;<code>Commande</code>, qui repr&eacute;senterait un ensemble de produits &agrave; acheter sur un site d&#39;e-commerce. Cette entit&eacute; aurait les attributs suivants :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;"><code>ListeProduits</code>&nbsp;qui contient un tableau des produits de la commande ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>AdresseLivraison</code>&nbsp;qui contient l&#39;adresse o&ugrave; exp&eacute;dier la commande ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>Date</code>&nbsp;qui contient la date de la prise de la commande ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Etc.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p style="text-align: justify;">Ces trois attributs devront bien entendu &ecirc;tre&nbsp;<em>mapp&eacute;s</em>&nbsp;(c&#39;est-&agrave;-dire d&eacute;finis comme des colonnes pour l&#39;ORM via des annotations) pour &ecirc;tre enregistr&eacute;s en base de donn&eacute;es par Doctrine2. Mais il existe d&#39;autres caract&eacute;ristiques pour une commande, qui n&eacute;cessitent un peu de calcul : le prix total, un &eacute;ventuel coupon de r&eacute;duction, etc. Ces caract&eacute;ristiques n&#39;ont pas &agrave; &ecirc;tre persist&eacute;es en base de donn&eacute;es, car elles peuvent &ecirc;tre d&eacute;duites des informations que l&#39;on a d&eacute;j&agrave;. Par exemple, pour avoir le prix total, il suffit de faire une boucle sur<code>ListeProduits</code>&nbsp;et d&#39;additionner le prix de chaque produit :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Exemple : </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Commande </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function getPrixTotal() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$prix = 0; </code></p>\r\n\r\n<p style="text-align: justify;"><code>foreach($this-&gt;getListeProduits() as $produit) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$prix += $produit-&gt;getPrix(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $prix; </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">N&#39;h&eacute;sitez donc pas &agrave; cr&eacute;er des m&eacute;thodes&nbsp;<code>getQuelquechose()</code>&nbsp;qui contiennent de la logique m&eacute;tier. L&#39;avantage de mettre la logique dans l&#39;entit&eacute; m&ecirc;me est que vous &ecirc;tes s&ucirc;rs de r&eacute;utiliser cette m&ecirc;me logique partout dans votre application. Il est bien plus propre et pratique de faire&nbsp;<code>&lt;?php $commande-&gt;getPrixTotal()</code>&nbsp;que d&#39;&eacute;parpiller &agrave; droite et &agrave; gauche diff&eacute;rentes mani&egrave;res de calculer ce prix total. Bien s&ucirc;r, ces m&eacute;thodes n&#39;ont pas d&#39;&eacute;quivalent&nbsp;<code>setQuelquechose()</code>, cela n&#39;a pas de sens !</p>\r\n\r\n<h5 style="text-align:justify">Attributs par d&eacute;faut</h5>\r\n\r\n<p style="text-align: justify;">Vous avez aussi parfois besoin de d&eacute;finir une certaine valeur &agrave; vos entit&eacute;s lors de leur cr&eacute;ation. Or nos entit&eacute;s sont de simples objets PHP, et la cr&eacute;ation d&#39;un objet PHP fait appel&hellip; au constructeur. Pour notre entit&eacute;<code>Advert</code>, on pourrait d&eacute;finir le constructeur suivant :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Entity/Advert.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Entity; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Doctrine\\ORM\\Mapping as ORM; </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>* </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Table() </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Entity(repositoryClass=&quot;OC\\PlatformBundle\\Entity\\AdvertRepository&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>// ... </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function __construct() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Par d&eacute;faut, la date de l&#39;annonce est la date d&#39;aujourd&#39;hui </code></p>\r\n\r\n<p style="text-align: justify;"><code>$this-&gt;date = new \\Datetime(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>// ... </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<h4 style="text-align:justify">Conclusion</h4>\r\n\r\n<p style="text-align: justify;">N&#39;oubliez pas : une entit&eacute; est un objet PHP qui correspond &agrave; un besoin dans votre application.</p>\r\n\r\n<p style="text-align: justify;">N&#39;essayez donc pas de raisonner en termes de tables, base de donn&eacute;es, etc. Vous travaillez maintenant avec des objets PHP, qui contiennent une part de logique m&eacute;tier, et qui peuvent se manipuler facilement. C&#39;est vraiment important que vous fassiez l&#39;effort d&egrave;s maintenant de prendre l&#39;habitude de manipuler des objets, et non des tables.</p>\r\n\r\n<h3 style="text-align:justify">Tout sur le mapping !</h3>\r\n\r\n<p style="text-align: justify;">Vous avez rapidement vu comment&nbsp;<em>mapper</em>&nbsp;vos objets avec les annotations. Mais ces annotations permettent d&#39;inscrire pas mal d&#39;autres informations. Il faut juste en conna&icirc;tre la syntaxe, c&#39;est l&#39;objectif de cette section.</p>\r\n\r\n<p style="text-align: justify;">Tout ce qui va &ecirc;tre d&eacute;crit ici se trouve bien entendu dans&nbsp;<a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/basic-mapping.html">la documentation officielle sur le mapping</a>, que vous pouvez garder &agrave; port&eacute;e de main.</p>\r\n\r\n<h4 style="text-align:justify">L&#39;annotation&nbsp;<code>Entity</code></h4>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Entity</code>&nbsp;s&#39;applique sur une classe, il faut donc la placer avant la d&eacute;finition de la classe en PHP. Elle d&eacute;finit un objet comme &eacute;tant une entit&eacute;, et donc persist&eacute; par Doctrine. Cette annotation s&#39;&eacute;crit comme suit :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Entity</code></pre>\r\n\r\n<p style="text-align: justify;">Il existe un seul param&egrave;tre facultatif pour cette annotation,&nbsp;<code>repositoryClass</code>. Il permet de pr&eacute;ciser le namespace complet du repository qui g&egrave;re cette entit&eacute;. Nous donnerons le m&ecirc;me nom &agrave; nos repositories qu&#39;&agrave; nos entit&eacute;s, en les suffixant simplement de &laquo; Repository &raquo;. Pour notre entit&eacute;&nbsp;<code>Advert</code>, cela donne :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>@ORM\\Entity(repositoryClass=&quot;OC\\PlatformBundle\\Entity\\AdvertRepository&quot;) </code></p>\r\n\r\n<p style="text-align: justify;">Un&nbsp;<em>repository</em>&nbsp;sert &agrave; r&eacute;cup&eacute;rer vos entit&eacute;s depuis la base de donn&eacute;es, on en reparle dans un chapitre d&eacute;di&eacute; plus loin dans le cours.</p>\r\n\r\n<h4 style="text-align:justify">L&#39;annotation&nbsp;<code>Table</code></h4>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Table</code>&nbsp;s&#39;applique sur une classe &eacute;galement. C&#39;est une annotation facultative, une entit&eacute; se d&eacute;finit juste par son annotation&nbsp;<code>Entity</code>. Cependant, l&#39;annotation&nbsp;<code>Table</code>&nbsp;permet de personnaliser le nom de la table qui sera cr&eacute;&eacute;e dans la base de donn&eacute;es. Par exemple, on pourrait pr&eacute;fixer notre table&nbsp;<code>advert</code>&nbsp;par &laquo; oc &raquo; :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>@ORM\\Table(name=&quot;oc_advert&quot;) </code></p>\r\n\r\n<p style="text-align: justify;">Elle se positionne juste avant la d&eacute;finition de la classe.</p>\r\n\r\n<p style="text-align: justify;">Par d&eacute;faut, si vous ne pr&eacute;cisez pas cette annotation, le nom de la table cr&eacute;&eacute;e par Doctrine2 est le m&ecirc;me que celui de l&#39;entit&eacute;. Dans notre cas, cela aurait &eacute;t&eacute; &laquo; Advert &raquo;, avec la majuscule donc, attention car la convention de nommage des tables d&#39;une base de donn&eacute;es est de ne pas employer de majuscule. Pensez aussi que si vous &ecirc;tes sous Windows cela n&#39;a pas d&#39;importance, mais quand vous d&eacute;ploierez votre site sur un serveur sous Linux, bonjour les erreurs de casse !</p>\r\n\r\n<h4 style="text-align:justify">L&#39;annotation&nbsp;<code>Column</code></h4>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Column</code>&nbsp;s&#39;applique sur un attribut de classe, elle se positionne donc juste avant la d&eacute;finition PHP de l&#39;attribut concern&eacute;. Cette annotation permet de d&eacute;finir les caract&eacute;ristiques de la colonne concern&eacute;e. Elle s&#39;&eacute;crit comme suit :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Column</code></pre>\r\n\r\n<p style="text-align: justify;">L&#39;annotation&nbsp;<code>Column</code>&nbsp;comprend quelques param&egrave;tres, dont le plus important est le type de la colonne.</p>\r\n\r\n<h5 style="text-align:justify">Les types de colonnes</h5>\r\n\r\n<p style="text-align: justify;">Les types de colonnes que vous pouvez d&eacute;finir en annotation sont des types Doctrine,&nbsp;<em>et uniquement Doctrine</em>. Ne les confondez pas avec leurs homologues SQL ou PHP, ce sont des types &agrave; Doctrine seul. Ils font la transition des types SQL aux types PHP.</p>\r\n\r\n<p style="text-align: justify;">Voici dans le tableau suivant la liste exhaustive des types Doctrine2 disponibles.</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>\r\n			<p style="text-align: justify;">Type Doctrine</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Type SQL</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Type PHP</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Utilisation</p>\r\n			</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">VARCHAR</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Toutes les cha&icirc;nes de caract&egrave;res jusqu&#39;&agrave; 255 caract&egrave;res.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">integer</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">INT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">integer</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres jusqu&#39;&agrave; 2 147 483 647.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">smallint</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">SMALLINT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">integer</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres jusqu&#39;&agrave; 32 767.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">bigint</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">BIGINT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres jusqu&#39;&agrave; 9 223 372 036 854 775 807.<br />\r\n			Attention, PHP re&ccedil;oit une cha&icirc;ne de caract&egrave;res, car il ne supporte pas un si grand nombre (suivant que vous &ecirc;tes en 32 ou en 64 bits).</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">boolean</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">BOOLEAN</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">boolean</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Les valeurs bool&eacute;ennes&nbsp;<code>true</code>&nbsp;et&nbsp;<code>false</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">decimal</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">DECIMAL</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">double</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Les nombres &agrave; virgule.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">date ou datetime</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">DATETIME</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">objet DateTime</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Toutes les dates et heures.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">time</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">TIME</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">objet DateTime-</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Toutes les heures.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">text</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">CLOB</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Les cha&icirc;nes de caract&egrave;res de plus de 255 caract&egrave;res.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">object</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">CLOB</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Type de l&#39;objet stock&eacute;</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Stocke un objet PHP en utilisant&nbsp;<code>serialize</code>/<code>unserialize</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">array</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">CLOB</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">array</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Stocke un tableau PHP en utilisant&nbsp;<code>serialize</code>/<code>unserialize</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">float</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">FLOAT</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">double</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Tous les nombres &agrave; virgule.<br />\r\n			Attention, fonctionne uniquement sur les serveurs dont la locale utilise un point comme s&eacute;parateur.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="text-align: justify;">Les types Doctrine sont sensibles &agrave; la casse. Ainsi, le type &laquo; String &raquo; n&#39;existe pas, il s&#39;agit du type &laquo; string &raquo;. Facile &agrave; retenir : tout est en minuscule !</p>\r\n\r\n<p style="text-align: justify;">Le type de colonne se d&eacute;finit en tant que param&egrave;tre de l&#39;annotation&nbsp;<code>Column</code>, comme suit :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Column(type="string")</code></pre>\r\n\r\n<h5 style="text-align:justify">Les param&egrave;tres de l&#39;annotation&nbsp;<code>Column</code></h5>\r\n\r\n<p style="text-align: justify;">Il existe 7 param&egrave;tres, tous facultatifs, que l&#39;on peut passer &agrave; l&#39;annotation&nbsp;<code>Column</code>&nbsp;afin de personnaliser le comportement. Voici la liste exhaustive dans le tableau suivant.</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>\r\n			<p style="text-align: justify;">Param&egrave;tre</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Valeur par d&eacute;faut</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Utilisation</p>\r\n			</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">type</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">string</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit le type de colonne comme nous venons de le voir.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">name</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Nom de l&#39;attribut</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit le nom de la colonne dans la table. Par d&eacute;faut, le nom de la colonne est le nom de l&#39;attribut de l&#39;objet, ce qui convient parfaitement.<br />\r\n			Mais vous pouvez changer le nom de la colonne, par exemple si vous pr&eacute;f&eacute;rez &laquo; isExpired &raquo; en attribut, mais &laquo; is_expired &raquo; dans la table.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">length</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">255</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit la longueur de la colonne.<br />\r\n			Applicable uniquement sur un type de colonne&nbsp;<code>string</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">unique</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code>false</code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit la colonne comme unique. Par exemple sur une colonne e-mail pour vos membres.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">nullable</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code>false</code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">Permet &agrave; la colonne de contenir des&nbsp;<code>NULL</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">precision</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">0</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit la pr&eacute;cision d&#39;un nombre &agrave; virgule, c&#39;est-&agrave;-dire le nombre de chiffres en tout.<br />\r\n			Applicable uniquement sur un type de colonne&nbsp;<code>decimal</code>.</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;">scale</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">0</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;">D&eacute;finit le&nbsp;<em>scale</em>&nbsp;d&#39;un nombre &agrave; virgule, c&#39;est-&agrave;-dire le nombre de chiffres apr&egrave;s la virgule.<br />\r\n			Applicable uniquement sur un type de colonne&nbsp;<code>decimal</code>.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="text-align: justify;">Pour d&eacute;finir plusieurs options en m&ecirc;me temps, il faut simplement les s&eacute;parer avec une virgule. Par exemple, pour une colonne &laquo; e-mail &raquo; en&nbsp;<code>string</code>&nbsp;255 et unique, il faudra faire :</p>\r\n\r\n<pre>\r\n<code>@ORM\\Column(type="string", length=255, unique=true)</code></pre>\r\n\r\n<h4 style="text-align:justify">Pour conclure</h4>\r\n\r\n<p style="text-align: justify;">Vous savez maintenant tout ce qu&#39;il faut savoir sur la couche Mod&egrave;le sous Symfony2 en utilisant les entit&eacute;s de l&#39;ORM Doctrine2.</p>\r\n\r\n<p style="text-align: justify;">Je vous redonne l&#39;adresse de la documentation Doctrine2, que vous serez amen&eacute;s &agrave; utiliser maintes fois dans vos d&eacute;veloppements :&nbsp;<a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">http://docs.doctrine-project.org/proje [...] st/index.html</a>. J&#39;insiste : enregistrez-la dans vos favoris, car Doctrine est une biblioth&egrave;que tr&egrave;s large, et bien que je vous donne un maximum d&#39;informations dans cette partie du cours, je ne pourrai pas tout couvrir.</p>\r\n\r\n<p style="text-align: justify;">Attention, Doctrine &eacute;tant une biblioth&egrave;que totalement ind&eacute;pendante de Symfony2, sa documentation fait r&eacute;f&eacute;rence &agrave; ce type d&#39;annotation :&nbsp;<code>/**&nbsp;@Entity&nbsp;**/</code>.<br />\r\nIl faut imp&eacute;rativement l&#39;adapter &agrave; votre projet Symfony2, en pr&eacute;fixant toutes les annotations par &laquo; ORM\\ &raquo; comme nous l&#39;avons vu dans ce chapitre :&nbsp;<code>/**&nbsp;@ORM\\Entity&nbsp;**/</code>.<br />\r\nCar dans nos entit&eacute;s, c&#39;est le namespace ORM que nous chargeons. Ainsi, l&#39;annotation&nbsp;<code>@Entity</code>n&#39;existe pas pour nous, c&#39;est&nbsp;<code>@ORM</code>&nbsp;qui existe (et tous ses enfants :&nbsp;<code>@ORM\\Entity</code>,&nbsp;<code>@ORM\\Table</code>, etc.).</p>\r\n\r\n<p style="text-align: justify;">Dans le prochain chapitre, nous apprendrons &agrave; manipuler les entit&eacute;s que nous savons maintenant construire.</p>\r\n\r\n<h4 style="text-align:justify">En r&eacute;sum&eacute;</h4>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;">Le r&ocirc;le d&#39;un ORM est de se charger de la persistance de vos donn&eacute;es : vous manipulez des objets, et lui s&#39;occupe de les enregistrer en base de donn&eacute;es.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">L&#39;ORM par d&eacute;faut livr&eacute; avec Symfony2 est Doctrine2.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">L&#39;utilisation d&#39;un ORM implique un changement de raisonnement : on utilise des objets, et on raisonne en POO. C&#39;est au d&eacute;veloppeur de s&#39;adapter &agrave; Doctrine2, et non l&#39;inverse !</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Une entit&eacute; est, du point de vue PHP, un simple objet. Du point de vue de Doctrine, c&#39;est un objet compl&eacute;t&eacute; avec des informations de&nbsp;<em>mapping</em>&nbsp;qui lui permettent d&#39;enregistrer correctement l&#39;objet en base de donn&eacute;es.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Une entit&eacute; est, du point de vue de votre code, un objet PHP qui correspond &agrave; un besoin, et ind&eacute;pendant du reste de votre application.</p>\r\n	</li>\r\n</ul>\r\n', 30, 'Normale', 'LA COUCHE MÉTIER : LES ENTITÉS\r\nse charger de l''enregistrement de vos données en vous faisant oublier que vous avez une base de données. ', '<p>Mais l&#39;effort que vous devrez faire pour bien utiliser un ORM, c&#39;est d&#39;oublier votre c&ocirc;t&eacute; &laquo; administrateur de base de donn&eacute;es &raquo;. Oubliez les requ&ecirc;tes SQL, pensez objet !</p>\r\n', '2016-03-24 23:13:25', NULL);
INSERT INTO `chapitre` (`id_chapitre`, `id_cours_chapitre`, `titre_chapitre`, `description_chapitre`, `chemin_chapitre`, `chemin_video_chapitre`, `chemin_presentation_chapitre`, `contenu_chapitre`, `duree_chapitre`, `niveau_chapitre`, `introduction_chapitre`, `objectif_chapitre`, `date_ajout`, `id_quizz_chapitre`) VALUES
(9, 9, 'CRÉER DES FORMULAIRES AVEC SYMFONY2', '<p>L&#39;objectif de ce chapitre est donc de vous donner enfin les outils pour cr&eacute;er efficacement ces formulaires gr&acirc;ce &agrave; la puissance du composant&nbsp;<code>Form</code>&nbsp;de Symfony2. Ce chapitre va de paire avec le prochain, dans lequel nous parlerons de la validation des donn&eacute;es, celles que vos visiteurs vont entrer dans vos nouveaux formulaires.</p>\r\n', '9introductionCsharp.pdf', '9C.mp4', '9outilJava.pdf', '<h3 style="text-align:justify">Gestion des formulaires</h3>\r\n\r\n<h4 style="text-align:justify">L&#39;enjeu des formulaires</h4>\r\n\r\n<p style="text-align: justify;">Vous avez d&eacute;j&agrave; cr&eacute;&eacute; des formulaires en HTML et PHP, vous savez donc que c&#39;est une vraie gal&egrave;re ! &Agrave; moins d&#39;avoir cr&eacute;&eacute; vous-m&ecirc;mes un syst&egrave;me d&eacute;di&eacute;, g&eacute;rer correctement des formulaires s&#39;av&egrave;re &ecirc;tre un peu mission impossible. Par &laquo; correctement &raquo;, j&#39;entends de fa&ccedil;on maintenable, mais surtout&nbsp;<strong>r&eacute;utilisable</strong>. Heureusement, le composant&nbsp;<code>Form</code>&nbsp;de Symfony2 arrive &agrave; la rescousse !</p>\r\n\r\n<p style="text-align: justify;">N&#39;oubliez pas que les composants peuvent &ecirc;tre utilis&eacute;s hors d&#39;un projet Symfony2. Vous pouvez donc reprendre le composant&nbsp;<code>Form</code>&nbsp;dans votre site m&ecirc;me si vous n&#39;utilisez pas Symfony2.</p>\r\n\r\n<h4 style="text-align:justify">Un formulaire Symfony2, qu&#39;est-ce que c&#39;est ?</h4>\r\n\r\n<p style="text-align: justify;">La vision Symfony2 sur les formulaires est la suivante : un formulaire se construit sur un objet existant, et son objectif est d&#39;hydrater cet objet.</p>\r\n\r\n<h5 style="text-align:justify">Un objet existant</h5>\r\n\r\n<p style="text-align: justify;">Il nous faut donc des objets avant de cr&eacute;er des formulaires. Mais en fait, &ccedil;a tombe bien : on les a d&eacute;j&agrave;, ces objets ! En effet, un formulaire pour ajouter une annonce va se baser sur l&#39;objet&nbsp;<code>Advert</code>, objet que nous avons construit lors du chapitre pr&eacute;c&eacute;dent. Tout est coh&eacute;rent.</p>\r\n\r\n<p style="text-align: justify;">Je dis bien &laquo; objet &raquo; et non &laquo; entit&eacute; Doctrine2 &raquo;. En effet, les formulaires n&#39;ont pas du tout besoin d&#39;une entit&eacute; pour se construire, mais uniquement d&#39;un simple objet. Heureusement, nos entit&eacute;s sont de simples objets avant d&#39;&ecirc;tre des entit&eacute;s, donc elles conviennent parfaitement. Je pr&eacute;cise ce point pour vous montrer que les composants Symfony2 sont ind&eacute;pendants les uns des autres.</p>\r\n\r\n<p style="text-align: justify;">Pour la suite de ce chapitre, nous allons utiliser notre objet&nbsp;<code>Advert</code>. C&#39;est un exemple simple qui va nous permettre de construire notre premier formulaire. Je rappelle son code, sans les annotations pour plus de clart&eacute; (et parce qu&#39;elles ne nous regardent pas ici) :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Entity/Advert.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Entity; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Doctrine\\Common\\Collections\\ArrayCollection; </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $id; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $date; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $title; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $author; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $content; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $published = true; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $image; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $categories; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $applications; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $updatedAt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $nbApplications = 0; </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $slug; </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function __construct() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$this-&gt;date = new \\Datetime(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$this-&gt;categories = new ArrayCollection(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$this-&gt;applications = new ArrayCollection(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>// &hellip; Les getters et setters </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">Rappel : la convention pour le nom des&nbsp;<em>getters/setters</em>&nbsp;est importante : lorsque l&#39;on parlera du champ &laquo; title &raquo;, le composant&nbsp;<code>Form</code>&nbsp;utilisera l&#39;objet via les m&eacute;thodes&nbsp;<code>setTitle()</code>&nbsp;et&nbsp;<code>getTitle()</code>(comme le faisait Doctrine2 de son c&ocirc;t&eacute;). Donc si vous aviez eu&nbsp;<code>set_title()</code>&nbsp;ou<code>recuperer_titre()</code>, cela n&#39;aurait pas fonctionn&eacute;.</p>\r\n\r\n<h5 style="text-align:justify">Objectif : hydrater cet objet</h5>\r\n\r\n<p style="text-align: justify;">Hydrater ? Un terme pr&eacute;cis pour dire que le formulaire va remplir les attributs de l&#39;objet avec les valeurs entr&eacute;es par le visiteur. Faire&nbsp;<code>$advert-&gt;setAuthor(&#39;Alexandre&#39;)</code>,&nbsp;<code>$advert-&gt;setDate(new \\Datetime())</code>, etc., c&#39;est&nbsp;<em>hydrater</em>&nbsp;l&#39;objet&nbsp;<code>Advert</code>.</p>\r\n\r\n<p style="text-align: justify;">Le formulaire en lui-m&ecirc;me n&#39;a donc comme seul objectif que d&#39;hydrater un objet. Ce n&#39;est qu&#39;une fois l&#39;objet hydrat&eacute; que vous pourrez en faire ce que vous voudrez : enregistrer en base de donn&eacute;es dans le cas de notre objet&nbsp;<code>Advert</code>, envoyer un e-mail dans le cas d&#39;un objet&nbsp;<code>Contact</code>, etc. Le syst&egrave;me de formulaire ne s&#39;occupe pas de ce que vous faites de votre objet, il ne fait que l&#39;hydrater.</p>\r\n\r\n<p style="text-align: justify;">Une fois que vous avez compris cela, vous avez compris l&#39;essentiel. Le reste n&#39;est que de la syntaxe &agrave; conna&icirc;tre.</p>\r\n\r\n<h4 style="text-align:justify">Gestion basique d&#39;un formulaire</h4>\r\n\r\n<p style="text-align: justify;">Concr&egrave;tement, pour cr&eacute;er un formulaire, il nous faut deux choses :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;">Un objet (on a toujours notre objet&nbsp;<code>Advert</code>) ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Un moyen pour construire un formulaire &agrave; partir de cet objet, un&nbsp;<code>FormBuilder</code>, &laquo; constructeur de formulaire &raquo; en fran&ccedil;ais.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p style="text-align: justify;">Pour faire des tests, placez-vous dans l&#39;action&nbsp;<code>addAction()</code>&nbsp;de notre contr&ocirc;leur&nbsp;<code>Advert</code>&nbsp;et modifiez-la comme suit :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Controller/AdvertController.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Controller; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use OC\\PlatformBundle\\Entity\\Advert; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller; </code></p>\r\n\r\n<p style="text-align: justify;"><code>class AdvertController extends Controller </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function addAction(Request $request) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On cr&eacute;e un objet Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert = new Advert(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On cr&eacute;e le FormBuilder gr&acirc;ce au service form factory </code></p>\r\n\r\n<p style="text-align: justify;"><code>$formBuilder = $this-&gt;get(&#39;form.factory&#39;)-&gt;createBuilder(&#39;form&#39;, $advert); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On ajoute les champs de l&#39;entit&eacute; que l&#39;on veut &agrave; notre formulaire </code></p>\r\n\r\n<p style="text-align: justify;"><code>$formBuilder </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;date&#39;, &#39;date&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;title&#39;, &#39;text&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;content&#39;, &#39;textarea&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;author&#39;, &#39;text&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;published&#39;, &#39;checkbox&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;save&#39;, &#39;submit&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Pour l&#39;instant, pas de candidatures, cat&eacute;gories, etc., on les g&eacute;rera plus tard </code></p>\r\n\r\n<p style="text-align: justify;"><code>// &Agrave; partir du formBuilder, on g&eacute;n&egrave;re le formulaire </code></p>\r\n\r\n<p style="text-align: justify;"><code>$form = $formBuilder-&gt;getForm(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On passe la m&eacute;thode createView() du formulaire &agrave; la vue </code></p>\r\n\r\n<p style="text-align: justify;"><code>// afin qu&#39;elle puisse afficher le formulaire toute seule </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $this-&gt;render(&#39;OCPlatformBundle:Advert:add.html.twig&#39;, array( </code></p>\r\n\r\n<p style="text-align: justify;"><code>&#39;form&#39; =&gt; $form-&gt;createView(), </code></p>\r\n\r\n<p style="text-align: justify;"><code>)); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">Pour le moment, ce formulaire n&#39;est pas op&eacute;rationnel. On va pouvoir l&#39;afficher, mais il ne se passera rien lorsqu&#39;on le validera.</p>\r\n\r\n<p style="text-align: justify;">Mais avant cette &eacute;tape, essayons de comprendre le code pr&eacute;sent&eacute;. Dans un premier temps, on r&eacute;cup&egrave;re le<code>FormBuilder</code>. Cet objet n&#39;est pas le formulaire en lui-m&ecirc;me, c&#39;est un constructeur de formulaire. On lui dit : &laquo; Cr&eacute;e un formulaire autour de l&#39;objet&nbsp;<code>$advert</code>&nbsp;&raquo;, puis : &laquo; Ajoute les champs&nbsp;<code>date</code>,&nbsp;<code>title</code>,<code>content</code>,&nbsp;<code>author</code>&nbsp;et&nbsp;<code>published</code>. &raquo; Et enfin : &laquo; Maintenant, donne-moi le formulaire construit avec tout ce que je t&#39;ai dit auparavant. &raquo;</p>\r\n\r\n<p style="text-align: justify;">Prenons le temps de bien faire la diff&eacute;rence entre les attributs de l&#39;objet hydrat&eacute; et les champs du formulaire. D&#39;une part, un formulaire n&#39;est pas du tout oblig&eacute; d&#39;hydrater tous les attributs d&#39;un objet. On pourrait tr&egrave;s bien ne pas inclure&nbsp;le champ&nbsp;<code>author</code>&nbsp;dans notre formulaire. L&#39;objet, lui, contient toujours l&#39;attribut<code>author</code>, mais il ne sera juste pas hydrat&eacute; par le formulaire (on peut le d&eacute;finir nous-m&ecirc;me, sans le demander au visiteur par exemple). Bon, en l&#39;occurrence, ce n&#39;est pas le comportement que l&#39;on veut (on va consid&eacute;rer l&#39;auteur comme obligatoire pour une annonce), mais sachez que c&#39;est possible.&nbsp;<img alt=";)" src="https://openclassrooms.com/bundles/common/images/smiley/clin.png" />&nbsp;D&#39;ailleurs, si vous avez l&rsquo;&oelig;il, vous avez remarqu&eacute; qu&#39;on n&#39;ajoute pas de champ&nbsp;<code>id</code>&nbsp;: comme il sera rempli automatiquement par Doctrine (gr&acirc;ce &agrave; l&#39;auto-incr&eacute;mentation), le formulaire n&#39;a pas besoin de remplir cet attribut.</p>\r\n\r\n<p style="text-align: justify;">D&#39;autre part, notez la pr&eacute;sence d&#39;un champ de type&nbsp;<code>submit</code>, que j&#39;ai appel&eacute;&nbsp;<em>save</em>&nbsp;ici, qui va permettre de cr&eacute;er le bouton de soumission du formulaire. Ce champ n&#39;a rien &agrave; voir avec l&#39;objet, on dit qu&#39;il n&#39;est pas<em>mapp&eacute;</em>&nbsp;avec celui-ci. Je l&#39;ai ici ajout&eacute; au formulaire Symfony2, mais vous pouvez tout aussi bien ne pas le mettre ici et &eacute;crire &agrave; la main le bouton de soumission.</p>\r\n\r\n<p style="text-align: justify;">Enfin, c&#39;est avec cet objet&nbsp;<code>$form</code>&nbsp;g&eacute;n&eacute;r&eacute; que l&#39;on pourra g&eacute;rer notre formulaire : v&eacute;rifier qu&#39;il est valide, l&#39;afficher, etc. Par exemple, ici, on utilise sa m&eacute;thode&nbsp;<code>$form-&gt;createView()</code>&nbsp;qui permet &agrave; la vue d&#39;afficher ce formulaire. Concernant l&#39;affichage du formulaire, j&#39;ai une bonne nouvelle pour vous : Symfony2 nous permet d&#39;afficher un formulaire simple en une seule ligne HTML ! Si, si : rendez-vous dans la vue<code>Advert/form.html.twig</code>&nbsp;et ajoutez cette ligne l&agrave; o&ugrave; nous avions laiss&eacute; un trou :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>{# src/OC/PlatformBundle/Resources/views/Advert/form.html.twig #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;h3&gt;Formulaire d&#39;annonce&lt;/h3&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;div class=&quot;well&quot;&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form(form) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;/div&gt; </code></p>\r\n\r\n<p style="text-align: justify;">Ensuite, admirez le r&eacute;sultat &agrave; l&#39;adresse suivante :&nbsp;<a href="http://localhost/Symfony/web/app_dev.php/platform/add">http://localhost/Symfony/web/app_dev.php/platform/add</a>. Impressionnant, non ?</p>\r\n\r\n<p style="text-align: justify;"><img alt="Le formulaire HTML s''affiche bien" src="https://sdz-upload.s3.amazonaws.com/prod/upload/form13.png" /></p>\r\n\r\n<p style="text-align: justify;">Le formulaire HTML s&#39;affiche bien</p>\r\n\r\n<p style="text-align: justify;">Gr&acirc;ce &agrave; la fonction Twig&nbsp;<code>{{&nbsp;form()&nbsp;}}</code>, on peut afficher un formulaire entier en une seule ligne. Alors bien s&ucirc;r, il n&#39;est pas forc&eacute;ment &agrave; votre go&ucirc;t pour le moment, mais voyez le bon c&ocirc;t&eacute; des choses : pour l&#39;instant, on est en plein d&eacute;veloppement, on veut tester notre formulaire. On s&#39;occupera de l&#39;esth&eacute;tique plus tard.</p>\r\n\r\n<p style="text-align: justify;">Bon, &eacute;videmment, comme je vous l&#39;ai dit, ce code ne fait qu&#39;afficher le formulaire, il n&#39;est pas encore question de g&eacute;rer sa soumission. Mais patience, on y arrive.</p>\r\n\r\n<p style="text-align: justify;">La date s&eacute;lectionn&eacute;e par d&eacute;faut est celle d&#39;aujourd&#39;hui, et la checkbox &laquo; Published &raquo; est d&eacute;j&agrave; coch&eacute;e : comment est-ce possible ?</p>\r\n\r\n<p style="text-align: justify;">Bonne question ! Il est important de savoir que ces deux points ne sont pas l&agrave; par magie, et que dans Symfony2 tout est coh&eacute;rent. Regardez bien le code pour r&eacute;cup&eacute;rer le&nbsp;<code>formBuilder</code>, on a pass&eacute; notre object<code>$advert</code>&nbsp;en argument. Or, ces valeurs&nbsp;<em>date</em>&nbsp;et&nbsp;<em>published</em>&nbsp;sont d&eacute;finies &agrave; la cr&eacute;ation de l&#39;objet, l&#39;un dans le constructeur et l&#39;autre dans la d&eacute;finition de l&#39;attribut :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Entity/Advert.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Entity; </code></p>\r\n\r\n<p style="text-align: justify;"><code>class Advert </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $published = true; </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function __construct() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$this-&gt;date = new \\Datetime(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>// ... </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">C&#39;est &agrave; ce moment qu&#39;est d&eacute;finie la valeur de ces deux attributs, et c&#39;est sur la valeur de ces attributs que se base le formulaire pour remplir ses champs. Voil&agrave; l&#39;origine de ces valeurs !</p>\r\n\r\n<h5 style="text-align:justify">Ajouter des champs</h5>\r\n\r\n<p style="text-align: justify;">Vous pouvez le voir, ajouter des champs &agrave; un formulaire se fait assez facilement avec la m&eacute;thode<code>$formBuilder-&gt;add()</code>&nbsp;du&nbsp;<code>FormBuilder</code>. Les arguments sont les suivants :</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p style="text-align: justify;">Le nom du champ ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Le type du champ ;</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Les options du champ, sous forme de tableau.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p style="text-align: justify;">Par &laquo; type de champ &raquo;, il ne faut pas comprendre &laquo; type HTML &raquo; comme&nbsp;<code>text</code>,&nbsp;<code>password</code>&nbsp;ou&nbsp;<code>select</code>. Il faut comprendre &laquo; type s&eacute;mantique &raquo;. Par exemple, le type&nbsp;<code>date</code>&nbsp;que l&#39;on a utilis&eacute; affiche trois champs<code>select</code>&nbsp;&agrave; la suite pour choisir le jour, le mois et l&#39;ann&eacute;e. Il existe aussi un type&nbsp;<code>timezone</code>&nbsp;pour choisir le fuseau horaire. Bref, il en existe pas mal et ils n&#39;ont rien &agrave; voir avec les types HTML, ils vont bien plus loin que ces derniers ! N&#39;oubliez pas, Symfony2 est magique !&nbsp;<img alt=":magicien:" src="https://openclassrooms.com/bundles/common/images/smiley/magicien.png" /></p>\r\n\r\n<p style="text-align: justify;">Voici l&#39;ensemble des types de champ disponibles. Je vous dresse ici la liste avec pour chacun un lien vers la documentation : allez-y &agrave; chaque fois que vous avez besoin d&#39;utiliser tel ou tel type.</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>\r\n			<p style="text-align: justify;">Texte</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Choix</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Date et temps</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Divers</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Multiple</p>\r\n			</th>\r\n			<th>\r\n			<p style="text-align: justify;">Cach&eacute;</p>\r\n			</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align: justify;"><code><a href="http://symfony.com/fr/doc/current/reference/forms/types/text.html">text</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/textarea.html">textarea</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/email.html">email</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/integer.html">integer</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/money.html">money</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/number.html">number</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/password.html">password</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/percent.html">percent</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/search.html">search</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/url.html">url</a></code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code><a href="http://symfony.com/fr/doc/current/reference/forms/types/choice.html">choice</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/entity.html">entity</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/country.html">country</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/language.html">language</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/locale.html">locale</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/timezone.html">timezone</a></code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code><a href="http://symfony.com/fr/doc/current/reference/forms/types/date.html">date</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/datetime.html">datetime</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/time.html">time</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/birthday.html">birthday</a></code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code><a href="http://symfony.com/fr/doc/current/reference/forms/types/checkbox.html">checkbox</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/file.html">file</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/radio.html">radio</a></code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code><a href="http://symfony.com/fr/doc/current/reference/forms/types/collection.html">collection</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/repeated.html">repeated</a></code></p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align: justify;"><code><a href="http://symfony.com/fr/doc/current/reference/forms/types/hidden.html">hidden</a></code><br />\r\n			<code><a href="http://symfony.com/fr/doc/current/reference/forms/types/csrf.html">csrf</a></code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="text-align: justify;">Ayez bien cette liste en t&ecirc;te : le choix d&#39;un type de champ adapt&eacute; &agrave; l&#39;attribut de l&#39;objet sous-jacent est une &eacute;tape importante dans la cr&eacute;ation d&#39;un formulaire.</p>\r\n\r\n<p style="text-align: justify;">Il est primordial de bien faire correspondre les types de champ du formulaire avec les types d&#39;attributs que contient votre objet. En effet, si le formulaire retourne un bool&eacute;en alors que votre objet attend du texte, ils ne vont pas s&#39;entendre.</p>\r\n\r\n<p style="text-align: justify;">Dans le cas d&#39;une entit&eacute; Doctrine c&#39;est tr&egrave;s simple, vous d&eacute;finissez les type de champ de formulaire pour correspondre au type &nbsp;d&#39;attribut d&eacute;finit avec l&#39;annotation (ou en yaml/xml si vous utilisez un autre type de configuration). Par exemple, pour cette annotation :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>/** </code></p>\r\n\r\n<p style="text-align: justify;"><code>* @ORM\\Column(name=&quot;published&quot;, type=&quot;boolean&quot;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>*/ </code></p>\r\n\r\n<p style="text-align: justify;"><code>private $published = true; </code></p>\r\n\r\n<p style="text-align: justify;">Il nous faut donc un type de champ qui retourne un&nbsp;<em>boolean</em>, &agrave; savoir checkbox :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>$formBuilder-&gt;add(&#39;published&#39;, &#39;checkbox&#39;); </code></p>\r\n\r\n<p style="text-align: justify;">Et ceci est valable pour tous vos attributs.</p>\r\n\r\n<h4 style="text-align:justify">Gestion de la soumission d&#39;un formulaire</h4>\r\n\r\n<p style="text-align: justify;">Afficher un formulaire c&#39;est bien, mais faire quelque chose lorsqu&#39;un visiteur le soumet, c&#39;est quand m&ecirc;me mieux !</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;">Pour g&eacute;rer l&#39;envoi du formulaire, il faut tout d&#39;abord v&eacute;rifier que la requ&ecirc;te est de type POST : cela signifie que le visiteur est arriv&eacute; sur la page en cliquant sur le bouton&nbsp;<code>submit</code>&nbsp;du formulaire. Ensuite, il faut faire le lien entre les variables de type POST et notre formulaire, pour que les variables de type POST viennent remplir les champs correspondants du formulaire. Ces deux actions se font gr&acirc;ce &agrave; la m&eacute;thode&nbsp;<code>handleRequest()</code>&nbsp;du formulaire. Cette m&eacute;thode dit au formulaire : &laquo; Voici la requ&ecirc;te d&#39;entr&eacute;e (nos variables de type POST entre autres). Lis cette requ&ecirc;te, r&eacute;cup&egrave;re les valeurs qui t&#39;int&eacute;ressent et hydrate l&#39;objet. &raquo; Comme vous pouvez le voir, elle fait beaucoup de choses !</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;">Enfin, une fois que notre formulaire a lu ses valeurs et hydrat&eacute; l&#39;objet, il faut tester ces valeurs pour v&eacute;rifier qu&#39;elles sont valides avec ce que l&#39;objet et le formulaire attendent. Il faut&nbsp;<em>valider</em>&nbsp;notre objet. Cela se fait via la m&eacute;thode&nbsp;<code>isValid()</code>&nbsp;du formulaire.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p style="text-align: justify;">Ce n&#39;est qu&#39;apr&egrave;s ces trois &eacute;tapes que l&#39;on peut traiter notre objet hydrat&eacute; : sauvegarder en base de donn&eacute;es, envoyer un e-mail, etc.</p>\r\n\r\n<p style="text-align: justify;">Vous &ecirc;tes un peu perdus ? C&#39;est parce que vous manquez de code. Voici comment faire tout ce que l&#39;on vient de dire, dans le contr&ocirc;leur :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Controller/AdvertController.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Controller; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use OC\\PlatformBundle\\Entity\\Advert; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Component\\HttpFoundation\\Request; </code></p>\r\n\r\n<p style="text-align: justify;"><code>class AdvertController extends Controller </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function addAction(Request $request) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert = new Advert(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// J&#39;ai raccourci cette partie, car c&#39;est plus rapide &agrave; &eacute;crire ! </code></p>\r\n\r\n<p style="text-align: justify;"><code>$form = $this-&gt;get(&#39;form.factory&#39;)-&gt;createBuilder(&#39;form&#39;, $advert) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;date&#39;, &#39;date&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;title&#39;, &#39;text&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;content&#39;, &#39;textarea&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;author&#39;, &#39;text&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;published&#39;, &#39;checkbox&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;save&#39;, &#39;submit&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;getForm() </code></p>\r\n\r\n<p style="text-align: justify;"><code>; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On fait le lien Requ&ecirc;te &lt;-&gt; Formulaire </code></p>\r\n\r\n<p style="text-align: justify;"><code>// &Agrave; partir de maintenant, la variable $advert contient les valeurs entr&eacute;es dans le formulaire par le visiteur </code></p>\r\n\r\n<p style="text-align: justify;"><code>$form-&gt;handleRequest($request); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On v&eacute;rifie que les valeurs entr&eacute;es sont correctes </code></p>\r\n\r\n<p style="text-align: justify;"><code>// (Nous verrons la validation des objets en d&eacute;tail dans le prochain chapitre) </code></p>\r\n\r\n<p style="text-align: justify;"><code>if ($form-&gt;isValid()) { </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On l&#39;enregistre notre objet $advert dans la base de donn&eacute;es, par exemple </code></p>\r\n\r\n<p style="text-align: justify;"><code>$em = $this-&gt;getDoctrine()-&gt;getManager(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$em-&gt;persist($advert); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$em-&gt;flush(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$request-&gt;getSession()-&gt;getFlashBag()-&gt;add(&#39;notice&#39;, &#39;Annonce bien enregistr&eacute;e.&#39;); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On redirige vers la page de visualisation de l&#39;annonce nouvellement cr&eacute;&eacute;e </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $this-&gt;redirect($this-&gt;generateUrl(&#39;oc_platform_view&#39;, array(&#39;id&#39; =&gt; $advert-&gt;getId()))); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>// &Agrave; ce stade, le formulaire n&#39;est pas valide car : </code></p>\r\n\r\n<p style="text-align: justify;"><code>// - Soit la requ&ecirc;te est de type GET, donc le visiteur vient d&#39;arriver sur la page et veut voir le formulaire </code></p>\r\n\r\n<p style="text-align: justify;"><code>// - Soit la requ&ecirc;te est de type POST, mais le formulaire contient des valeurs invalides, donc on l&#39;affiche de nouveau </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $this-&gt;render(&#39;OCPlatformBundle:Advert:add.html.twig&#39;, array( </code></p>\r\n\r\n<p style="text-align: justify;"><code>&#39;form&#39; =&gt; $form-&gt;createView(), </code></p>\r\n\r\n<p style="text-align: justify;"><code>)); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">Si le code para&icirc;t long, c&#39;est parce que j&#39;ai mis plein de commentaires ! Prenez le temps de bien le lire et de bien le comprendre : vous verrez, c&#39;est vraiment simple. N&#39;h&eacute;sitez pas &agrave; le tester. Essayez de ne pas remplir un champ pour observer la r&eacute;action de Symfony2. Vous voyez que ce formulaire g&egrave;re d&eacute;j&agrave; tr&egrave;s bien les erreurs (via la m&eacute;thode&nbsp;<code>isValid</code>), il n&#39;enregistre l&#39;annonce que lorsque tout va bien.</p>\r\n\r\n<p style="text-align: justify;">N&#39;h&eacute;sitez pas &agrave; tester votre formulaire en ajoutant des annonces ! Il est op&eacute;rationnel, et les annonces que vous ajoutez sont r&eacute;ellement enregistr&eacute;es en base de donn&eacute;es.</p>\r\n\r\n<p style="text-align: justify;">Si vous l&#39;avez bien test&eacute;, vous vous &ecirc;tes rendu compte qu&#39;on est oblig&eacute;s de cocher le champ&nbsp;<code>published</code>. Ce n&#39;est pas tellement le comportement voulu, car on veut pouvoir enregistrer une annonce sans forc&eacute;ment la publier (pour finir la r&eacute;daction plus tard par exemple). Pour cela, nous allons utiliser le troisi&egrave;me argument de la m&eacute;thode&nbsp;<code>$formBuilder-&gt;add()</code>&nbsp;qui correspond aux options du champ. Les options se pr&eacute;sentent sous la forme d&#39;un simple tableau. Pour rendre le champ facultatif, il faut d&eacute;finir l&#39;option&nbsp;<code>required</code>&nbsp;&agrave;&nbsp;<code>false</code>, comme suit :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>$formBuilder-&gt;add(&#39;published&#39;, &#39;checkbox&#39;, array(&#39;required&#39; =&gt; false)); </code></p>\r\n\r\n<p style="text-align: justify;">Rappelez-vous donc : un champ de formulaire est requis par d&eacute;faut. Si vous voulez le rendre facultatif, vous devez pr&eacute;ciser cette option&nbsp;<code>required</code>&nbsp;&agrave; la main.</p>\r\n\r\n<p style="text-align: justify;">Un mot &eacute;galement sur la validation que vous rencontrez depuis le navigateur : impossible de valider le formulaire si un champ obligatoire n&#39;est pas rempli.</p>\r\n\r\n<p style="text-align: justify;"><img alt="Le navigateur empêche la soumission du formulaire" src="https://sdz-upload.s3.amazonaws.com/prod/upload/form25.png" /></p>\r\n\r\n<p style="text-align: justify;">Le navigateur emp&ecirc;che la soumission du formulaire</p>\r\n\r\n<p style="text-align: justify;">Pourtant, nous n&#39;avons pas utilis&eacute; de JavaScript ! C&#39;est juste du HTML5. En mettant l&#39;attribut<code>required=&quot;required&quot;</code>&nbsp;&agrave; une balise&nbsp;<code>&lt;input&gt;</code>, le navigateur interdit la validation du formulaire tant que cet input est vide. Pratique ! Mais attention, cela n&#39;emp&ecirc;che pas de faire une validation c&ocirc;t&eacute; serveur, au contraire. En effet, si quelqu&#39;un utilise votre formulaire avec un vieux navigateur qui ne supporte pas le HMTL5, il pourra valider le formulaire sans probl&egrave;me.</p>\r\n\r\n<h4 style="text-align:justify">G&eacute;rer les valeurs par d&eacute;faut du formulaire</h4>\r\n\r\n<p style="text-align: justify;">L&#39;un des besoins courants dans les formulaires, c&#39;est de mettre des valeurs pr&eacute;d&eacute;finies dans les champs. Cela peut servir pour des valeurs par d&eacute;faut (pr&eacute;remplir la date, par exemple) ou alors lors de l&#39;&eacute;dition d&#39;un objet d&eacute;j&agrave; existant (pour l&#39;&eacute;dition d&#39;une annonce, on souhaite remplir le formulaire avec les valeurs de la base de donn&eacute;es).</p>\r\n\r\n<p style="text-align: justify;">Heureusement, cela se fait tr&egrave;s facilement. Il suffit de modifier l&#39;instance de l&#39;objet, ici&nbsp;<code>$advert</code>, avant de le passer en argument &agrave; la m&eacute;thode&nbsp;<code>createFormBuilder</code>, comme ceci :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// On cr&eacute;e une nouvelle annonce </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert = new Advert; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Ici, on pr&eacute;remplit avec la date d&#39;aujourd&#39;hui, par exemple </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Cette date sera donc pr&eacute;affich&eacute;e dans le formulaire, cela facilite le travail de l&#39;utilisateur </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert-&gt;setDate(new \\Datetime()); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Et on construit le formBuilder avec cette instance d&#39;annonce </code></p>\r\n\r\n<p style="text-align: justify;"><code>$formBuilder = $this-&gt;get(&#39;form.factory&#39;)-&gt;createBuilder(&#39;form&#39;, $advert); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// N&#39;oubliez pas d&#39;ajouter les champs comme pr&eacute;c&eacute;demment avec la m&eacute;thode -&gt;add() </code></p>\r\n\r\n<p style="text-align: justify;">Et si vous voulez modifier une annonce d&eacute;j&agrave; enregistr&eacute;e en base de donn&eacute;es, alors il suffit de le r&eacute;cup&eacute;rer avant la cr&eacute;ation du formulaire, comme ceci :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// R&eacute;cup&eacute;ration d&#39;une annonce d&eacute;j&agrave; existante, d&#39;id $id. </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert = $this-&gt;getDoctrine() </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;getManager() </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;getRepository(&#39;OCPlatformBundle:Advert&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;find($id) </code></p>\r\n\r\n<p style="text-align: justify;"><code>; </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Et on construit le formBuilder avec cette instance de l&#39;annonce, comme pr&eacute;c&eacute;demment </code></p>\r\n\r\n<p style="text-align: justify;"><code>$formBuilder = $this-&gt;get(&#39;form.factory&#39;)-&gt;createBuilder(&#39;form&#39;, $advert); </code></p>\r\n\r\n<p style="text-align: justify;"><code>// N&#39;oubliez pas d&#39;ajouter les champs comme pr&eacute;c&eacute;demment avec la m&eacute;thode -&gt;add() </code></p>\r\n\r\n<h4 style="text-align:justify">Personnaliser l&#39;affichage d&#39;un formulaire</h4>\r\n\r\n<p style="text-align: justify;">Jusqu&#39;ici, nous n&#39;avons pas du tout personnalis&eacute; l&#39;affichage de notre formulaire. Voyez quand m&ecirc;me le bon c&ocirc;t&eacute; des choses : on travaillait c&ocirc;t&eacute; PHP, on a pu avancer tr&egrave;s rapidement sans se soucier d&#39;&eacute;crire les balises<code>&lt;input&gt;</code>&nbsp;&agrave; la main, ce qui est long et sans int&eacute;r&ecirc;t.</p>\r\n\r\n<p style="text-align: justify;">Mais bon, &agrave; un moment donn&eacute;, il faut bien mettre la main &agrave; la p&acirc;te et faire des formulaires dans le m&ecirc;me style que son site. Pour cela, je ne vais pas m&#39;&eacute;tendre, mais voici un exemple qui vous permettra de faire &agrave; peu pr&egrave;s tout ce que vous voudrez, ici adapt&eacute; pour le CSS Bootstrap de Twitter :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>{# src/OC/PlatformBundle/Resources/views/Advert/form.html.twig #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;h3&gt;Formulaire d&#39;annonce&lt;/h3&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;div class=&quot;well&quot;&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_start(form, {&#39;attr&#39;: {&#39;class&#39;: &#39;form-horizontal&#39;}}) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# Les erreurs g&eacute;n&eacute;rales du formulaire. #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_errors(form) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;div class=&quot;form-group&quot;&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# G&eacute;n&eacute;ration du label. #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_label(form.title, &quot;Titre de l&#39;annonce&quot;, {&#39;label_attr&#39;: {&#39;class&#39;: &#39;col-sm-3 control-label&#39;}}) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# Affichage des erreurs pour ce champ pr&eacute;cis. #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_errors(form.title) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;div class=&quot;col-sm-4&quot;&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# G&eacute;n&eacute;ration de l&#39;input. #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_widget(form.title, {&#39;attr&#39;: {&#39;class&#39;: &#39;form-control&#39;}}) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;/div&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;/div&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# Idem pour un autre champ. #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;div class=&quot;form-group&quot;&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_label(form.content, &quot;Contenu de l&#39;annonce&quot;, {&#39;label_attr&#39;: {&#39;class&#39;: &#39;col-sm-3 control-label&#39;}}) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_errors(form.title) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;div class=&quot;col-sm-4&quot;&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_widget(form.content, {&#39;attr&#39;: {&#39;class&#39;: &#39;form-control&#39;}}) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;/div&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;/div&gt; </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# G&eacute;n&eacute;ration du label + error + widget pour un champ #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_row(form.date) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_row(form.author) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_row(form.published) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# Pour le bouton, pas de label ni d&#39;erreur, on affiche juste le widget #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_widget(form.save, {&#39;attr&#39;: {&#39;class&#39;: &#39;btn btn-primary&#39;}}) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# G&eacute;n&eacute;ration automatique des champs pas encore &eacute;crits. </code></p>\r\n\r\n<p style="text-align: justify;"><code>Dans cet exemple, ce serait le champ CSRF (g&eacute;r&eacute; automatiquement par Symfony !) </code></p>\r\n\r\n<p style="text-align: justify;"><code>et tous les champs cach&eacute;s (type &laquo; hidden &raquo;). #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_rest(form) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{# Fermeture de la balise &lt;form&gt; du formulaire HTML #} </code></p>\r\n\r\n<p style="text-align: justify;"><code>{{ form_end(form) }} </code></p>\r\n\r\n<p style="text-align: justify;"><code>&lt;/div&gt; </code></p>\r\n\r\n<p style="text-align: justify;">Comme vous pouvez le voir sur la figure suivante, cela rend tout de suite mieux lorsqu&#39;on personnalise un peu le HTML et le CSS ! Faite l&#39;exercice de personnaliser les champs restants : date, author et published.</p>\r\n\r\n<p style="text-align: justify;"><img alt="Nouvelle présentation du formulaire" src="https://sdz-upload.s3.amazonaws.com/prod/upload/form102.png" /></p>\r\n\r\n<p style="text-align: justify;">Nouvelle pr&eacute;sentation du formulaire pour les champs titre et contenu</p>\r\n\r\n<p style="text-align: justify;">Revenons rapidement sur les fonctions Twig que j&#39;ai utilis&eacute;es :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_start()</code>&nbsp;affiche la balise d&#39;ouverture du formulaire HTML, soit&nbsp;<code>&lt;form&gt;</code>. Il faut passer la variable du formulaire en premier argument, et les param&egrave;tres en deuxi&egrave;me argument. L&#39;index&nbsp;<em>attr</em>&nbsp;des param&egrave;tres, et cela s&#39;appliquera &agrave; toutes les fonctions suivantes, repr&eacute;sente les attributs &agrave; ajouter &agrave; la balise g&eacute;n&eacute;r&eacute;e, ici le&nbsp;<code>&lt;form&gt;</code>. Il nous permet d&#39;appliquer une classe CSS au formulaire, ici&nbsp;<em>form-horizontal</em>.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_errors()</code>&nbsp;affiche les erreurs attach&eacute;es au champ donn&eacute; en argument. Nous verrons les erreurs de validation dans le prochain chapitre.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_label()</code>&nbsp;affiche le label HTML du champ donn&eacute; en argument. Le deuxi&egrave;me argument est le contenu du label.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_widget()</code>&nbsp;affiche le champ HTML lui-m&ecirc;me (que ce soit&nbsp;<code>&lt;input&gt;</code>,&nbsp;<code>&lt;select&gt;</code>, etc.).</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_row()</code>&nbsp;affiche le label, les erreurs et le champ.</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_rest()</code>&nbsp;affiche tous les champs manquants du formulaire (dans notre cas, juste le champ CSRF puisque nous avons d&eacute;j&agrave; affich&eacute; &agrave; la main tous les autres champs).</p>\r\n	</li>\r\n	<li>\r\n	<p style="text-align: justify;"><code>form_end()</code>&nbsp;affiche la balise de fermeture du formulaire HTML, soit&nbsp;<code>&lt;/form&gt;</code>.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p style="text-align: justify;">L&#39;habillage des formulaires est un sujet complexe : personnalisation d&#39;un champ en particulier, de tous les champs d&#39;un m&ecirc;me type, etc. Toutes les fonctions Twig que nous avons vu sont &eacute;galement personnalisable. Je vous invite vivement &agrave;&nbsp;consulter la&nbsp;<a href="http://symfony.com/fr/doc/current/book/forms.html#habillage-de-formulaire-theming">documentation &agrave; ce sujet</a>&nbsp;qui vous permettra d&#39;aller beaucoup plus loin. Cela s&#39;appelle en anglais le&nbsp;<em>form theming</em>.</p>\r\n\r\n<p style="text-align: justify;">Qu&#39;est-ce que le CSRF ?</p>\r\n\r\n<p style="text-align: justify;">Le champ CSRF, pour&nbsp;<em>Cross Site Request Forgeries</em>, permet de v&eacute;rifier que l&#39;internaute qui valide le formulaire est bien celui qui l&#39;a affich&eacute;. C&#39;est un moyen de se prot&eacute;ger des envois de formulaire frauduleux (<a href="http://julien-pauli.developpez.com/tutoriels/securite/developpement-web-securite/?page=csrf">plus d&#39;informations sur le CSRF</a>). C&#39;est un champ que Symfony2 rajoute automatiquement &agrave; tous vos formulaires, afin de les s&eacute;curiser sans m&ecirc;me que vous vous en rendiez compte. Ce champ s&#39;appelle _token dans vos formulaires, vous pouvez le voir si vous affichez la source HTML.</p>\r\n\r\n<h4 style="text-align:justify">Cr&eacute;er des types de champ personnalis&eacute;s</h4>\r\n\r\n<p style="text-align: justify;">Il se peut que vous ayez envie d&#39;utiliser un type de champ pr&eacute;cis, mais que ce type de champ n&#39;existe pas par d&eacute;faut. Heureusement, vous n&#39;&ecirc;tes pas coinc&eacute;s, vous pouvez vous en sortir en cr&eacute;ant votre propre type de champ. Vous pourrez ensuite utiliser ce champ comme n&#39;importe quel autre dans vos formulaires.</p>\r\n\r\n<p style="text-align: justify;">Imaginons par exemple que vous n&#39;aimiez pas le rendu du champ&nbsp;<code>date</code>&nbsp;avec ces trois balises&nbsp;<code>&lt;select&gt;</code>pour s&eacute;lectionner le jour, le mois et l&#39;ann&eacute;e. Vous pr&eacute;f&eacute;reriez un joli&nbsp;<code>datepicker</code>&nbsp;en JavaScript. La solution ? Cr&eacute;er un nouveau type de champ !</p>\r\n\r\n<p style="text-align: justify;">Je ne vais pas d&eacute;crire la d&eacute;marche ici, mais sachez que cela existe et que&nbsp;<a href="http://symfony.com/fr/doc/current/cookbook/form/create_custom_field_type.html">la documentation traite ce point</a>.</p>\r\n\r\n<h3 style="text-align:justify">Externaliser la d&eacute;finition de ses formulaires</h3>\r\n\r\n<p style="text-align: justify;">Vous savez enfin cr&eacute;er un formulaire. Ce n&#39;&eacute;tait pas tr&egrave;s compliqu&eacute;, nous l&#39;avons rapidement fait et ce dernier se trouve &ecirc;tre assez joli. Mais vous souvenez-vous de ce que j&#39;avais promis au d&eacute;but : nous voulions un formulaire&nbsp;<em>r&eacute;utilisable</em>&nbsp;; or l&agrave;, tout est dans le contr&ocirc;leur, et je vois mal comment le r&eacute;utiliser ! Pour cela, il faut d&eacute;tacher la d&eacute;finition du formulaire dans une classe &agrave; part, nomm&eacute;e&nbsp;<code>AdvertType</code>&nbsp;(par convention).</p>\r\n\r\n<h4 style="text-align:justify">D&eacute;finition du formulaire dans&nbsp;<code>AdvertType</code></h4>\r\n\r\n<p style="text-align: justify;"><code>AdvertType</code>&nbsp;n&#39;est pas notre formulaire. Comme tout &agrave; l&#39;heure, c&#39;est notre&nbsp;<em>constructeur de formulaire</em>. Par convention, on va mettre tous nos&nbsp;<code>xxxType.php</code>&nbsp;dans le r&eacute;pertoire&nbsp;<code>Form</code>&nbsp;du bundle. En fait, on va encore utiliser le g&eacute;n&eacute;rateur ici, qui sait g&eacute;n&eacute;rer les&nbsp;<code>FormType</code>&nbsp;pour nous, et vous verrez qu&#39;on y gagne !</p>\r\n\r\n<p style="text-align: justify;">Ex&eacute;cutez donc la commande suivante :</p>\r\n\r\n<pre style="text-align: justify;">\r\n<samp>php&nbsp;app/console&nbsp;doctrine:generate:form&nbsp;OCPlatformBundle:Advert</samp></pre>\r\n\r\n<p style="text-align: justify;">Comme vous pouvez le voir c&#39;est une commande Doctrine, car c&#39;est lui qui a toutes les informations sur notre objet&nbsp;<code>Advert</code>. Maintenant, vous pouvez aller voir le r&eacute;sultat dans le fichier<code>src/OC/PlatformBundle/Form/AdvertType.php</code>.</p>\r\n\r\n<p style="text-align: justify;">On va commencer tout de suite par am&eacute;liorer ce formulaire. En effet, vous pouvez voir que les types de champ ne sont pas pr&eacute;cis&eacute;s : le composant&nbsp;<code>Form</code>&nbsp;va les deviner &agrave; partir des annotations Doctrine qu&#39;on a mis dans l&#39;objet. Ce n&#39;est pas une bonne pratique, car cela peut &ecirc;tre source d&#39;erreur, c&#39;est pourquoi je vous invite d&egrave;s maintenant &agrave; remettre explicitement les types comme on avait d&eacute;j&agrave; fait dans le contr&ocirc;leur :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Form/AdvertType.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Form; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Component\\Form\\AbstractType; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Component\\Form\\FormBuilderInterface; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Component\\OptionsResolver\\OptionsResolverInterface; </code></p>\r\n\r\n<p style="text-align: justify;"><code>class AdvertType extends AbstractType </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function buildForm(FormBuilderInterface $builder, array $options) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$builder </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;date&#39;, &#39;date&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;title&#39;, &#39;text&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;author&#39;, &#39;text&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;content&#39;, &#39;textarea&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;published&#39;, &#39;checkbox&#39;, array(&#39;required&#39; =&gt; false)) </code></p>\r\n\r\n<p style="text-align: justify;"><code>-&gt;add(&#39;save&#39;, &#39;submit&#39;) </code></p>\r\n\r\n<p style="text-align: justify;"><code>; </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function setDefaultOptions(OptionsResolverInterface $resolver) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$resolver-&gt;setDefaults(array( </code></p>\r\n\r\n<p style="text-align: justify;"><code>&#39;data_class&#39; =&gt; &#39;OC\\PlatformBundle\\Entity\\Advert&#39; </code></p>\r\n\r\n<p style="text-align: justify;"><code>)); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function getName() </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>return &#39;oc_platformbundle_advert&#39;; </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">J&#39;ai &eacute;galement supprim&eacute; les champs&nbsp;<code>image</code>&nbsp;et&nbsp;<code>categories</code>, que nous verrons diff&eacute;remment plus loin dans ce chapitre.</p>\r\n\r\n<p style="text-align: justify;">Quant &agrave;&nbsp;<code>updatedAt</code>,&nbsp;<code>nbApplications</code>&nbsp;et&nbsp;<code>slug</code>, ce sont des attributs internes &agrave; notre entit&eacute;, qui ne concernent en rien le formulaire, je les ai donc supprim&eacute; &eacute;galement. Ce n&#39;est pas le r&ocirc;le de nos visiteurs de rentrer le slug &agrave; la main, on a tout fait pour le g&eacute;n&eacute;rer automatiquement !</p>\r\n\r\n<p style="text-align: justify;">Comme vous pouvez le voir, on n&#39;a fait que d&eacute;placer la construction du formulaire, du contr&ocirc;leur &agrave; une classe externe. Cet&nbsp;<code>AdvertType</code>&nbsp;correspond donc en fait &agrave; la d&eacute;finition des champs de notre formulaire. Ainsi, si l&#39;on utilise le m&ecirc;me formulaire sur plusieurs pages diff&eacute;rentes, on utilisera ce m&ecirc;me&nbsp;<code>AdvertType</code>. Fini le copier-coller ! Voici la r&eacute;utilisabilit&eacute;.&nbsp;<img alt=";)" src="https://openclassrooms.com/bundles/common/images/smiley/clin.png" /></p>\r\n\r\n<p style="text-align: justify;">Rappelez-vous &eacute;galement, un formulaire se construit autour d&#39;un objet. Ici, on a indiqu&eacute; &agrave; Symfony2 quel &eacute;tait cet objet gr&acirc;ce &agrave; la m&eacute;thode&nbsp;<code>setDefaultOptions()</code>, dans laquelle on a d&eacute;fini l&#39;option&nbsp;<code>data_class</code>.</p>\r\n\r\n<h4 style="text-align:justify">Le contr&ocirc;leur &eacute;pur&eacute;</h4>\r\n\r\n<p style="text-align: justify;">Avec cet&nbsp;<code>AdvertType</code>, la construction du formulaire c&ocirc;t&eacute; contr&ocirc;leur s&#39;effectue gr&acirc;ce &agrave; la m&eacute;thode<code>create()</code>&nbsp;du service&nbsp;<code>form.factory</code>&nbsp;&nbsp;(et non plus&nbsp;<code>createBuilder()</code>). Cette m&eacute;thode utilise le composant&nbsp;<code>Form</code>&nbsp;pour construire un formulaire &agrave; partir du&nbsp;<code>AdvertType</code>&nbsp;pass&eacute; en argument. Depuis le contr&ocirc;leur, on r&eacute;cup&egrave;re donc directement un formulaire, on ne passe plus par le constructeur de formulaire comme pr&eacute;c&eacute;demment. Voyez par vous-m&ecirc;mes :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// Dans le contr&ocirc;leur </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert = new Advert; </code></p>\r\n\r\n<p style="text-align: justify;"><code>$form = $this-&gt;get(&#39;form.factory&#39;)-&gt;create(new AdvertType, $advert); </code></p>\r\n\r\n<p style="text-align: justify;">En effet, si l&#39;on s&#39;est donn&eacute; la peine de cr&eacute;er un objet &agrave; l&#39;ext&eacute;rieur du contr&ocirc;leur, c&#39;est pour que ce contr&ocirc;leur soit plus simple. C&#39;est r&eacute;ussi ! La cr&eacute;ation du formulaire est r&eacute;duit &agrave; une seule ligne.</p>\r\n\r\n<p style="text-align: justify;">Au final, en utilisant cette externalisation et en supprimant les commentaires, voici &agrave; quoi ressemble la gestion d&#39;un formulaire dans Symfony2 :</p>\r\n\r\n<pre style="text-align: justify;">\r\n\r\n&nbsp;</pre>\r\n\r\n<p style="text-align: justify;"><code>&lt;?php </code></p>\r\n\r\n<p style="text-align: justify;"><code>// src/OC/PlatformBundle/Controller/AdvertController.php </code></p>\r\n\r\n<p style="text-align: justify;"><code>namespace OC\\PlatformBundle\\Controller; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use OC\\PlatformBundle\\Entity\\Advert; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use OC\\PlatformBundle\\Form\\AdvertType; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller; </code></p>\r\n\r\n<p style="text-align: justify;"><code>use Symfony\\Component\\HttpFoundation\\Request; </code></p>\r\n\r\n<p style="text-align: justify;"><code>class AdvertController extends Controller </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>public function addAction(Request $request) </code></p>\r\n\r\n<p style="text-align: justify;"><code>{ </code></p>\r\n\r\n<p style="text-align: justify;"><code>$advert = new Advert(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$form = $this-&gt;get(&#39;form.factory&#39;)-&gt;create(new AdvertType(), $advert); </code></p>\r\n\r\n<p style="text-align: justify;"><code>if ($form-&gt;handleRequest($request)-&gt;isValid()) { </code></p>\r\n\r\n<p style="text-align: justify;"><code>$em = $this-&gt;getDoctrine()-&gt;getManager(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$em-&gt;persist($advert); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$em-&gt;flush(); </code></p>\r\n\r\n<p style="text-align: justify;"><code>$request-&gt;getSession()-&gt;getFlashBag()-&gt;add(&#39;notice&#39;, &#39;Annonce bien enregistr&eacute;e.&#39;); </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $this-&gt;redirect($this-&gt;generateUrl(&#39;oc_platform_view&#39;, array(&#39;id&#39; =&gt; $advert-&gt;getId()))); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>return $this-&gt;render(&#39;OCPlatformBundle:Advert:add.html.twig&#39;, array( </code></p>\r\n\r\n<p style="text-align: justify;"><code>&#39;form&#39; =&gt; $form-&gt;createView(), </code></p>\r\n\r\n<p style="text-align: justify;"><code>)); </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;"><code>} </code></p>\r\n\r\n<p style="text-align: justify;">Plut&ocirc;t simple, non ? Au final, votre code m&eacute;tier, votre code qui fait r&eacute;ellement quelque chose, se trouve l&agrave; o&ugrave; l&#39;on a utilis&eacute; l&#39;EntityManager. Pour l&#39;exemple, nous n&#39;avons fait qu&#39;enregistrer l&#39;annonce en base de donn&eacute;es, mais c&#39;est ici que vous pourrez envoyer un e-mail, ou effectuer toute autre action dont votre site internet aura besoin.</p>\r\n\r\n<p style="text-align: justify;">Vous trouvez que faire&nbsp;<code>$form = $this-&gt;get(&#39;form.factory&#39;)-&gt;create(new AdvertType(), $advert)</code>&nbsp;est trop long ? Rien que pour vous, le contr&ocirc;leur de base que nous h&eacute;ritons dispose d&#39;une m&eacute;thode raccourcie, voici l&#39;&eacute;quivalent :&nbsp;<code>$form = $this-&gt;createForm(new AdvertType(), $advert)</code>.</p>\r\n', 10, 'Difficile', 'Quoi de plus important sur un site web que les formulaires ? En effet, les formulaires sont l''interface entre vos visiteurs et votre contenu. Chaque annonce, chaque candidature de notre plateforme, etc., tous passent par l''intermédiaire d''un visiteur et d''un formulaire pour exister dans votre base de données.', '<p>N&#39;oubliez pas que les composants peuvent &ecirc;tre utilis&eacute;s hors d&#39;un projet Symfony2. Vous pouvez donc reprendre le composant&nbsp;<code>Form</code>&nbsp;dans votre site m&ecirc;me si vous n&#39;utilisez pas Symfony2.</p>\r\n', '2016-03-28 01:04:52', NULL);
INSERT INTO `chapitre` (`id_chapitre`, `id_cours_chapitre`, `titre_chapitre`, `description_chapitre`, `chemin_chapitre`, `chemin_video_chapitre`, `chemin_presentation_chapitre`, `contenu_chapitre`, `duree_chapitre`, `niveau_chapitre`, `introduction_chapitre`, `objectif_chapitre`, `date_ajout`, `id_quizz_chapitre`) VALUES
(10, 13, 'LES CARACTÉRISTIQUES D''UN CMS', '<p>Un CMS&nbsp;est un logiciel &ndash;&nbsp;qui tourne sur un serveur web &ndash;&nbsp;permettant de cr&eacute;er, de fa&ccedil;on simple, des pages web dynamiques. Le CMS&nbsp;g&egrave;re&nbsp;automatiquement les t&acirc;ches d&#39;affichage des pages (front office) et de mise &agrave; jour du contenu (back-office et lien avec la base de donn&eacute;es).</p>\r\n\r\n<p>Autrement dit,&nbsp;les CMS&nbsp;g&egrave;rent &agrave; votre place tout ce qui permet de relier le client au serveur et le serveur &agrave; la base de donn&eacute;es.</p>\r\n', '13presentationJava.pdf', '13SensioLabs.MP4', '13introductionCsharp.pdf', '<h3>Mise en place simplifi&eacute;</h3>\r\n\r\n<p>Les CMS permettent de mettre en place un site web sans connaissances en programmation. Toutes les actions se font &agrave; travers des interfaces graphiques, et non avec des lignes de code.</p>\r\n\r\n<h3>&Eacute;dition WYSIWYG de pages</h3>\r\n\r\n<p>WYSIWYG est l&#39;acronyme de What You See Is What You Get, ce qui veut dire en fran&ccedil;ais &quot;ce que vous voyez est ce que vous obtenez&quot;.</p>\r\n\r\n<p>De la m&ecirc;me mani&egrave;re que le logiciel Word vous permet&nbsp;de mettre en forme un&nbsp;texte de fa&ccedil;on visuelle, les CMS vous proposent de mettre en forme vos pages web gr&acirc;ce &agrave; une interface graphique : vous n&#39;avez pas &agrave; &eacute;crire&nbsp;vous-m&ecirc;me le HTML que vous voulez afficher&nbsp;aux utilisateurs, les CMS s&#39;occupent de le g&eacute;n&eacute;rer.</p>\r\n\r\n<h3>S&eacute;paration entre contenu&nbsp;et design</h3>\r\n\r\n<p>Dans un m&ecirc;me site web, de nombreuses pages, si ce n&#39;est toutes, ont un design similaire. Les CMS int&egrave;grent des outils permettant de ne pas avoir &agrave; refaire ce design pour chaque page : une fois le design du site choisi, il s&#39;appliquera automatiquement &agrave; toutes les pages.</p>\r\n\r\n<p>Ceci a deux avantages :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>vous pouvez r&eacute;cup&eacute;rer&nbsp;des designs &quot;touts faits&quot; (que l&#39;on appelle des&nbsp;<strong>th&egrave;mes&nbsp;</strong>ou des&nbsp;<strong>templates</strong>) et les appliquer &agrave; votre&nbsp;site directement ;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>vous pouvez modifier le design du site sans avoir &agrave; vous&nbsp;soucier de son contenu. Le nouveau design sera appliqu&eacute; automatiquement.</p>\r\n	</li>\r\n</ul>\r\n\r\n<h3>Gestion des droits d&#39;acc&egrave;s&nbsp;</h3>\r\n\r\n<p>Les utilisateurs peuvent avoir des r&ocirc;les diff&eacute;rents au sein d&#39;un site web, et donc avoir le droit, ou non, d&#39;effectuer certaines actions ou d&#39;acc&eacute;der &agrave; certaines pages.</p>\r\n\r\n<p>Prenons l&#39;exemple d&#39;un forum :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>les utilisateurs non enregistr&eacute;s peuvent lire mais pas poster de messages ;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>les utilisateurs enregistr&eacute;s peuvent lire et poster des messages ;</p>\r\n	</li>\r\n	<li>\r\n	<p>les mod&eacute;rateurs peuvent lire et poster des messages, et ils ont en plus la possibilit&eacute; de modifier et de supprimer les&nbsp;messages des autres utilisateurs ;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>etc.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>La possibilit&eacute; d&#39;effectuer ou non une action est g&eacute;r&eacute;e&nbsp;par ce qu&#39;on appelle des&nbsp;<strong>droits</strong>&nbsp;(avoir le droit, ou non, d&#39;effectuer une action).</p>\r\n\r\n<p>Dans la plupart des CMS, cette gestion des droits existe et est simple &agrave; mettre en &oelig;uvre&nbsp;: il suffit de cr&eacute;er des groupes d&#39;utilisateurs et de leur donner, ou de leur interdire, l&#39;acc&egrave;s aux diff&eacute;rentes parties du site (par exemple l&#39;acc&egrave;s au back-office, &agrave; une partie &quot;membres&quot;...).</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Extensions</h3>\r\n\r\n<p>M&ecirc;me s&#39;il ne s&#39;agit pas &agrave; proprement parler d&#39;une caract&eacute;ristique, les extensions, aussi appel&eacute;es par leur&nbsp;nom anglais&nbsp;<strong>plugins</strong>, sont&nbsp;d&eacute;sormais un incontournable de tous les CMS.</p>\r\n\r\n<p>Les&nbsp;<strong>extensions</strong>&nbsp;ne sont pas directement incluses dans le CMS (m&ecirc;me si certaines sont install&eacute;es par d&eacute;faut !) : il est possible de les installer s&eacute;par&eacute;ment selon vos besoins.&nbsp;Ceci&nbsp;permet d&#39;avoir un c&oelig;ur de CMS contenant&nbsp;uniquement les fonctionnalit&eacute;s indispensables (celles list&eacute;es ci-dessus notamment), tout en augmentant fortement la flexibilit&eacute; de l&#39;outil.</p>\r\n\r\n<p>Il est souvent possible de d&eacute;velopper vous-m&ecirc;me une extension et l&#39;utiliser sur votre site.</p>\r\n', 18, 'Normale', 'Vous vous souvenez de la définition initiale d''un CMS ?\r\n\r\nUn CMS est un logiciel ayant pour but de faciliter ou d''automatiser les tâches de conception et de mise à jour d''un site Internet.\r\nÀ partir de ce que vous avez appris dans les deux premiers chapitres, on peut maintenant préciser cette définition !', '<p>Donc, si j&#39;ai bien compris, un CMS&nbsp;est un site web dynamique pr&eacute;-construit qui dispose d&#39;un back-office et qui automatise pour nous la gestion de l&#39;affichage des pages et la relation avec la base de donn&eacute;es.</p>\r\n\r\n<p>Il y a d&#39;autres caract&eacute;ristiques ?</p>\r\n\r\n<p>Oui&nbsp;!&nbsp;La plupart des CMS&nbsp; disposent des autres caract&eacute;ristiques ci-dessous.</p>\r\n', '2016-03-28 07:52:03', 8);

-- --------------------------------------------------------

--
-- Table structure for table `comment`
--

CREATE TABLE IF NOT EXISTS `comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `thread_id` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `body` longtext COLLATE utf8_unicode_ci NOT NULL,
  `ancestors` varchar(1024) COLLATE utf8_unicode_ci NOT NULL,
  `depth` int(11) NOT NULL,
  `created_at` datetime NOT NULL,
  `state` int(11) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `IDX_5BC96BF0E2904019` (`thread_id`),
  KEY `IDX_5BC96BF0F675F31B` (`author_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `commentaire`
--

CREATE TABLE IF NOT EXISTS `commentaire` (
  `id_commentaire` int(11) NOT NULL AUTO_INCREMENT,
  `id_apprenant_commentaire` int(11) DEFAULT NULL,
  `id_cours_commentaire` int(11) DEFAULT NULL,
  `texte_commentaire` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_commentaire`),
  KEY `IDX_67F068BCD2E32CA` (`id_apprenant_commentaire`),
  KEY `IDX_67F068BCD4706035` (`id_cours_commentaire`),
  KEY `id_apprenant_commentaire` (`id_apprenant_commentaire`,`id_cours_commentaire`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `contactmessage`
--

CREATE TABLE IF NOT EXISTS `contactmessage` (
  `id_utilisateur_source` int(11) DEFAULT NULL,
  `id_utilisateur_destination` int(11) DEFAULT NULL,
  `id_Contact_Message` int(11) NOT NULL AUTO_INCREMENT,
  `date_envoi` datetime NOT NULL,
  `titre_Message` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `contenu_message` longtext COLLATE utf8_unicode_ci NOT NULL,
  `id_discussion` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_Contact_Message`),
  KEY `IDX_DDC5A139BD05F757` (`id_utilisateur_source`),
  KEY `IDX_DDC5A139A44BE469` (`id_utilisateur_destination`),
  KEY `IDX_DDC5A139653379D8` (`id_discussion`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=51 ;

--
-- Dumping data for table `contactmessage`
--

INSERT INTO `contactmessage` (`id_utilisateur_source`, `id_utilisateur_destination`, `id_Contact_Message`, `date_envoi`, `titre_Message`, `contenu_message`, `id_discussion`) VALUES
(20, 19, 31, '2016-03-20 15:54:45', 'Salut Souhaib ', '<p>Salut Souhaib&nbsp;</p>\r\n', 6),
(20, 19, 32, '2016-03-20 16:01:39', NULL, '<p>qsdqsd</p>\r\n', 6),
(20, 19, 33, '2016-03-20 16:03:07', NULL, '<p>qsdqsd</p>\r\n', 6),
(20, 19, 34, '2016-03-20 16:05:49', NULL, '<p>sdfsdf</p>\r\n', 6),
(20, 19, 35, '2016-03-20 16:12:29', NULL, '<p>qsdqsd</p>\r\n', 6),
(20, 19, 36, '2016-03-20 16:12:46', NULL, '<p>dqsdqsd</p>\r\n', 6),
(20, 19, 37, '2016-03-20 16:17:30', 'qsd', '<p>Write your messaqsdqsdge...</p>\r\n', 6),
(19, 19, 38, '2016-03-20 16:22:17', 'zerzer', '<p>Write your messarzerzerge...</p>\r\n', 7),
(19, 19, 39, '2016-03-20 16:22:58', NULL, '<p>qsdqsdqsd</p>\r\n', 7),
(20, 19, 40, '2016-03-20 16:31:54', NULL, '<p>rterybrtychfhf</p>\r\n', 6),
(23, 19, 41, '2016-03-20 17:07:33', 'Salut Souhaib', '<p>Salut Souhaib</p>\r\n', 8),
(19, 23, 42, '2016-03-20 17:11:49', NULL, '<p>qsdqsdqsd</p>\r\n', 8),
(19, 19, 43, '2016-03-20 17:12:07', NULL, '<p>qsdqsd</p>\r\n', 7),
(19, 20, 44, '2016-03-20 17:12:24', NULL, '<p>sdfsdfsdf</p>\r\n', 6),
(19, 20, 45, '2016-03-20 18:22:16', NULL, '<p>qsdqsdqsd</p>\r\n', 6),
(19, 20, 46, '2016-03-20 18:24:18', NULL, '<p>qsdqsdqsd</p>\r\n', 6),
(19, 20, 47, '2016-03-22 02:27:06', NULL, '<p>kjh</p>\r\n', 6),
(19, 20, 48, '2016-03-23 20:51:21', NULL, '<p>salut</p>\r\n', 6),
(19, 20, 49, '2016-03-24 08:33:54', '12121', '<p>Write your message...</p>\r\n', 6),
(19, 19, 50, '2016-04-14 12:19:48', 'sds', '<p>Write your message...sqqsd</p>\r\n', 7);

-- --------------------------------------------------------

--
-- Table structure for table `cours`
--

CREATE TABLE IF NOT EXISTS `cours` (
  `id_cours` int(11) NOT NULL AUTO_INCREMENT,
  `id_discipline_cours` int(11) DEFAULT NULL,
  `id_formateur_cours` int(11) DEFAULT NULL,
  `titre_cours` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `description_cours` longtext COLLATE utf8_unicode_ci NOT NULL,
  `objectif_cours` longtext COLLATE utf8_unicode_ci NOT NULL,
  `prerequis_cours` longtext COLLATE utf8_unicode_ci NOT NULL,
  `duree_cours` int(11) NOT NULL,
  `etat_cours` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `video_cours` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `like_cours` int(11) DEFAULT NULL,
  `niveau_cours` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `introduction_cours` longtext COLLATE utf8_unicode_ci NOT NULL,
  `date_ajout` datetime NOT NULL,
  `nombre_visite` int(11) DEFAULT NULL,
  `aime_cours` int(11) DEFAULT NULL,
  `nombre_participants_cours` int(11) DEFAULT NULL,
  `id_quizz_cours` int(11) DEFAULT NULL,
  `nombre_chapitre_cours` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_cours`),
  KEY `IDX_FDCA8C9C59276A05` (`id_discipline_cours`),
  KEY `IDX_FDCA8C9CC92EF92C` (`id_formateur_cours`),
  KEY `IDX_FDCA8C9C1F214B95` (`id_quizz_cours`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=14 ;

--
-- Dumping data for table `cours`
--

INSERT INTO `cours` (`id_cours`, `id_discipline_cours`, `id_formateur_cours`, `titre_cours`, `description_cours`, `objectif_cours`, `prerequis_cours`, `duree_cours`, `etat_cours`, `video_cours`, `like_cours`, `niveau_cours`, `introduction_cours`, `date_ajout`, `nombre_visite`, `aime_cours`, `nombre_participants_cours`, `id_quizz_cours`, `nombre_chapitre_cours`) VALUES
(9, 9, 19, 'Développez votre site web avec le framework Symfony2', '<p>Ce cours vous permettra de prendre en main Symfony2, le framework PHP de r&eacute;f&eacute;rence. Pourquoi utiliser un framework ? Comment cr&eacute;er un nouveau projet de site web avec Symfony2, mettre en place les environnements de test et de production, concevoir les contr&ocirc;leurs, les templates, g&eacute;rer la traduction et communiquer avec une base de donn&eacute;es via Doctrine 2 ??</p>\r\n', '<p>Alexandre Bacco vous montrera tout au long de ce cours comment ce puissant framework, support&eacute; par une large communaut&eacute;, va vous faire gagner en efficacit&eacute;. Fabien Potencier, cr&eacute;ateur de Symfony2, introduira chacun des chapitres par une vid&eacute;o explicative des principaux points abord&eacute;s.?</p>\r\n', '<p>Avoir une grande id&eacute;e sur le langage PHP...<img alt="laugh" src="http://127.0.0.1/MOOCV5/web/bundles/espritmooc/ckeditor/plugins/smiley/images/teeth_smile.png" style="height:23px; width:23px" title="laugh" /></p>\r\n\r\n<p>Ce cours, &eacute;crit par Alexandre Bacco, a &eacute;t&eacute; con&ccedil;u conjointement par SensioLabs, soci&eacute;t&eacute; &eacute;ditrice de Symfony2, et OpenClassrooms. Un certificat de r&eacute;ussite du cours sera d&eacute;livr&eacute; par SensioLabs et OpenClassrooms pour les &eacute;l&egrave;ves qui r&eacute;ussiront l&rsquo;ensemble des exercices.?</p>\r\n', 40, 'en attente', '2016032401473119C.mp4', 0, 'Difficile', 'Vous développez des sites web régulièrement et vous en avez assez de réinventer la roue ? Vous aimeriez utiliser les bonnes pratiques de développement PHP pour concevoir des sites web de qualité professionnelle ??', '2016-03-14 22:47:38', 250, 1, 2152, 7, 4),
(10, 1, 19, 'Apprenez à programmer en Java', '<p>Bonjour &agrave; tous !&nbsp;<img alt=":D" src="https://openclassrooms.com/bundles/common/images/smiley/heureux.png" /></p>\n\n<p>Bienvenue dans mon cours de programmation en Java. C&#39;est un langage tr&egrave;s utilis&eacute;, notamment par un grand nombre de programmeurs professionnels, ce qui en fait un langage incontournable actuellement.</p>\n\n<p>Voici les caract&eacute;ristiques de Java en quelques mots :</p>\n\n<p>Java est un langage de programmation moderne d&eacute;velopp&eacute; par&nbsp;<strong>Sun Microsystems</strong>&nbsp;(aujourd&#39;hui rachet&eacute; par<strong>Oracle</strong>). Il ne faut surtout pas le confondre avec JavaScript (langage de scripts utilis&eacute; principalement sur les sites web), car Java n&#39;a rien &agrave; voir.<br />\nUne de ses plus grandes forces est son excellente portabilit&eacute; : une fois votre programme cr&eacute;&eacute;, il fonctionnera automatiquement sous Windows, Mac, Linux, etc.</p>\n\n', '<p>Je tiens &agrave; faire une d&eacute;dicace sp&eacute;ciale &agrave; ptipilou, zCorrecteur &eacute;m&eacute;rite, sans qui ce cours&nbsp;n&#39;aurait pas vu le jour !<br />\r\nUn grand merci pour ton travail et ton soutien !&nbsp;<img alt=":)" src="https://openclassrooms.com/bundles/common/images/smiley/smile.png" /></p>\r\n', '<p>Je tiens &agrave; faire une d&eacute;dicace sp&eacute;ciale &agrave; ptipilou, zCorrecteur &eacute;m&eacute;rite, sans qui ce cours&nbsp;n&#39;aurait pas vu le jour !<br />\r\nUn grand merci pour ton travail et ton soutien !&nbsp;<img alt=":)" src="https://openclassrooms.com/bundles/common/images/smiley/smile.png" /></p>\r\n', 40, 'en attente', '19videoIntroduction.mp4', 0, 'Difficile', 'Introduction du cours\r\nBonjour à tous ! :D\r\n\r\nBienvenue dans mon cours de programmation en Java. C''est un langage très utilisé, notamment par un grand nombre de programmeurs professionnels, ce qui en fait un langage incontournable actuellement.', '2016-03-15 16:42:26', 168, 1, 7901, 8, NULL),
(11, 12, 20, 'Simplifiez vos développements JavaScript avec jQuery', '<p style="text-align: justify;">Avec ce cours, je vous propose de d&eacute;couvrir les multiples facettes du&nbsp;<em>framework</em>&nbsp;jQuery. De la s&eacute;lection d&#39;&eacute;l&eacute;ments &agrave; la manipulation du DOM, en passant par l&#39;animation, les requ&ecirc;tes AJAX, l&#39;utilisation et la cr&eacute;ation de plugins, la cr&eacute;ation de jeux et bien d&#39;autres choses encore !</p>\r\n\r\n<p style="text-align: justify;">N&#39;ayez crainte, votre apprentissage se fera en douceur et de tr&egrave;s nombreux exemples de code document&eacute;s viendront consolider vos connaissances. Au fil des pages, votre approche deviendra de plus en plus naturelle et les nouveaux chapitres ne feront qu&#39;apporter une pierre de plus &agrave; l&#39;&eacute;difice, sans en &eacute;branler les fondations. Si vous le souhaitez, vous pouvez am&eacute;liorer vos connaissances en JavaScript en consultant&nbsp;<a href="http://www.siteduzero.com/tutoriel-3-309961-dynamisez-vos-sites-web-avec-javascript.html">ce cours</a>.</p>\r\n\r\n<p style="text-align: justify;">Si vous lisez ces lignes, c&#39;est parce que vous avez d&eacute;cid&eacute; d&#39;aller plus loin dans vos d&eacute;veloppements Web. En portant votre choix sur jQuery, je peux vous certifier que vous avez fait le bon choix. Si aujourd&#39;hui de plus en plus d&#39;entreprises l&#39;utilisent pour leur site Web, ce n&#39;est pas par hasard. Tournez vite les pages et devenez, vous aussi, un inconditionnel de jQuery. Et surtout, amusez-vous bien !</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style="text-align: center;">&nbsp;</p>\r\n\r\n<p style="text-align: center;"><img alt="Le logo de jQuery" src="https://user.oc-static.com/files/385001_386000/385862.png" /></p>\r\n\r\n<p style="text-align: center;">Le logo de jQuery</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Avec ce cours, je vous propose de d&eacute;couvrir les multiples facettes du&nbsp;<em>framework</em>&nbsp;jQuery. De la s&eacute;lection d&#39;&eacute;l&eacute;ments &agrave; la manipulation du DOM, en passant par l&#39;animation, les requ&ecirc;tes AJAX, l&#39;utilisation et la cr&eacute;ation de plugins, la cr&eacute;ation de jeux et bien d&#39;autres choses encore !</p>\r\n', '<p>Avec ce cours, je vous propose de d&eacute;couvrir les multiples facettes du&nbsp;<em>framework</em>&nbsp;jQuery. De la s&eacute;lection d&#39;&eacute;l&eacute;ments &agrave; la manipulation du DOM, en passant par l&#39;animation, les requ&ecirc;tes AJAX, l&#39;utilisation et la cr&eacute;ation de plugins, la cr&eacute;ation de jeux et bien d&#39;autres choses encore !</p>\r\n', 28, 'en attente', '20jQueryT.MP4', 0, 'Normal', 'Si vous avez déjà programmé en JavaScript, vous savez que ce langage est puissant, mais aussi « verbeux » et souvent assez complexe à mettre en œuvre. Si vous voulez accéder à toute la puissance de JavaScript en utilisant des instructions simples, logiques, faciles à comprendre et à maintenir, jQuery est vraiment fait pour vous !\r\n', '2016-03-16 13:02:08', 35, 1, 7854, NULL, NULL),
(12, 10, 19, 'Apprenez ASP.NET MVC', '<p>&Agrave; I&rsquo;issue de ce cours, vous saurez cr&eacute;er un site web dynamique avec ASP.NET MVC, am&eacute;liorer sa r&eacute;activit&eacute; avec de l&rsquo;AJAX, mais aussi d&eacute;velopper des applications web pour appareils mobiles et encore d&rsquo;autres surprises &hellip;</p>\r\n\r\n<p>Joli programme, n&rsquo;est-ce pas ? Alors, enfilez votre tenue de combat et inscrivez vous &agrave; ce cours !</p>\r\n', '', '<p>Ne vous inqui&eacute;tez pas, ce cours a &eacute;t&eacute; &eacute;crit pour des d&eacute;butants qui n&rsquo;y connaissent rien en sites web, en expliquant tout depuis z&eacute;ro. Vous avez juste besoin de conna&icirc;tre les bases du langage C#, un des langages de programmation qu&#39;utilise ASP.NET MVC et que j&#39;utiliserai dans ce cours. Si vous ne vous sentez pas &agrave; l&#39;aise sur le sujet, vous pouvez consulter&nbsp;<a href="https://openclassrooms.com/informatique/cours/apprenez-a-developper-en-c">mon cours sur C#</a>. &nbsp;</p>\r\n', 30, 'en attente', '19Learn with Treehouse in an Hour a Day - YouTube.MP4', 0, 'Difficile', 'Introduction du cours\r\nVous voulez devenir un cador de la création de sites web ? Ce cours va vous faire découvrir l’outil dont vous avez besoin : ASP.NET MVC ! C’est un framework de développement web créé par Microsoft et permettant de réaliser des sites web complexes grâce au modèle “MVC” (Model View Controller).', '2016-03-18 20:01:09', 190, 1, 2557, 10, 1),
(13, 9, 19, 'Découvrez les solutions CMS', '<p>Int&eacute;ressant, mais moi j&#39;aimerais faire un site web... une d&eacute;finition, &ccedil;a ne m&#39;aide pas vraiment !</p>\r\n\r\n<p>Cela tombe bien car l&#39;objectif de ce cours est de r&eacute;pondre&nbsp;le&nbsp;plus concr&egrave;tement possible aux&nbsp;questions qui se posent assez rapidement lorsque l&#39;on s&#39;int&eacute;resse aux CMS :</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Est-ce difficile &agrave; mettre en place ?</p>\r\n	</li>\r\n	<li>\r\n	<p>Dois-je savoir programmer ?</p>\r\n	</li>\r\n	<li>\r\n	<p>Quel CMS&nbsp;choisir ?</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Allez, c&#39;est parti ! Nous allons commencer par un rappel des notions de base &agrave; conna&icirc;tre sur le Web quand on parle du fonctionnements de CMS, puis nous encha&icirc;nerons sur leurs diff&eacute;rentes caract&eacute;ristiques.</p>\r\n', '<p><strong>Objectifs p&eacute;dagogiques :</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Comprendre le fonctionnement des CMS</p>\r\n	</li>\r\n	<li>\r\n	<p>Explorer leurs diff&eacute;rentes fonctionnalit&eacute;s</p>\r\n	</li>\r\n	<li>\r\n	<p>D&eacute;couvrir leurs avantages et leurs inconv&eacute;nients</p>\r\n	</li>\r\n	<li>\r\n	<p>Choisir un CMS adapt&eacute; &agrave; vos usages</p>\r\n	</li>\r\n</ul>\r\n', '<p>&nbsp;aucun</p>\r\n', 15, 'en attente', '19RedstarRadi.MP4', 0, 'Difficile', 'Bonjour à tous !\r\n\r\nUn système de gestion de contenu (SGC), plus connu sous le nom anglais de CMS (pour Content Management System) est un logiciel ayant pour but de faciliter ou d''automatiser les tâches de conception et de mise à jour d''un site Internet.', '2016-03-28 07:46:35', 6, NULL, 1, 11, 1);

-- --------------------------------------------------------

--
-- Table structure for table `discipline`
--

CREATE TABLE IF NOT EXISTS `discipline` (
  `id_discipline` int(11) NOT NULL AUTO_INCREMENT,
  `nom_discipline` varchar(25) COLLATE utf8_unicode_ci NOT NULL,
  `logo` varchar(500) COLLATE utf8_unicode_ci NOT NULL,
  `nombre_cours` int(11) DEFAULT NULL,
  `id_forum_discipline` int(11) DEFAULT NULL,
  `description_discipline` longtext COLLATE utf8_unicode_ci,
  `date_creation` datetime DEFAULT NULL,
  PRIMARY KEY (`id_discipline`),
  KEY `IDX_75BEEE3F140206AB` (`id_forum_discipline`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=13 ;

--
-- Dumping data for table `discipline`
--

INSERT INTO `discipline` (`id_discipline`, `nom_discipline`, `logo`, `nombre_cours`, `id_forum_discipline`, `description_discipline`, `date_creation`) VALUES
(1, 'Oriente Object', '1java.png', 4, 1, '<p>La programmation orient&eacute;e objet (PO), ou programmation par objet, est un paradigme de programmation informatique &eacute;labor&eacute; par les Norv&eacute;giens Ole-Johan Dahl et Kristen Nygaard au d&eacute;but des ann&eacute;es 1960 et poursuivi par les travaux d&#39;Alan Kay dans les ann&eacute;es 1970. Il consiste en la d&eacute;finition et l&#39;interaction de briques logicielles appel&eacute;es objets ; un objet repr&eacute;sente un concept, une id&eacute;e ou toute entit&eacute; du monde physique, comme une voiture, une personne ou encore une page d&#39;un livre. Il poss&egrave;de une structure interne et un comportement, et il sait interagir avec ses pairs. Il s&#39;agit donc de repr&eacute;senter ces objets et leurs relations ; l&#39;interaction entre les objets via leurs relations permet de concevoir et r&eacute;aliser les fonctionnalit&eacute;s attendues, de mieux r&eacute;soudre le ou les probl&egrave;mes. D&egrave;s lors, l&#39;&eacute;tape de mod&eacute;lisation rev&ecirc;t une importance majeure et n&eacute;cessaire pour la POO. C&#39;est elle qui permet de transcrire les &eacute;l&eacute;ments du r&eacute;el sous forme virtuelle!</p>\n', '2016-04-06 00:00:00'),
(2, 'Android', 'android.png', 1, 2, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(3, 'IOS', 'ios.png', 1, 4, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(4, 'Windows Phone', 'windowsPhone.png', 1, 5, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(5, 'BlackBerry OS', 'blackBerry.png', 1, 6, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(6, 'Share Point', 'sharepoint.png', 1, 7, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(7, 'Java Me', 'j2me.png', 1, 8, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(8, 'BootStrap', 'bootstrap.png', 1, 9, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(9, 'PHP', 'php.png', 1, 10, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(10, 'C#', 'csharp.png', 1, 3, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(11, 'HTML5', 'HTML5.png', 1, 11, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL),
(12, 'Java Script', 'javascript.png', 1, 12, '<p style="text-align: justify;">Android, prononc&eAacute; andro&iuml;de, est un syst&egrave;me d&#39;exploitation mobile open source 2,3 bas&eacute; sur le noyau Linux et d&eacute;velopp&eacute; actuellement par Google. Le syst&egrave;me a d&#39;abord &eacute;t&eacute; con&ccedil;u pour les smartphones et tablettes tactiles, puis s&#39;est diversifi&eacute; dans les objets connect&eacute;s et ordinateurs comme les t&eacute;l&eacute;visions (Android TV), les voitures (Android Auto), les ordinateurs (Android-x86) et les smartwatch (Android Wear). Le syst&egrave;me a &eacute;t&eacute; lanc&eacute; en juin 2007 &agrave; la suite du rachat par Google en 2005 de la startup du m&ecirc;me nom4. En 2015, Android est le syst&egrave;me d&#39;exploitation le plus utilis&eacute; dans le monde avec plus de 80 % de parts de march&eacute; dans les smartphones5.</p>\n', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `discussion`
--

CREATE TABLE IF NOT EXISTS `discussion` (
  `id_discussion` int(11) NOT NULL AUTO_INCREMENT,
  `id_utilisateur_source` int(11) DEFAULT NULL,
  `id_utilisateur_destination` int(11) DEFAULT NULL,
  `last_message` int(11) DEFAULT NULL,
  `date_publication_message` datetime NOT NULL,
  `nombre_message` int(11) DEFAULT NULL,
  `sujet_discussion` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `date_mise_a_jour` datetime DEFAULT NULL,
  PRIMARY KEY (`id_discussion`),
  KEY `IDX_8FE4FADFBD05F757` (`id_utilisateur_source`),
  KEY `IDX_8FE4FADFA44BE469` (`id_utilisateur_destination`),
  KEY `IDX_8FE4FADFD0310C37` (`last_message`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=9 ;

--
-- Dumping data for table `discussion`
--

INSERT INTO `discussion` (`id_discussion`, `id_utilisateur_source`, `id_utilisateur_destination`, `last_message`, `date_publication_message`, `nombre_message`, `sujet_discussion`, `date_mise_a_jour`) VALUES
(6, 20, 19, 49, '2016-03-20 15:54:45', 14, 'Salut Souhaib ', '2016-03-24 08:33:54'),
(7, 19, 19, 50, '2016-03-20 16:22:17', 4, 'zerzer', '2016-04-14 12:19:48'),
(8, 23, 19, 42, '2016-03-20 17:07:33', 2, 'Salut Souhaib', '2016-03-20 17:11:49');

-- --------------------------------------------------------

--
-- Table structure for table `entreprise`
--

CREATE TABLE IF NOT EXISTS `entreprise` (
  `id_entreprise` int(11) NOT NULL AUTO_INCREMENT,
  `nom_entreprise` varchar(25) COLLATE utf8_unicode_ci NOT NULL,
  `description_entreprise` varchar(350) COLLATE utf8_unicode_ci NOT NULL,
  `attestation_entreprise` varchar(250) COLLATE utf8_unicode_ci NOT NULL,
  `date_creation_entreprise` date NOT NULL,
  `responsable_entreprise` varchar(20) COLLATE utf8_unicode_ci NOT NULL,
  `etat_entreprise` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `adresse_entreprise` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `tel_entreprise` int(11) NOT NULL,
  PRIMARY KEY (`id_entreprise`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `forum`
--

CREATE TABLE IF NOT EXISTS `forum` (
  `id_forum` int(11) NOT NULL AUTO_INCREMENT,
  `id_discipline_forum` int(11) DEFAULT NULL,
  `nom_forum` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `nombre_sujet` int(11) DEFAULT NULL,
  `date_creation` datetime NOT NULL,
  `last_sujet` int(11) DEFAULT NULL,
  `nombre_vu` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_forum`),
  KEY `IDX_44EA91C921C65854` (`id_discipline_forum`),
  KEY `IDX_44EA91C94C586F86` (`last_sujet`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=13 ;

--
-- Dumping data for table `forum`
--

INSERT INTO `forum` (`id_forum`, `id_discipline_forum`, `nom_forum`, `nombre_sujet`, `date_creation`, `last_sujet`, `nombre_vu`) VALUES
(1, 1, 'Programmation Orienté Objet Forum', 0, '2014-11-07 00:00:00', NULL, 5499),
(2, 2, 'Android Mobile', 2, '2016-11-30 00:00:00', NULL, 5664),
(3, 10, 'Csharp/C#', 2, '2015-03-30 00:00:00', 11, 2259),
(4, 3, 'IOS/Swift', 0, '2015-07-13 00:00:00', NULL, 7989),
(5, 4, 'Windows Phone', 0, '2015-07-13 00:00:00', NULL, 6985),
(6, 5, 'BlackBerry OS', 0, '2015-07-13 00:00:00', NULL, 7986),
(7, 6, 'Share Point', 0, '2015-07-13 00:00:00', NULL, 5632),
(8, 7, 'Java ME / J2ME', 0, '2015-07-13 00:00:00', NULL, 7798),
(9, 8, 'BootStrap/CSS', 2, '2015-07-13 00:00:00', 33, 8045),
(10, 9, 'PHP', 4, '2015-07-13 00:00:00', 12, 7713),
(11, 11, 'HTML/HTML5', 0, '2015-07-13 00:00:00', NULL, 2210),
(12, 12, 'Java Script', 0, '2015-07-13 00:00:00', NULL, 7643);

-- --------------------------------------------------------

--
-- Table structure for table `fos_user`
--

CREATE TABLE IF NOT EXISTS `fos_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `username_canonical` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `email_canonical` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  `salt` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `last_login` datetime DEFAULT NULL,
  `locked` tinyint(1) NOT NULL,
  `expired` tinyint(1) NOT NULL,
  `expires_at` datetime DEFAULT NULL,
  `confirmation_token` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `password_requested_at` datetime DEFAULT NULL,
  `roles` longtext COLLATE utf8_unicode_ci NOT NULL COMMENT '(DC2Type:array)',
  `credentials_expired` tinyint(1) NOT NULL,
  `credentials_expire_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQ_957A647992FC23A8` (`username_canonical`),
  UNIQUE KEY `UNIQ_957A6479A0D96FBF` (`email_canonical`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `information_entreprise`
--

CREATE TABLE IF NOT EXISTS `information_entreprise` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `entreprise_id` int(11) DEFAULT NULL,
  `specialite` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `site_web` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `abreviation` varchar(10) COLLATE utf8_unicode_ci NOT NULL,
  `gouvernerat` varchar(10) COLLATE utf8_unicode_ci NOT NULL,
  `attestation` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `filename` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `description` varchar(500) COLLATE utf8_unicode_ci NOT NULL,
  `code_postale` int(11) NOT NULL,
  `type` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `adresse` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `nationnalite` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `numTel` int(11) NOT NULL,
  `matriculeFiscal` int(11) NOT NULL,
  `raison_inscription` varchar(300) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQ_414C97B9A4AEAFEA` (`entreprise_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=2 ;

--
-- Dumping data for table `information_entreprise`
--

INSERT INTO `information_entreprise` (`id`, `entreprise_id`, `specialite`, `site_web`, `abreviation`, `gouvernerat`, `attestation`, `filename`, `description`, `code_postale`, `type`, `adresse`, `nationnalite`, `numTel`, `matriculeFiscal`, `raison_inscription`) VALUES
(1, 26, 'esprit', 'esprit', 'esprit', 'esprit', 'C:\\wamp\\www\\MOOCV5\\app/../web/uploads/attestation/26atirapport1.pdf', '26atirapport1.pdf', 'esprit', 2010, NULL, 'esprit', 'tunisian', 78787878, 25587, 'esprit');

-- --------------------------------------------------------

--
-- Table structure for table `information_formateur`
--

CREATE TABLE IF NOT EXISTS `information_formateur` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `formateur_id` int(11) DEFAULT NULL,
  `specialite` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `cv` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `filename` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `googlePlus` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `siteWeb` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `sexe` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `aPropos` varchar(5000) COLLATE utf8_unicode_ci NOT NULL,
  `biographie` varchar(5000) COLLATE utf8_unicode_ci NOT NULL,
  `miniBiographie` varchar(5000) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQ_53FA7BCD155D8F51` (`formateur_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=10 ;

--
-- Dumping data for table `information_formateur`
--

INSERT INTO `information_formateur` (`id`, `formateur_id`, `specialite`, `cv`, `filename`, `googlePlus`, `siteWeb`, `sexe`, `aPropos`, `biographie`, `miniBiographie`) VALUES
(8, 19, 'Android', 'C:\\wamp\\www\\MOOCV5\\app/../web/uploads/cv/cvSouhaib.pdf', 'cvSouhaib.pdf', 'http://www.googlePlusSouhaib.com', 'https://www.facebook.com/Souhaib882', 'Homme', '<p>Anniversaire : Le 03 octobre(24&nbsp;ans)</p>\r\n\r\n<p>Passionn&eacute; de d&eacute;veloppement web, Alexandre participe &agrave; la cr&eacute;ation de la version 3 d&#39;OpenClassrooms durant ses &eacute;tudes. Dipl&ocirc;m&eacute; de l&#39;&Eacute;cole Centrale de Lyon, une &eacute;cole d&#39;ing&eacute;nieur g&eacute;n&eacute;raliste, il tombe sous le charme du framework Symfony2 avant m&ecirc;me sa sortie et d&eacute;cide de partager ses connaissances en r&eacute;digeant un cours sur OpenClassrooms.</p>\r\n', '', '<p>Ing&eacute;nieur Centralien et Entrepreneur...</p>\r\n'),
(9, 22, 'Android', 'C:\\wamp\\www\\MOOCV5\\app/../web/uploads/cv/introductionCsharp.pdf', 'introductionCsharp.pdf', 'http://www.googlePlusAmin.com', 'http://www.Amine.com', 'Homme', '<p>Ing&eacute;nieur Centralien et Entrepreneur</p>\r\n', '<p>Passionn&eacute; de d&eacute;veloppement web, Alexandre participe &agrave; la cr&eacute;ation de la version 3 d&#39;OpenClassrooms durant ses &eacute;tudes. Dipl&ocirc;m&eacute; de l&#39;&Eacute;cole Centrale de Lyon, une &eacute;cole d&#39;ing&eacute;nieur g&eacute;n&eacute;raliste, il tombe sous le charme du framework Symfony2 avant m&ecirc;me sa sortie et d&eacute;cide de partager ses connaissances en r&eacute;digeant un cours sur OpenClassrooms.</p>\r\n', '<p>Passionn&eacute; de d&eacute;veloppement web, Alexandre participe &agrave; la cr&eacute;ation de la version 3 d&#39;OpenClassrooms durant ses &eacute;tudes. Dipl&ocirc;m&eacute; de l&#39;&Eacute;cole Centrale de Lyon, une &eacute;cole d&#39;ing&eacute;nieur g&eacute;n&eacute;raliste, il tombe sous le charme du framework Symfony2 avant m&ecirc;me sa sortie et d&eacute;cide de partager ses connaissances en r&eacute;digeant un cours sur OpenClassrooms.</p>\r\n');

-- --------------------------------------------------------

--
-- Table structure for table `invitation_comite`
--

CREATE TABLE IF NOT EXISTS `invitation_comite` (
  `id_invitation_comite` int(11) NOT NULL AUTO_INCREMENT,
  `id_formateur_invitation_comite` int(11) DEFAULT NULL,
  `etat_invitation_comite` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_invitation_comite`),
  KEY `IDX_90041155264B8AD5` (`id_formateur_invitation_comite`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `invitation_entreprise_formateur`
--

CREATE TABLE IF NOT EXISTS `invitation_entreprise_formateur` (
  `id_invitation_entreprise_formateur` int(11) NOT NULL AUTO_INCREMENT,
  `id_formateur` int(11) DEFAULT NULL,
  `id_entreprise` int(11) DEFAULT NULL,
  `etat_invitation` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_invitation_entreprise_formateur`),
  KEY `IDX_6AD34A936D43C268` (`id_formateur`),
  KEY `IDX_6AD34A93A8937AB7` (`id_entreprise`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `invitation_formateur_entreprise`
--

CREATE TABLE IF NOT EXISTS `invitation_formateur_entreprise` (
  `id_invitation_formateur__entreprise` int(11) NOT NULL AUTO_INCREMENT,
  `id_formateur` int(11) DEFAULT NULL,
  `id_entreprise` int(11) DEFAULT NULL,
  `etat_invitation` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_invitation_formateur__entreprise`),
  KEY `IDX_422B4B806D43C268` (`id_formateur`),
  KEY `IDX_422B4B80A8937AB7` (`id_entreprise`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=2 ;

--
-- Dumping data for table `invitation_formateur_entreprise`
--

INSERT INTO `invitation_formateur_entreprise` (`id_invitation_formateur__entreprise`, `id_formateur`, `id_entreprise`, `etat_invitation`) VALUES
(1, 19, 26, 'en attente');

-- --------------------------------------------------------

--
-- Table structure for table `message`
--

CREATE TABLE IF NOT EXISTS `message` (
  `id_message` int(11) NOT NULL AUTO_INCREMENT,
  `id_utilisateur_message` int(11) DEFAULT NULL,
  `id_sujet_message` int(11) DEFAULT NULL,
  `contenu_message` varchar(5000) COLLATE utf8_unicode_ci NOT NULL,
  `titre_message` longtext COLLATE utf8_unicode_ci NOT NULL,
  `date_publication_message` datetime NOT NULL,
  `date_modification_message` datetime DEFAULT NULL,
  PRIMARY KEY (`id_message`),
  KEY `IDX_790009E38A5C5B26` (`id_utilisateur_message`),
  KEY `IDX_790009E385A6EC73` (`id_sujet_message`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=15 ;

--
-- Dumping data for table `message`
--

INSERT INTO `message` (`id_message`, `id_utilisateur_message`, `id_sujet_message`, `contenu_message`, `titre_message`, `date_publication_message`, `date_modification_message`) VALUES
(1, 19, 26, '<p>aa</p>\r\n', 'aa', '2016-04-14 12:19:31', NULL),
(2, 19, 31, '<p>ahahahaha</p>\r\n', 'ahahah', '2016-04-19 20:13:37', NULL),
(10, 20, 49, 'Rediger votre message...sdfsdf', 'test', '1899-11-21 05:11:16', NULL),
(11, 20, 49, 'Rediger votre message...sdfsdfsdf', 'test2', '1899-11-30 08:23:33', NULL),
(12, 20, 27, 'Rediger votre message...', 'testtest', '1899-11-30 08:23:42', NULL),
(13, 20, 50, 'Rediger votre message...qsdqsdqsd', 'qxcqsdqsd', '1899-11-30 14:23:18', NULL),
(14, 19, 49, 'Rediger votre message...souhaib', 'souhaib', '1899-11-30 09:20:37', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `notification`
--

CREATE TABLE IF NOT EXISTS `notification` (
  `id_notification` int(11) NOT NULL AUTO_INCREMENT,
  `id_utilisateur_notification` int(11) DEFAULT NULL,
  `id_sujet_notification` int(11) DEFAULT NULL,
  `id_proprietaire_notification` int(11) DEFAULT NULL,
  `date_notification` datetime NOT NULL,
  `etat_notification` int(11) NOT NULL,
  `type_notification` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id_notification`),
  KEY `IDX_A765AD32BDA3681A` (`id_utilisateur_notification`),
  KEY `IDX_A765AD32F23EB44B` (`id_sujet_notification`),
  KEY `IDX_A765AD322C55FF01` (`id_proprietaire_notification`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=41 ;

--
-- Dumping data for table `notification`
--

INSERT INTO `notification` (`id_notification`, `id_utilisateur_notification`, `id_sujet_notification`, `id_proprietaire_notification`, `date_notification`, `etat_notification`, `type_notification`) VALUES
(5, 19, 4, 20, '2016-03-15 12:33:41', 1, ''),
(12, 20, 4, 20, '2016-03-15 23:33:17', 1, ''),
(20, 20, 4, 20, '2016-03-16 00:12:23', 1, ''),
(21, 19, 4, 20, '2016-03-16 00:14:40', 1, ''),
(23, 20, 4, 20, '2016-03-16 00:22:44', 1, ''),
(26, 20, 10, 20, '2016-03-16 17:53:53', 1, ''),
(27, 20, 10, 20, '2016-03-16 18:01:27', 1, ''),
(28, 20, 10, 20, '2016-03-16 18:03:32', 1, ''),
(29, 19, 12, 20, '2016-03-20 02:51:21', 1, NULL),
(31, 19, 12, 20, '2016-03-20 18:53:03', 1, NULL),
(32, 19, 12, 20, '2016-03-20 18:55:35', 1, NULL),
(33, 19, 12, 20, '2016-03-22 02:27:06', 1, 'message'),
(36, 19, NULL, 20, '2016-03-23 20:51:21', 0, 'message'),
(37, 19, NULL, 20, '2016-03-24 08:33:54', 0, 'message'),
(38, 19, 26, 19, '2016-04-14 12:19:31', 1, NULL),
(39, 19, NULL, 19, '2016-04-14 12:19:48', 1, 'message'),
(40, 19, 31, 19, '2016-04-19 20:13:37', 1, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `progression`
--

CREATE TABLE IF NOT EXISTS `progression` (
  `id_progression` int(11) NOT NULL AUTO_INCREMENT,
  `id_cours_progression` int(11) DEFAULT NULL,
  `id_chapitre_progression` int(11) DEFAULT NULL,
  `id_utilisateur_pogression` int(11) DEFAULT NULL,
  `date_progression` datetime NOT NULL,
  `type_progression` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `etat_progression` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id_progression`),
  KEY `IDX_532EDFA4663258FA` (`id_cours_progression`),
  KEY `IDX_532EDFA4D95E654` (`id_chapitre_progression`),
  KEY `IDX_532EDFA495017EA6` (`id_utilisateur_pogression`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=171 ;

--
-- Dumping data for table `progression`
--

INSERT INTO `progression` (`id_progression`, `id_cours_progression`, `id_chapitre_progression`, `id_utilisateur_pogression`, `date_progression`, `type_progression`, `etat_progression`) VALUES
(159, 9, NULL, 19, '2016-03-28 06:46:40', 'cours', 'terminer'),
(160, 9, 4, 19, '2016-03-28 06:46:40', 'chapitre', NULL),
(161, 9, 6, 19, '2016-03-28 07:10:35', 'chapitre', NULL),
(162, 9, 8, 19, '2016-03-28 07:10:53', 'chapitre', NULL),
(165, 12, NULL, 19, '2016-03-28 07:36:52', 'cours', 'terminer'),
(166, 12, 5, 19, '2016-03-28 07:36:52', 'chapitre', NULL),
(167, 13, NULL, 19, '2016-03-28 07:54:14', 'cours', 'terminer'),
(168, 13, 10, 19, '2016-03-28 07:54:14', 'chapitre', NULL),
(169, 9, NULL, 19, '2016-04-21 17:51:54', 'cours', 'en cours'),
(170, 9, 9, 19, '2016-04-21 17:51:54', 'chapitre', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `question`
--

CREATE TABLE IF NOT EXISTS `question` (
  `id_question` int(11) NOT NULL AUTO_INCREMENT,
  `id_quizz_cours_question` int(11) DEFAULT NULL,
  `id_quizz_entrainement_question` int(11) DEFAULT NULL,
  `id_quizz_final_question` int(11) DEFAULT NULL,
  `texte_question` varchar(300) COLLATE utf8_unicode_ci NOT NULL,
  `explication_question` varchar(800) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_question`),
  KEY `IDX_B6F7494EF7885782` (`id_quizz_cours_question`),
  KEY `IDX_B6F7494E45E7DB66` (`id_quizz_entrainement_question`),
  KEY `IDX_B6F7494E4FF5D76F` (`id_quizz_final_question`),
  KEY `id_quizz_entrainement_question` (`id_quizz_entrainement_question`,`id_quizz_cours_question`,`id_quizz_final_question`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=54 ;

--
-- Dumping data for table `question`
--

INSERT INTO `question` (`id_question`, `id_quizz_cours_question`, `id_quizz_entrainement_question`, `id_quizz_final_question`, `texte_question`, `explication_question`) VALUES
(26, 7, NULL, NULL, 'Symfony1', '<p>j&rsquo;explique la 1&eacute;re question</p>\r\n'),
(27, 7, NULL, NULL, 'Symfony2', '<p>J&rsquo;explique la 2&eacute;me question</p>\r\n'),
(36, 7, NULL, NULL, 'Symfony3', '<p>Explique votre question...</p>\r\n'),
(37, NULL, 5, NULL, 'qq', '<p>Explique votre question...</p>\r\n'),
(38, 7, NULL, NULL, 'qq', '<p>Explique votre question...</p>\r\n'),
(46, NULL, 6, NULL, 'a', '<p>Explique votre question...</p>\r\n'),
(47, 10, NULL, NULL, 'aa', '<p>Explique votre question...</p>\r\n'),
(48, NULL, 7, NULL, 'aa', '<p>a</p>\r\n'),
(49, NULL, 7, NULL, 'a', '<p>a</p>\r\n'),
(50, 11, NULL, NULL, 'CMS', 'CMS'),
(51, 11, NULL, NULL, 'CMS', 'CMS'),
(52, NULL, 8, NULL, 'Caractéristique CMS', '<p>Caract&eacute;ristique CMS</p>\r\n'),
(53, NULL, 8, NULL, 'Caractéristique CMS', '<p>Caract&eacute;ristique CMS</p>\r\n');

-- --------------------------------------------------------

--
-- Table structure for table `quizz_chapitre`
--

CREATE TABLE IF NOT EXISTS `quizz_chapitre` (
  `id_quizz_entrainement` int(11) NOT NULL AUTO_INCREMENT,
  `id_chapitre_quizz_entrainement` int(11) DEFAULT NULL,
  `titre_quizz_entrainement` varchar(20) COLLATE utf8_unicode_ci NOT NULL,
  `date_creation` datetime DEFAULT NULL,
  `description_quizz_entrainement` longtext COLLATE utf8_unicode_ci NOT NULL,
  `niveau_quizz_entrainement` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id_quizz_entrainement`),
  KEY `IDX_DB64C37CDD977F0` (`id_chapitre_quizz_entrainement`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=9 ;

--
-- Dumping data for table `quizz_chapitre`
--

INSERT INTO `quizz_chapitre` (`id_quizz_entrainement`, `id_chapitre_quizz_entrainement`, `titre_quizz_entrainement`, `date_creation`, `description_quizz_entrainement`, `niveau_quizz_entrainement`) VALUES
(5, 4, 'Symfony2', '2016-03-23 01:23:24', '<p>Symfony2</p>\r\n', NULL),
(6, 6, 'Les sites web', '2016-03-26 22:20:12', '<p>sdfsdf</p>\r\n', 'Moyenne'),
(7, 5, 'le 1ére chapitre', '2016-03-28 07:40:51', 'le 1ére chapitre', 'Difficile'),
(8, 10, 'Caractéristique CMS', '2016-03-28 07:58:59', 'Caractéristique CMS', 'Moyenne');

-- --------------------------------------------------------

--
-- Table structure for table `quizz_cours`
--

CREATE TABLE IF NOT EXISTS `quizz_cours` (
  `id_quizz_cours` int(11) NOT NULL AUTO_INCREMENT,
  `id_cours_quizz_cours` int(11) DEFAULT NULL,
  `titre_quizz_cours` varchar(40) COLLATE utf8_unicode_ci NOT NULL,
  `description_quizz_cours` varchar(400) COLLATE utf8_unicode_ci NOT NULL,
  `duree_quizz_cours` int(11) NOT NULL,
  `niveau_quizz_entrainement` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id_quizz_cours`),
  KEY `IDX_7338662B4B38EEB` (`id_cours_quizz_cours`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=12 ;

--
-- Dumping data for table `quizz_cours`
--

INSERT INTO `quizz_cours` (`id_quizz_cours`, `id_cours_quizz_cours`, `titre_quizz_cours`, `description_quizz_cours`, `duree_quizz_cours`, `niveau_quizz_entrainement`) VALUES
(7, 9, 'Maitrisez symfony 2', '<p>Maitrisez symfony 2</p>\r\n', 18, NULL),
(8, 10, 'Une Quizz Pour le cours', 'Une Quizz Pour le cours', 8, NULL),
(10, 12, 'Souhaib', 'azeaze', 8, 'Difficile'),
(11, 13, 'CMS', 'CMS', 4, 'Facile');

-- --------------------------------------------------------

--
-- Table structure for table `quizz_final`
--

CREATE TABLE IF NOT EXISTS `quizz_final` (
  `id_quizz_final` int(11) NOT NULL AUTO_INCREMENT,
  `id_cours_quizz_final` int(11) DEFAULT NULL,
  `titre_quizz_final` varchar(20) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_quizz_final`),
  KEY `IDX_162C5638A5AC5EB1` (`id_cours_quizz_final`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `reponse`
--

CREATE TABLE IF NOT EXISTS `reponse` (
  `id_reponse` int(11) NOT NULL AUTO_INCREMENT,
  `id_question_reponse` int(11) DEFAULT NULL,
  `texte_reponse` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `etat_reponse` varchar(10) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_reponse`),
  KEY `IDX_5FB6DEC7B2E05E0B` (`id_question_reponse`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=129 ;

--
-- Dumping data for table `reponse`
--

INSERT INTO `reponse` (`id_reponse`, `id_question_reponse`, `texte_reponse`, `etat_reponse`) VALUES
(78, 27, 'Symfony21', 'fausse'),
(93, 37, 'ss', 'fausse'),
(96, 26, 'q', 'fausse'),
(97, 27, 'q', 'fausse'),
(98, 36, 'q', 'fausse'),
(99, 36, 'qqq', 'fausse'),
(100, 38, 'qqq', 'fausse'),
(104, 26, 'dsfsdfg', 'vrai'),
(105, 38, 'dfg', 'vrai'),
(107, 37, 'dfsqdf', 'vrai'),
(112, 46, 'aa', 'vrai'),
(113, 46, 'aa', 'fausse'),
(114, 47, '&&', 'vrai'),
(115, 47, 'fdf', 'fausse'),
(116, 48, 'a', 'vrai'),
(117, 48, 'a', 'fausse'),
(118, 49, 'a', 'vrai'),
(119, 49, 'a', 'fausse'),
(120, 50, 'CMS', 'vrai'),
(121, 50, 'CMS', 'fausse'),
(122, 51, 'CMS', 'vrai'),
(123, 51, 'CMS', 'fausse'),
(124, 52, 'Caractéristique CMS', 'vrai'),
(126, 53, 'Caractéristique CMS', 'vrai'),
(127, 53, 'Caractéristique CMS', 'fausse'),
(128, 52, 'aaa', 'fausse');

-- --------------------------------------------------------

--
-- Table structure for table `score_quizz_chapitre`
--

CREATE TABLE IF NOT EXISTS `score_quizz_chapitre` (
  `id_score_quizz_chapitre` int(11) NOT NULL AUTO_INCREMENT,
  `id_apprenant_score_quizz_chapitre` int(11) DEFAULT NULL,
  `id_quizz_chapitre_score_quizz_chapitre` int(11) DEFAULT NULL,
  `score_quizz_chapitre` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `type_badge_score_quizz_chapitre` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_score_quizz_chapitre`),
  KEY `IDX_435CE1A85690E0DD` (`id_apprenant_score_quizz_chapitre`),
  KEY `IDX_435CE1A8CB81103F` (`id_quizz_chapitre_score_quizz_chapitre`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=7 ;

--
-- Dumping data for table `score_quizz_chapitre`
--

INSERT INTO `score_quizz_chapitre` (`id_score_quizz_chapitre`, `id_apprenant_score_quizz_chapitre`, `id_quizz_chapitre_score_quizz_chapitre`, `score_quizz_chapitre`, `date`, `type_badge_score_quizz_chapitre`) VALUES
(3, 19, 5, 10, '2016-03-28 07:14:27', 'BAD'),
(4, 19, 6, 20, '2016-03-28 07:14:49', 'BAD'),
(5, 19, 7, 0, '2016-03-28 07:41:57', 'BAD'),
(6, 19, 8, 10, '2016-03-28 08:00:12', 'BAD');

-- --------------------------------------------------------

--
-- Table structure for table `score_quizz_cours`
--

CREATE TABLE IF NOT EXISTS `score_quizz_cours` (
  `id_score_quizz_cours` int(11) NOT NULL AUTO_INCREMENT,
  `id_apprenant_score_quizz_cours` int(11) DEFAULT NULL,
  `id_quizz_cours_score_quizz_cours` int(11) DEFAULT NULL,
  `score_score_quizz_cours` int(11) NOT NULL,
  `type_badge_score_quizz_cours` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_score_quizz_cours`),
  UNIQUE KEY `score_quizz_cours` (`id_apprenant_score_quizz_cours`,`id_quizz_cours_score_quizz_cours`),
  KEY `IDX_C2783717EE6B8EFD` (`id_apprenant_score_quizz_cours`),
  KEY `IDX_C27837172B9E9D59` (`id_quizz_cours_score_quizz_cours`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=21 ;

--
-- Dumping data for table `score_quizz_cours`
--

INSERT INTO `score_quizz_cours` (`id_score_quizz_cours`, `id_apprenant_score_quizz_cours`, `id_quizz_cours_score_quizz_cours`, `score_score_quizz_cours`, `type_badge_score_quizz_cours`) VALUES
(18, 19, 7, 12, 'BAD'),
(19, 19, 10, 20, 'BAD'),
(20, 19, 11, 20, 'BAD');

-- --------------------------------------------------------

--
-- Table structure for table `score_quizz_final`
--

CREATE TABLE IF NOT EXISTS `score_quizz_final` (
  `id_score_quizz` int(11) NOT NULL AUTO_INCREMENT,
  `id_apprenant_score_quizz_final` int(11) DEFAULT NULL,
  `id_quizz_final_score_quizz_final` int(11) DEFAULT NULL,
  `score_score_quizz` int(11) NOT NULL,
  `type_badge_score_quizz` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_score_quizz`),
  KEY `IDX_D367E74DFF745EA7` (`id_apprenant_score_quizz_final`),
  KEY `IDX_D367E74DD9E58E96` (`id_quizz_final_score_quizz_final`),
  KEY `id_apprenant_score_quizz_final` (`id_apprenant_score_quizz_final`,`id_quizz_final_score_quizz_final`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `sexe`
--

CREATE TABLE IF NOT EXISTS `sexe` (
  `id_sexe` int(11) NOT NULL AUTO_INCREMENT,
  `nom_sexe` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_sexe`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=3 ;

--
-- Dumping data for table `sexe`
--

INSERT INTO `sexe` (`id_sexe`, `nom_sexe`) VALUES
(1, 'Homme'),
(2, 'Femme');

-- --------------------------------------------------------

--
-- Table structure for table `suividiscipline`
--

CREATE TABLE IF NOT EXISTS `suividiscipline` (
  `id_suivi_discipline` int(11) NOT NULL AUTO_INCREMENT,
  `id_discipline_suivi` int(11) DEFAULT NULL,
  `id_utilisateur_suivi` int(11) DEFAULT NULL,
  `date_suivi_discipline` datetime DEFAULT NULL,
  PRIMARY KEY (`id_suivi_discipline`),
  KEY `IDX_961A8902194EFA46` (`id_utilisateur_suivi`),
  KEY `IDX_961A89028A512C16` (`id_discipline_suivi`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=12 ;

--
-- Dumping data for table `suividiscipline`
--

INSERT INTO `suividiscipline` (`id_suivi_discipline`, `id_discipline_suivi`, `id_utilisateur_suivi`, `date_suivi_discipline`) VALUES
(10, 9, 19, '2016-03-28 04:06:03'),
(11, 10, 19, '2016-03-28 07:36:52');

-- --------------------------------------------------------

--
-- Table structure for table `suivie`
--

CREATE TABLE IF NOT EXISTS `suivie` (
  `id_suivie` int(11) NOT NULL AUTO_INCREMENT,
  `id_cours_suivie` int(11) DEFAULT NULL,
  `id_utilisateur_suivie` int(11) DEFAULT NULL,
  `date_suivie` datetime NOT NULL,
  PRIMARY KEY (`id_suivie`),
  KEY `IDX_955F5D17DEB23C3B` (`id_cours_suivie`),
  KEY `IDX_955F5D17707CD005` (`id_utilisateur_suivie`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=85 ;

--
-- Dumping data for table `suivie`
--

INSERT INTO `suivie` (`id_suivie`, `id_cours_suivie`, `id_utilisateur_suivie`, `date_suivie`) VALUES
(82, 12, 19, '2016-03-28 07:36:52'),
(83, 13, 19, '2016-03-28 07:53:23'),
(84, 9, 19, '2016-04-21 17:49:35');

-- --------------------------------------------------------

--
-- Table structure for table `sujet`
--

CREATE TABLE IF NOT EXISTS `sujet` (
  `id_sujet` int(11) NOT NULL AUTO_INCREMENT,
  `id_forum_sujet` int(11) DEFAULT NULL,
  `id_apprenant_sujet` int(11) DEFAULT NULL,
  `titre_sujet` varchar(5000) COLLATE utf8_unicode_ci NOT NULL,
  `soustitre_sujet` varchar(5000) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description_sujet` longtext COLLATE utf8_unicode_ci NOT NULL,
  `nombre_message` int(11) DEFAULT NULL,
  `etat_sujet` int(11) DEFAULT NULL,
  `date_publication_sujet` datetime NOT NULL,
  `date_modification_sujet` datetime DEFAULT NULL,
  `aime_sujet` int(11) DEFAULT NULL,
  `last_poster` int(11) DEFAULT NULL,
  `last_poste` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_sujet`),
  KEY `IDX_EFD276992E7532BD` (`id_forum_sujet`),
  KEY `IDX_EFD2769930B84783` (`id_apprenant_sujet`),
  KEY `IDX_EFD276991EC239B0` (`last_poste`),
  KEY `FK_EFD27699A7768E28` (`last_poster`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=52 ;

--
-- Dumping data for table `sujet`
--

INSERT INTO `sujet` (`id_sujet`, `id_forum_sujet`, `id_apprenant_sujet`, `titre_sujet`, `soustitre_sujet`, `description_sujet`, `nombre_message`, `etat_sujet`, `date_publication_sujet`, `date_modification_sujet`, `aime_sujet`, `last_poster`, `last_poste`) VALUES
(4, 10, 20, 'MOOC Développez des sites web avec Symfony2', 'Bonjour à tous', '<p>J&#39;esp&egrave;re que votre rentr&eacute;e se passe bien, et que votre bonne r&eacute;solution cette ann&eacute;e est d&#39;apprendre de nouvelles technologies. Et vous avez raison, car le cours sur Symfony2 va bient&ocirc;t commencer ! La date pr&eacute;vue d&#39;ouverture est le lundi 22 septembre.</p>\r\n\r\n<p>Ce sujet vous permettra de poser vos questions tout au long de votre &eacute;volution dans le cours. La communaut&eacute; d&#39;utilisateurs de Symfony2, d&eacute;j&agrave; tr&egrave;s pr&eacute;sente sur OpenClassrooms, saura r&eacute;pondre &agrave; toutes vos questions ! Je serai &eacute;galement pr&eacute;sent pour vous aider dans votre avancement.</p>\r\n\r\n<p>En ce qui concerne les activit&eacute;s pr&eacute;sentes dans le cours, vous aurez &eacute;videmment pas mal de questions sur leur r&eacute;alisation. Il n&#39;y a aucun probl&egrave;me au contraire, par contre j&#39;appelle ceux qui ont les r&eacute;ponses &agrave; ne pas donner directement le r&eacute;sultat. En effet le but de ces activit&eacute;s est d&#39;apprendre par la pratique, il faut donc donner des indications, des conseils, mais laisser chercher ceux qui apprennent&nbsp;<img alt=";)" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/clin.png" title=";)" /></p>\r\n\r\n<p>Merci et bon courage &agrave; tous !</p>\r\n\r\n<p>Edit : Le cours est maintenant ouvert et disponible &agrave; l&#39;adresse suivante :&nbsp;<a href="https://openclassrooms.com/courses/developpez-votre-site-web-avec-le-framework-symfony2">http://openclassrooms.com/courses/developpez-votre-site-web-avec-le-framework-symfony2</a></p>\r\n\r\n<p>Bonne lecture !</p>\r\n\r\n<p>Alexandre (winzou)</p>\r\n', 0, NULL, '2016-03-15 12:31:46', NULL, 11, 20, NULL),
(10, 3, 20, ' Comment utiliser les classes du Framework .Net', 'Framework .Net', '<p style="text-align:justify">De nombreuses questions pos&eacute;es sur ce forum concernent l&#39;utilisation d&#39;une classe ou d&#39;une fonctionnalit&eacute; sp&eacute;cifique du Framework .Net.&nbsp;<br />\r\n<br />\r\nMais connaissez-vous la&nbsp;<strong>documentation officielle</strong>&nbsp;? Non seulement elle existe, mais en plus elle est tr&egrave;s compl&egrave;te et est vraiment bien faite. Il s&#39;agit de la&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms123401.aspx"><strong>MSDN Library</strong></a>&nbsp;et malgr&eacute; son nom, elle est bel et bien en fran&ccedil;ais !&nbsp;<img alt=":D" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/heureux.png" /><br />\r\n<br />\r\nVous y trouverez en particulier le&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/52f3sw5c.aspx">guide d&#39;utilisation de Visual Studio</a>, toutes les informations utiles sur le&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/w0x726c2.aspx">Framework .Net</a>&nbsp;et sa&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms229335.aspx">biblioth&egrave;que de classes</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/dd642420.aspx">la pr&eacute;sentation des langages VB.NET et C#</a>&nbsp;(ainsi que leur r&eacute;f&eacute;rence d&eacute;taill&eacute;e:&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/25kad608.aspx">VB.NET</a>|<a href="http://msdn.microsoft.com/fr-fr/library/618ayhy6.aspx">C#</a>), sans oublier les&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms229042.aspx">r&egrave;gles de bonne pratique</a>&nbsp;et les&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms229002.aspx">conventions de nommage</a>.&nbsp;<br />\r\n<br />\r\nUne question sur une classe en particulier ? Utilisez la fonction recherche (en haut &agrave; gauche sur toute les pages). Exemple avec&nbsp;<a href="http://social.msdn.microsoft.com/Search/fr-FR?query=Console&amp;beta=0&amp;ac=3">&quot;Console&quot;</a>, qui vous permet de trouver facilement la&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/system.console.aspx">r&eacute;f&eacute;rence de la classe&nbsp;System.Console</a>.<br />\r\n<br />\r\nLes&nbsp;<strong><a href="http://msdn.microsoft.com/fr-fr/msdn.coach.aspx">Coach MSDN</a></strong>&nbsp;sont &eacute;galement utiles; il s&#39;agit de tutoriels sur les aspects cl&eacute;s du framework comme&nbsp;<a href="http://msdn.microsoft.com/fr-fr/netframework/msdn.coach.wpf.aspx">WPF</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/silverlight/bb187401">Silverlight</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/sqlserver/msdn.coach.sql.server.aspx">SQL Server</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/windowsazure/msdn.coach.azure.aspx">Windows Azure</a>&nbsp;et bien d&#39;autres !<br />\r\n<br />\r\nQuelques liens utiles en vrac:</p>\r\n\r\n<ul>\r\n	<li style="text-align:justify">Les&nbsp;<a href="http://msdn.microsoft.com/en-us/library/ms123401.aspx">Quick Links</a>&nbsp;(en anglais), pour aller &agrave; l&#39;essentiel !</li>\r\n	<li style="text-align:justify"><a href="http://msdn.microsoft.com/fr-fr/library/dd460654.aspx">Programmer en Orient&eacute; Objet</a>&nbsp;en VB.Net et en C#</li>\r\n	<li style="text-align:justify">Concevoir des interfaces graphiques avec les&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/cc656767.aspx">Windows Forms</a></li>\r\n	<li style="text-align:justify">Cr&eacute;er des interfaces encore plus riches et dynamiques avec&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms754130.aspx">WPF</a>&nbsp;!</li>\r\n	<li style="text-align:justify">D&eacute;velopper des sites web gr&acirc;ce &agrave;&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/bb400852.aspx">ASP.NET</a>&nbsp;et&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/aa286507">IIS</a></li>\r\n	<li style="text-align:justify">D&eacute;couvrir le Cloud Computing avec&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/dd179367.aspx">Windows Azure</a></li>\r\n	<li style="text-align:justify">Interagir avec une base de donn&eacute;es gr&acirc;ce &agrave;&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/e80y5yhx.aspx">ADO.NET</a>&nbsp;et/ou&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/bb399572.aspx">Entity Framework</a></li>\r\n	<li style="text-align:justify">Cr&eacute;er ses propres jeux pour Windows et Xbox 360 avec&nbsp;<a href="http://msdn.microsoft.com/en-us/library/bb200104.aspx">XNA</a></li>\r\n	<li style="text-align:justify">Voir aussi l&#39;<a href="http://create.msdn.com/en-US/">App Hub</a>&nbsp;pour d&eacute;velopper sur Xbox et Windows Phone 7 (en anglais)</li>\r\n	<li style="text-align:justify">D&eacute;velopper des applications riches pour le navigateur avec&nbsp;<a href="http://msdn.microsoft.com/en-us/library/cc838158%28VS.95%29.aspx">Silverlight</a></li>\r\n	<li style="text-align:justify">Faire communiquer ses applications gr&acirc;ce &agrave;&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/dd456779.aspx">WCF</a></li>\r\n	<li style="text-align:justify">Comprendre et utiliser&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/bb397926.aspx">LINQ</a>&nbsp;- Voir aussi&nbsp;<a href="http://msdn.microsoft.com/en-us/vcsharp/aa336746">101 LINQ Samples</a>&nbsp;(en anglais)</li>\r\n	<li style="text-align:justify">Une&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/a4t23ktk.aspx">vue d&#39;ensemble du Framework .Net</a>, pour mieux comprendre en quoi il consiste</li>\r\n	<li style="text-align:justify">Toutes les informations sur&nbsp;<a href="http://msdn.microsoft.com/fr-fr/sqlserver/default.aspx">SQL Server</a></li>\r\n	<li style="text-align:justify">Besoin de plus d&#39;exemples de code ? Consultez la&nbsp;<strong><a href="http://code.msdn.microsoft.com/">galerie</a></strong>&nbsp;! (en anglais)</li>\r\n</ul>\r\n\r\n<p style="text-align:justify"><br />\r\nBonne lecture !&nbsp;<img alt=":D" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/heureux.png" /><br />\r\nEt rappelez-vous : vous n&#39;avez plus d&#39;excuse pour ne pas avoir consult&eacute; la doc avant de poser vos questions...&nbsp;<img alt=":diable:" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/diable.png" /></p>\r\n', 1, 1, '2016-03-16 17:53:07', '2016-03-16 17:54:38', NULL, 20, NULL),
(11, 3, 20, 'Lecture BDD remplissage GridView', 'BDD', '<p style="text-align: justify;">De nombreuses questions pos&eacute;es sur ce forum concernent l&#39;utilisation d&#39;une classe ou d&#39;une fonctionnalit&eacute; sp&eacute;cifique du Framework .Net.&nbsp;<br />\r\n<br />\r\nMais connaissez-vous la&nbsp;<strong>documentation officielle</strong>&nbsp;? Non seulement elle existe, mais en plus elle est tr&egrave;s compl&egrave;te et est vraiment bien faite. Il s&#39;agit de la&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms123401.aspx"><strong>MSDN Library</strong></a>&nbsp;et malgr&eacute; son nom, elle est bel et bien en fran&ccedil;ais !&nbsp;<img alt=":D" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/heureux.png" /><br />\r\n<br />\r\nVous y trouverez en particulier le&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/52f3sw5c.aspx">guide d&#39;utilisation de Visual Studio</a>, toutes les informations utiles sur le&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/w0x726c2.aspx">Framework .Net</a>&nbsp;et sa&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms229335.aspx">biblioth&egrave;que de classes</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/dd642420.aspx">la pr&eacute;sentation des langages VB.NET et C#</a>&nbsp;(ainsi que leur r&eacute;f&eacute;rence d&eacute;taill&eacute;e:&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/25kad608.aspx">VB.NET</a>|<a href="http://msdn.microsoft.com/fr-fr/library/618ayhy6.aspx">C#</a>), sans oublier les&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms229042.aspx">r&egrave;gles de bonne pratique</a>&nbsp;et les&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms229002.aspx">conventions de nommage</a>.&nbsp;<br />\r\n<br />\r\nUne question sur une classe en particulier ? Utilisez la fonction recherche (en haut &agrave; gauche sur toute les pages). Exemple avec&nbsp;<a href="http://social.msdn.microsoft.com/Search/fr-FR?query=Console&amp;beta=0&amp;ac=3">&quot;Console&quot;</a>, qui vous permet de trouver facilement la&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/system.console.aspx">r&eacute;f&eacute;rence de la classe&nbsp;System.Console</a>.<br />\r\n<br />\r\nLes&nbsp;<strong><a href="http://msdn.microsoft.com/fr-fr/msdn.coach.aspx">Coach MSDN</a></strong>&nbsp;sont &eacute;galement utiles; il s&#39;agit de tutoriels sur les aspects cl&eacute;s du framework comme&nbsp;<a href="http://msdn.microsoft.com/fr-fr/netframework/msdn.coach.wpf.aspx">WPF</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/silverlight/bb187401">Silverlight</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/sqlserver/msdn.coach.sql.server.aspx">SQL Server</a>,&nbsp;<a href="http://msdn.microsoft.com/fr-fr/windowsazure/msdn.coach.azure.aspx">Windows Azure</a>&nbsp;et bien d&#39;autres !<br />\r\n<br />\r\nQuelques liens utiles en vrac:</p>\r\n\r\n<ul>\r\n	<li style="text-align: justify;">Les&nbsp;<a href="http://msdn.microsoft.com/en-us/library/ms123401.aspx">Quick Links</a>&nbsp;(en anglais), pour aller &agrave; l&#39;essentiel !</li>\r\n	<li style="text-align: justify;"><a href="http://msdn.microsoft.com/fr-fr/library/dd460654.aspx">Programmer en Orient&eacute; Objet</a>&nbsp;en VB.Net et en C#</li>\r\n	<li style="text-align: justify;">Concevoir des interfaces graphiques avec les&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/cc656767.aspx">Windows Forms</a></li>\r\n	<li style="text-align: justify;">Cr&eacute;er des interfaces encore plus riches et dynamiques avec&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/ms754130.aspx">WPF</a>&nbsp;!</li>\r\n	<li style="text-align: justify;">D&eacute;velopper des sites web gr&acirc;ce &agrave;&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/bb400852.aspx">ASP.NET</a>&nbsp;et&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/aa286507">IIS</a></li>\r\n	<li style="text-align: justify;">D&eacute;couvrir le Cloud Computing avec&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/dd179367.aspx">Windows Azure</a></li>\r\n	<li style="text-align: justify;">Interagir avec une base de donn&eacute;es gr&acirc;ce &agrave;&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/e80y5yhx.aspx">ADO.NET</a>&nbsp;et/ou&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/bb399572.aspx">Entity Framework</a></li>\r\n	<li style="text-align: justify;">Cr&eacute;er ses propres jeux pour Windows et Xbox 360 avec&nbsp;<a href="http://msdn.microsoft.com/en-us/library/bb200104.aspx">XNA</a></li>\r\n	<li style="text-align: justify;">Voir aussi l&#39;<a href="http://create.msdn.com/en-US/">App Hub</a>&nbsp;pour d&eacute;velopper sur Xbox et Windows Phone 7 (en anglais)</li>\r\n	<li style="text-align: justify;">D&eacute;velopper des applications riches pour le navigateur avec&nbsp;<a href="http://msdn.microsoft.com/en-us/library/cc838158%28VS.95%29.aspx">Silverlight</a></li>\r\n	<li style="text-align: justify;">Faire communiquer ses applications gr&acirc;ce &agrave;&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/dd456779.aspx">WCF</a></li>\r\n	<li style="text-align: justify;">Comprendre et utiliser&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/bb397926.aspx">LINQ</a>&nbsp;- Voir aussi&nbsp;<a href="http://msdn.microsoft.com/en-us/vcsharp/aa336746">101 LINQ Samples</a>&nbsp;(en anglais)</li>\r\n	<li style="text-align: justify;">Une&nbsp;<a href="http://msdn.microsoft.com/fr-fr/library/a4t23ktk.aspx">vue d&#39;ensemble du Framework .Net</a>, pour mieux comprendre en quoi il consiste</li>\r\n	<li style="text-align: justify;">Toutes les informations sur&nbsp;<a href="http://msdn.microsoft.com/fr-fr/sqlserver/default.aspx">SQL Server</a></li>\r\n	<li style="text-align: justify;">Besoin de plus d&#39;exemples de code ? Consultez la&nbsp;<strong><a href="http://code.msdn.microsoft.com/">galerie</a></strong>&nbsp;! (en anglais)</li>\r\n</ul>\r\n\r\n<p style="text-align: justify;"><br />\r\nBonne lecture !&nbsp;<img alt=":D" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/heureux.png" /><br />\r\nEt rappelez-vous : vous n&#39;avez plus d&#39;excuse pour ne pas avoir consult&eacute; la doc avant de poser vos questions...&nbsp;<img alt=":diable:" src="https://openclassrooms.com/bundles/tinymce/vendor/tiny_mce/plugins/emotions/img/diable.png" /></p>\r\n', NULL, NULL, '2016-03-16 18:05:29', NULL, 2, NULL, NULL),
(12, 10, 20, 'Foire Aux Questions PHP', 'Bonjour', '<p>Si vous d&eacute;butez dans le d&eacute;veloppement PHP, vous serez sans doute amen&eacute; &agrave; vous posez des questions durant votre apprentissage. Cette Foire Aux Questions du forum PHP a &eacute;t&eacute; &eacute;labor&eacute;e pour &ecirc;tre &agrave; la fois un&nbsp;<strong>compl&eacute;ment des tutoriels officiels</strong>&nbsp;et pour&nbsp;<strong>expliquer les erreurs</strong>&nbsp;qui reviennent de mani&egrave;re r&eacute;currente sur le forum.</p>\n\n<h1>La gestion des erreurs en PHP</h1>\n\n<ul>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84634924">Comment &ecirc;tre notifi&eacute; de toutes les erreurs lors de la phase de d&eacute;veloppement ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84634942">Vous avez une erreur de type&nbsp;<strong>Error</strong></a>\n	<ul>\n		<li>Fatal error: Call to undefined function: maFonction()</li>\n		<li>Fatal error: Cannot redeclare maFonction() (previously declared in...)</li>\n		<li>Fatal error: Call to a member function fetch() on a non-object in...</li>\n	</ul>\n	</li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84634970">Vous avez une erreur de type&nbsp;<strong>Warning</strong></a>\n	<ul>\n		<li>Warning: Division by zero in ..</li>\n		<li>Warning : Cannot modify header information &ndash; headers already sent by</li>\n		<li>Warning : Invalid argument supplied for</li>\n	</ul>\n	</li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84634993">Vous avez une erreur de type&nbsp;<strong>Notice</strong></a>\n	<ul>\n		<li>Notice: Undefined variable: maVariable</li>\n		<li>Notice: Undefined index: id</li>\n		<li>Notice: Uninitialized string offset</li>\n		<li>Notice: Use of undefined constant maVariable</li>\n	</ul>\n	</li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84635002">Vous avez une erreur de type&nbsp;<strong>Parse error</strong></a>\n	<ul>\n		<li>Parse error: syntax error, unexpected T_ECHO</li>\n		<li>Parse error: syntax error, unexpected T_VARIABLE</li>\n		<li>Parse error: syntax error, unexpected T_STRING</li>\n		<li>Parse error: syntax error, unexpected T_CONSTANT_ENCAPSED_STRING</li>\n		<li>Parse error: syntax error, unexpected $end</li>\n	</ul>\n	</li>\n</ul>\n\n<p>On trouvera aussi sur&nbsp;<a href="http://fr.openclassrooms.com/informatique/cours/gestion-des-erreurs-1">ce tutoriel</a>&nbsp;des informations utiles sur la gestion des erreurs en PHP.</p>\n\n<h1>PHP</h1>\n\n<ul>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84646432">J&#39;ai vu des ! dans mon code. Qu&#39;est ce que cela veut dire ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84646451">Quelle est la diff&eacute;rence entre isset() et empty() ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84646461">Que signifient le ? et le : dans $b = isset( $a) ? $a : 0 ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84646479">A quoi sert le @ dans un code php ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84646502">Mes variables de sessions disparaissent apr&egrave;s rechargement d&#39;une page, pourquoi ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84646518">Des caract&egrave;res &eacute;tranges s&#39;affichent sur mon site &agrave; la place de caract&egrave;res accentu&eacute;s (&Atilde;&copy;, &Atilde;&uml;, &Atilde;&reg;, &Atilde;&ordf;), quelle en est la cause ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84647809">Comment faire pour appliquer une fonction sur toutes les valeurs d&#39;un tableau ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84647816">Comment utiliser une m&eacute;thode d&#39;une classe comme fonction de callback ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84647827">Comment v&eacute;rifier que ma variable est un nombre entier, une cha&icirc;ne alphab&eacute;tique ou alphanum&eacute;rique ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84647883">Comment supprimer les espaces contenus au d&eacute;but et &agrave; la fin d&#39;une chaine de caract&egrave;res ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649816">Comment faire des actions diff&eacute;rentes sur mon formulaire en fonction du bouton submit utilis&eacute; ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649818">Comment afficher le code source d&#39;une page php ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649824">Comment inverser les effets de la fonction nl2br() ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649834">Comment savoir si une ann&eacute;e est bissextile ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649845">Comment v&eacute;rifier la validit&eacute; du domaine d&#39;une adresse email ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649870">Comment passer plusieurs informations dans des champs de formulaires portant le m&ecirc;me name lors d&#39;une soumission ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649876">Mes cookies ne fonctionnent pas, quelles peuvent-en &ecirc;tre les raisons ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649881">Comment afficher la date au format fran&ccedil;ais ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649895">Je d&eacute;sire ex&eacute;cuter un script &agrave; intervalles r&eacute;guliers (par exemple un backup de ma base de donn&eacute;es), comment faire ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649900">Comment obtenir l&#39;URL du site d&#39;o&ugrave; vient le visiteur ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84649903">Comment faire fonctionner les sessions sur free.fr ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-86344364">Quelle est la diff&eacute;rence entre == et === ?</a></li>\n</ul>\n\n<h1>MySQL avec PDO</h1>\n\n<ul>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84654649">Comment r&eacute;cup&eacute;rer l&#39;id de l&#39;enregistrement qui vient d&#39;&ecirc;tre ins&eacute;r&eacute; dans une table ?</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=1#message-84654732">Comment conna&icirc;tre le nombre d&#39;enregistrement affect&eacute;s par une requ&ecirc;te ?</a></li>\n</ul>\n\n<h1>WAMP &amp; Apache</h1>\n\n<ul>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php#message-84684478">Probl&egrave;mes avec Wamp</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-84694801">L&#39;ic&ocirc;ne de WAMP reste bloqu&eacute;e sur l&#39;orange !</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-84694809">Mon code n&#39;est pas interpr&eacute;t&eacute; ! Je le vois dans la page !</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-84697446">J&#39;ai une erreur 403 quand j&#39;acc&egrave;de &agrave; http://localhost, mais pas si je mets 127.0.0.1</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-86344347">Je viens de cr&eacute;er un fichier VirtualHost, &ccedil;a marchait tr&egrave;s bien avant, mais mantenant, l&#39;ic&ocirc;ne de WAMP reste orange !</a></li>\n	<li><a href="http://fr.openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-86344360">J&#39;ai modifi&eacute; mon php.ini, mais &ccedil;a ne change rien !</a></li>\n	<li><a href="http://openclassrooms.com/forum/sujet/foire-aux-questions-php?page=2#message-87890023">L&#39;envoie de mail en localhost ne fonctionne pas / Comment envoyer un mail en local avec Wamp !</a></li>\n</ul>\n\n<p>Vous trouvez cette F.A.Q. incompl&egrave;te ou vous voulez rajouter une partie ? N&#39;h&eacute;sitez pas contacter par MP l&#39;un des contributeurs pour proposer vos propres Q/R afin de les int&eacute;grer dans cette F.A.Q. !</p>\n\n<p>Merci aux contributeurs de cette F.A.Q. !</p>\n\n<p>Contributeurs actuels :&nbsp;<a href="http://fr.openclassrooms.com/membres/ymox-81588">Ymox</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/elyppire933-89243">elyppire933</a>.</p>\n\n<p>Merci &agrave; ceux qui nous ont inspir&eacute; :&nbsp;<a href="http://fr.openclassrooms.com/membres/strucky-74867">strucky</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/dentuk-68638">Dentuk</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/tknix-74022">T@kniX</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/nax-68605">nax</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/cam-72753">Cam</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/harry-cover-45812">Harry COVER</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/zolectronic-89223">zolectronic</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/tarzoune-53483">tarzoune</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/makkhdyn-27046">Makkhdyn</a>,<a href="http://fr.openclassrooms.com/membres/thelittlegui-26707">thelittlegui</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/bison-99977">Bison</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/flolfou-76742">Flolfou</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/winzou-49228">winzou</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/talus-92645">Talus</a>,&nbsp;<a href="http://fr.openclassrooms.com/membres/fayden-92861">Fayden</a>&nbsp;et&nbsp;<a href="http://fr.openclassrooms.com/membres/andr0">Andr0</a>&nbsp;pour le plagiat &eacute;hont&eacute; de son format de pr&eacute;sentation.</p>\n', 3, NULL, '2016-03-20 00:12:10', NULL, 1, 19, NULL),
(26, 2, 19, 'Android : Mettre des images de marques ', 'Bonsoir', 'Bonsoir,\nSimple question, dans mon application j''aimerai insérer des images de marque mais est ce que j''ai le droit ? \nBonne soirée Bonsoir,\nSimple question, dans mon application j''aimerai insérer des images de marque mais est ce que j''ai le droit ? \nBonne soirée Bonsoir,\nSimple question, dans mon application j''aimerai insérer des images de marque mais est ce que j''ai le droit ? \nBonne soirée Bonsoir,\nSimple question, dans mon application j''aimerai insérer des images de marque mais est ce que j''ai le droit ? \nBonne soirée Bonsoir,\nSimple question, dans mon application j''aimerai insérer des images de marque mais est ce que j''ai le droit ? \nBonne soirée Bonsoir,\nSimple question, dans mon application j''aimerai insérer des images de marque mais est ce que j''ai le droit ? \nBonne soirée ', 1, NULL, '2016-04-07 00:00:00', NULL, NULL, 19, 1),
(27, 2, 19, 'Facebook Connect sous Swift', 'Salut à toutes et à tous, ', '''ai intégré le SDK Facebook Connect à mon application, j''aimerais simplement désormais permettre une fois qu''on se connecte reporter l''utilisateur vers une autre vue !\n\nVoilà mon code : ', NULL, NULL, '2016-04-07 00:00:00', NULL, NULL, NULL, NULL),
(28, 2, 19, 'Passer du .NET au HTML', 'Salut à toutes et à tous,', 'Voilà, dans le cadre de mon boulot, j''ai récupéré un site internet en VB .NET\n\nJe ne connais pas du tout le langage mais je comprends les grandes lignes à la lecture.\n\nJe suis donc amené à "recréer" le site avec un framework (Yii2 je suppose). J''aurais voulu savoir si la transformation était possible sans pour autant recréer l''ensemble de toute pièce? S''il était nécessaire que je me lance dans le .NET avant etc?\n\nBref, en gros : Est-ce réalisable? Quelqu''un l''aurait déjà fait?\n\nD''avance merci,', NULL, NULL, '2016-04-07 00:00:00', NULL, NULL, NULL, NULL),
(29, 3, 19, 'Importer fichier excel dans le dataset vb.NET', 'Bonjour ,', 'je commence à coder en VB.net j''aimerais importer des données qui proviennent d''un fichier excel dans le DataSet et ensuite récupérer ces données et les stoker dans une table de la base de donnée de mon projet (cette base de donnée est en acess) .\n\nje ne sais pas si je suis claire :-(\n\nje suis bloqué depuis 2 jours :-( si vous pouvez m''aidez ça serait très sympas.\n\n  VOICI MON MORCEAU DE CODE :\n\nPrivate Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)\n\n        Try\n\n            Dim MyConnection As New System.Data.OleDb.OleDbConnection\n\n            Dim dataSet As System.Data.DataSet\n\n            Dim MyCommand As System.Data.OleDb.OleDbDataAdapter\n\n            Dim path As String = "E:\\LEAVER_PROCESS\\DonnéeQUALIPARC\\DonneeQUALIPARC.xlsx"\n\n            MyConnection = New System.Data.OleDb.OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + path + ";Extended Properties=Excel 12.0;")', NULL, NULL, '2016-04-07 00:00:00', NULL, NULL, NULL, NULL),
(30, 4, 19, 'MOOC Découvrez le langage Swift / Vos questions', 'Bonjour à tous et bienvenue ', 'Bonjour à tous et bienvenue dans ce cours Découvrez le langage Swift !\n\nLes exercices de la première partie de ce cours seront ouverts dès le 22 septembre.\n\nJe vous invite à poster vos questions ici. J''essaierai de passer régulièrement, mais n''hésitez pas à discuter entre vous et à vous entraider, en essayant de ne pas divulguer de solutions cependant.\n\nSi vous avez des problèmes techniques avec les activités, vous pouvez contacter directement OpenClassrooms à l''adresse suivante : hello@openclassrooms.com', NULL, NULL, '2016-04-07 00:00:00', NULL, NULL, NULL, NULL),
(31, 9, 19, 'Exercices du cours Bootstrap ', 'Bonjour à tous et bienvenue', 'Bonjour à tous et bienvenue à tous ceux qui participent au cours "Prenez en main Bootstrap" !\nL''adresse du cours : http://openclassrooms.com/courses/prenez-en-main-bootstrap\nLes exercices de la première partie de ce cours seront ouverts dès le 9 décembre. Je vous invite à poster vos questions ici. J''essaierai de passer régulièrement, mais n''hésitez pas à discuter entre vous et à vous entraider, en essayant de ne pas divulguer de solutions cependant.', 1, NULL, '2016-04-07 00:00:00', NULL, 1, 19, 2),
(32, 8, 19, 'Les outils pour la création de Jeux Video en Java', 'Les outils pour la création de Jeux Video en Java', 'Bonjour à tous,\n\nEdit : C''est une reconstruction du sujet pour qu''il soit mis en post-it.\n\nJe me permets de créer un topic sur la création de jeux vidéo en Java car c''est un sujet qui est d''actualité, et j''aimerais vous en faire profiter. Comme vous le savez Java est accusé d''être "lent", et si vous dîtes à un développeur C++ que vous programmez un jeu en Java "il vous rira peut-être" au nez (en tout cas, ça a été mon cas, et ça l''est pour beaucoup de personnes). Ce topic va donc vous présenter trois choses :\nDe bonnes bibliothèques\nQuelques Moteurs (3D, Physique, etc..)\nDes exemples de très beaux jeux réalisés en Java\n', NULL, NULL, '2016-04-07 00:00:00', NULL, NULL, NULL, NULL),
(33, 9, 19, 'Sujet', 'Sujet', '<p>Sujet</p>\r\n', NULL, NULL, '2016-04-14 15:21:54', NULL, NULL, NULL, NULL),
(49, 1, 20, 'MahaAkrout', 'MahaAkrout', 'Ecrire vote sujetsfsdf', -1, 0, '1899-11-02 08:21:22', NULL, NULL, NULL, 10),
(50, 5, 20, 'titre', 'soutitre', 'desc', NULL, 1, '1899-11-30 11:18:39', NULL, NULL, NULL, NULL),
(51, 1, NULL, 'qsdqsd', 'qsdqsd', 'Ecrire vote sujetqsdqsdqsqsd', NULL, 0, '0000-00-00 00:00:00', NULL, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `thread`
--

CREATE TABLE IF NOT EXISTS `thread` (
  `id` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `permalink` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `is_commentable` tinyint(1) NOT NULL,
  `num_comments` int(11) NOT NULL,
  `last_comment_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `thread`
--

INSERT INTO `thread` (`id`, `permalink`, `is_commentable`, `num_comments`, `last_comment_at`) VALUES
('10', 'http://127.0.0.1/MOOCV5/web/app_dev.php/cours_details?id=10', 1, 0, NULL),
('11', 'http://127.0.0.1/MOOCV5/web/app_dev.php/cours_details?id=11', 1, 0, NULL),
('12', 'http://127.0.0.1/MOOCV5/web/app_dev.php/cours_details/12', 1, 0, NULL),
('13', 'http://127.0.0.1/MOOCV5/web/app_dev.php/cours_details/13', 1, 0, NULL),
('4', 'http://127.0.0.1/MOOCV5/web/app_dev.php/afficher_chapitre/4/9', 1, 0, NULL),
('5', 'http://127.0.0.1/MOOCV5/web/app_dev.php/afficher_chapitre/5/12', 1, 0, NULL),
('6', 'http://127.0.0.1/MOOCV5/web/app_dev.php/afficher_chapitre/6/9', 1, 0, NULL),
('8', 'http://127.0.0.1/MOOCV5/web/app_dev.php/afficher_chapitre/8/9', 1, 0, NULL),
('9', 'http://127.0.0.1/MOOCV5/web/app_dev.php/cours_details?id=9', 1, 0, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `trophee`
--

CREATE TABLE IF NOT EXISTS `trophee` (
  `id_trophee` int(11) NOT NULL AUTO_INCREMENT,
  `id_apprenant_trophee` int(11) DEFAULT NULL,
  `id_cours_trophee` int(11) DEFAULT NULL,
  `chemin_trophee` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_trophee`),
  KEY `IDX_D06A5721FE244B36` (`id_apprenant_trophee`),
  KEY `IDX_D06A57212D44EF3F` (`id_cours_trophee`),
  KEY `id_cours_trophee` (`id_cours_trophee`,`id_apprenant_trophee`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `userphoto`
--

CREATE TABLE IF NOT EXISTS `userphoto` (
  `id_photo` int(11) NOT NULL AUTO_INCREMENT,
  `path` varchar(500) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id_photo`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=4 ;

--
-- Dumping data for table `userphoto`
--

INSERT INTO `userphoto` (`id_photo`, `path`) VALUES
(1, '23aa.jpg'),
(2, '195.JPG'),
(3, '20maha.jpg');

-- --------------------------------------------------------

--
-- Table structure for table `utilisateur`
--

CREATE TABLE IF NOT EXISTS `utilisateur` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_entreprise_utilisateur` int(11) DEFAULT NULL,
  `information_entreprise_utilisateur` int(11) DEFAULT NULL,
  `information_formateur_utilisateur` int(11) DEFAULT NULL,
  `username` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `username_canonical` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `email_canonical` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  `salt` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `last_login` datetime DEFAULT NULL,
  `locked` tinyint(1) NOT NULL,
  `expired` tinyint(1) NOT NULL,
  `expires_at` datetime DEFAULT NULL,
  `confirmation_token` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `password_requested_at` datetime DEFAULT NULL,
  `roles` longtext COLLATE utf8_unicode_ci NOT NULL COMMENT '(DC2Type:array)',
  `credentials_expired` tinyint(1) NOT NULL,
  `credentials_expire_at` datetime DEFAULT NULL,
  `type_utilisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `cv_utilisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `adresse_utlisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `attestation_utilisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `etat_utilisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `num_tel_utilisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `date_creation_entreprise` date DEFAULT NULL,
  `specialite_utilisateur` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description_entreprise` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `photo_utilisateur` varchar(500) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_photo` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQ_1D1C63B392FC23A8` (`username_canonical`),
  UNIQUE KEY `UNIQ_1D1C63B3A0D96FBF` (`email_canonical`),
  UNIQUE KEY `UNIQ_1D1C63B39F3A3446` (`information_entreprise_utilisateur`),
  UNIQUE KEY `UNIQ_1D1C63B31C18BCE7` (`information_formateur_utilisateur`),
  UNIQUE KEY `UNIQ_1D1C63B3F6757F40` (`user_photo`),
  KEY `IDX_1D1C63B32ABA784F` (`id_entreprise_utilisateur`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=27 ;

--
-- Dumping data for table `utilisateur`
--

INSERT INTO `utilisateur` (`id`, `id_entreprise_utilisateur`, `information_entreprise_utilisateur`, `information_formateur_utilisateur`, `username`, `username_canonical`, `email`, `email_canonical`, `enabled`, `salt`, `password`, `last_login`, `locked`, `expired`, `expires_at`, `confirmation_token`, `password_requested_at`, `roles`, `credentials_expired`, `credentials_expire_at`, `type_utilisateur`, `cv_utilisateur`, `adresse_utlisateur`, `attestation_utilisateur`, `etat_utilisateur`, `num_tel_utilisateur`, `date_creation_entreprise`, `specialite_utilisateur`, `description_entreprise`, `photo_utilisateur`, `user_photo`) VALUES
(19, NULL, NULL, 8, 'Souhaib Ben Farhat', 'souhaib ben farhat', 'souhaib.b.farhat@gmail.com', 'souhaib.b.farhat@gmail.com', 1, '', 'Souhaib Ben Farhat', '2016-05-11 00:14:04', 0, 0, NULL, NULL, NULL, 'a:1:{i:0;s:14:"ROLE_FORMATEUR";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2),
(20, NULL, NULL, NULL, 'MahaAkrout', 'maha akrout', 'maha.akrout@esprit.tn', 'maha.akrout@esprit.tn', 1, '', 'MahaAkrout', '2016-03-22 03:07:08', 0, 0, NULL, NULL, NULL, 'a:1:{i:0;s:14:"ROLE_APPRENANT";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 3),
(21, NULL, NULL, NULL, 'Khaoula Touhiri', 'khaoula touhiri', 'khaoula.touihri@esprit.tn', 'khaoula.touihri@esprit.tn', 1, '', 'Khaoula Touhiri', '2016-03-16 18:54:06', 0, 0, NULL, NULL, NULL, 'a:1:{i:0;s:14:"ROLE_APPRENANT";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(22, NULL, NULL, 9, 'Firas M''rabet', 'firas m''rabet', 'Firas.M''rabet@esprit.tn', 'firas.m''rabet@esprit.tn', 1, '', 'Firas M''rabet', '2016-03-19 12:59:24', 1, 0, NULL, NULL, NULL, 'a:1:{i:0;s:14:"ROLE_FORMATEUR";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(23, NULL, NULL, NULL, 'Anas Sghaier', 'anas sghaier', 'Anas.sghaier@Esprit.tn', 'anas.sghaier@esprit.tn', 1, '', 'Anas Sghaier', '2016-03-20 17:07:02', 0, 0, NULL, NULL, NULL, 'a:1:{i:0;s:14:"ROLE_FORMATEUR";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1),
(24, NULL, NULL, NULL, 'aaa', 'aaa', 'sdfsdf@fghfgh.ccc', 'sdfsdf@fghfgh.ccc', 1, '', 'aaa', '2016-03-27 16:38:22', 1, 0, NULL, NULL, NULL, 'a:1:{i:0;s:15:"ROLE_ENTREPRISE";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(25, NULL, NULL, NULL, 'Firas Firas', 'Firas Firas', 'FirasMrabet@gmail.com', 'FirasMrabet@gmail.com', 1, '', 'Firas Firas', NULL, 1, 0, NULL, NULL, NULL, 'a:1:{i:0;s:14:"ROLE_FORMATEUR";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(26, NULL, 1, NULL, 'esprit', 'esprit', 'esprit@esprit.com', 'esprit@esprit.com', 1, '', 'esprit', '2016-05-10 17:42:26', 0, 0, NULL, NULL, NULL, 'a:1:{i:0;s:15:"ROLE_ENTREPRISE";}', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `visite`
--

CREATE TABLE IF NOT EXISTS `visite` (
  `id_visite` int(11) NOT NULL AUTO_INCREMENT,
  `id_utilisateur` int(11) DEFAULT NULL,
  `id_cours` int(11) DEFAULT NULL,
  `date_visite` datetime NOT NULL,
  PRIMARY KEY (`id_visite`),
  KEY `IDX_B730898D50EAE44` (`id_utilisateur`),
  KEY `IDX_B730898D134FCDAC` (`id_cours`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=79 ;

--
-- Dumping data for table `visite`
--

INSERT INTO `visite` (`id_visite`, `id_utilisateur`, `id_cours`, `date_visite`) VALUES
(70, 21, 10, '2016-03-16 18:59:36'),
(71, 21, 9, '2016-03-16 19:02:18'),
(72, 21, 11, '2016-03-16 19:00:33'),
(73, 19, 10, '2016-05-10 17:00:16'),
(74, 19, 9, '2016-05-10 17:00:52'),
(75, 19, 11, '2016-03-31 13:52:43'),
(76, 19, 12, '2016-03-28 07:39:03'),
(77, 20, 11, '2016-03-19 16:06:47'),
(78, 19, 13, '2016-05-10 17:00:27');

-- --------------------------------------------------------

--
-- Table structure for table `vote`
--

CREATE TABLE IF NOT EXISTS `vote` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `voter_id` int(11) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `value` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `IDX_FA222A5AEBB4B8AD` (`voter_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `aime`
--
ALTER TABLE `aime`
  ADD CONSTRAINT `FK_A86190D622580603` FOREIGN KEY (`id_utilisateur_aime`) REFERENCES `utilisateur` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_A86190D67A0878A8` FOREIGN KEY (`id_sujet_aime`) REFERENCES `sujet` (`id_sujet`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_A86190D67EAF80D0` FOREIGN KEY (`id_cours_aime`) REFERENCES `cours` (`id_cours`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `appreciation`
--
ALTER TABLE `appreciation`
  ADD CONSTRAINT `FK_5CD4DEABC8036527` FOREIGN KEY (`id_cours_appreciation`) REFERENCES `cours` (`id_cours`),
  ADD CONSTRAINT `FK_5CD4DEABE5D8D4F8` FOREIGN KEY (`id_apprenant_appreciation`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `bibliotheque`
--
ALTER TABLE `bibliotheque`
  ADD CONSTRAINT `FK_4690D34DD24768C1` FOREIGN KEY (`id_cours_bibliotheque`) REFERENCES `cours` (`id_cours`),
  ADD CONSTRAINT `FK_4690D34DFF9CD91E` FOREIGN KEY (`id_apprenant_bibliotheque`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `chapitre`
--
ALTER TABLE `chapitre`
  ADD CONSTRAINT `FK_8C62B02530D0F131` FOREIGN KEY (`id_quizz_chapitre`) REFERENCES `quizz_chapitre` (`id_quizz_entrainement`),
  ADD CONSTRAINT `FK_8C62B0257690A3FE` FOREIGN KEY (`id_cours_chapitre`) REFERENCES `cours` (`id_cours`);

--
-- Constraints for table `comment`
--
ALTER TABLE `comment`
  ADD CONSTRAINT `FK_5BC96BF0E2904019` FOREIGN KEY (`thread_id`) REFERENCES `thread` (`id`),
  ADD CONSTRAINT `FK_5BC96BF0F675F31B` FOREIGN KEY (`author_id`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `commentaire`
--
ALTER TABLE `commentaire`
  ADD CONSTRAINT `FK_67F068BCD2E32CA` FOREIGN KEY (`id_apprenant_commentaire`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_67F068BCD4706035` FOREIGN KEY (`id_cours_commentaire`) REFERENCES `cours` (`id_cours`);

--
-- Constraints for table `contactmessage`
--
ALTER TABLE `contactmessage`
  ADD CONSTRAINT `FK_DDC5A139653379D8` FOREIGN KEY (`id_discussion`) REFERENCES `discussion` (`id_discussion`),
  ADD CONSTRAINT `FK_DDC5A139A44BE469` FOREIGN KEY (`id_utilisateur_destination`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_DDC5A139BD05F757` FOREIGN KEY (`id_utilisateur_source`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `cours`
--
ALTER TABLE `cours`
  ADD CONSTRAINT `FK_FDCA8C9C1F214B95` FOREIGN KEY (`id_quizz_cours`) REFERENCES `quizz_cours` (`id_quizz_cours`),
  ADD CONSTRAINT `FK_FDCA8C9C59276A05` FOREIGN KEY (`id_discipline_cours`) REFERENCES `discipline` (`id_discipline`),
  ADD CONSTRAINT `FK_FDCA8C9CC92EF92C` FOREIGN KEY (`id_formateur_cours`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `discipline`
--
ALTER TABLE `discipline`
  ADD CONSTRAINT `FK_75BEEE3F140206AB` FOREIGN KEY (`id_forum_discipline`) REFERENCES `forum` (`id_forum`);

--
-- Constraints for table `discussion`
--
ALTER TABLE `discussion`
  ADD CONSTRAINT `FK_8FE4FADFA44BE469` FOREIGN KEY (`id_utilisateur_destination`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_8FE4FADFBD05F757` FOREIGN KEY (`id_utilisateur_source`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_8FE4FADFD0310C37` FOREIGN KEY (`last_message`) REFERENCES `contactmessage` (`id_Contact_Message`);

--
-- Constraints for table `forum`
--
ALTER TABLE `forum`
  ADD CONSTRAINT `FK_44EA91C921C65854` FOREIGN KEY (`id_discipline_forum`) REFERENCES `discipline` (`id_discipline`),
  ADD CONSTRAINT `FK_44EA91C94C586F86` FOREIGN KEY (`last_sujet`) REFERENCES `sujet` (`id_sujet`);

--
-- Constraints for table `information_entreprise`
--
ALTER TABLE `information_entreprise`
  ADD CONSTRAINT `FK_414C97B9A4AEAFEA` FOREIGN KEY (`entreprise_id`) REFERENCES `utilisateur` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `information_formateur`
--
ALTER TABLE `information_formateur`
  ADD CONSTRAINT `FK_53FA7BCD155D8F51` FOREIGN KEY (`formateur_id`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `invitation_comite`
--
ALTER TABLE `invitation_comite`
  ADD CONSTRAINT `FK_90041155264B8AD5` FOREIGN KEY (`id_formateur_invitation_comite`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `invitation_entreprise_formateur`
--
ALTER TABLE `invitation_entreprise_formateur`
  ADD CONSTRAINT `FK_6AD34A936D43C268` FOREIGN KEY (`id_formateur`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_6AD34A93A8937AB7` FOREIGN KEY (`id_entreprise`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `invitation_formateur_entreprise`
--
ALTER TABLE `invitation_formateur_entreprise`
  ADD CONSTRAINT `FK_422B4B806D43C268` FOREIGN KEY (`id_formateur`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_422B4B80A8937AB7` FOREIGN KEY (`id_entreprise`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `message`
--
ALTER TABLE `message`
  ADD CONSTRAINT `FK_790009E385A6EC73` FOREIGN KEY (`id_sujet_message`) REFERENCES `sujet` (`id_sujet`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_790009E38A5C5B26` FOREIGN KEY (`id_utilisateur_message`) REFERENCES `utilisateur` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `notification`
--
ALTER TABLE `notification`
  ADD CONSTRAINT `FK_A765AD322C55FF01` FOREIGN KEY (`id_proprietaire_notification`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_A765AD32BDA3681A` FOREIGN KEY (`id_utilisateur_notification`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_A765AD32F23EB44B` FOREIGN KEY (`id_sujet_notification`) REFERENCES `sujet` (`id_sujet`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `progression`
--
ALTER TABLE `progression`
  ADD CONSTRAINT `FK_532EDFA4663258FA` FOREIGN KEY (`id_cours_progression`) REFERENCES `cours` (`id_cours`),
  ADD CONSTRAINT `FK_532EDFA495017EA6` FOREIGN KEY (`id_utilisateur_pogression`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_532EDFA4D95E654` FOREIGN KEY (`id_chapitre_progression`) REFERENCES `chapitre` (`id_chapitre`);

--
-- Constraints for table `question`
--
ALTER TABLE `question`
  ADD CONSTRAINT `FK_B6F7494E45E7DB66` FOREIGN KEY (`id_quizz_entrainement_question`) REFERENCES `quizz_chapitre` (`id_quizz_entrainement`),
  ADD CONSTRAINT `FK_B6F7494E4FF5D76F` FOREIGN KEY (`id_quizz_final_question`) REFERENCES `quizz_final` (`id_quizz_final`),
  ADD CONSTRAINT `FK_B6F7494EF7885782` FOREIGN KEY (`id_quizz_cours_question`) REFERENCES `quizz_cours` (`id_quizz_cours`);

--
-- Constraints for table `quizz_chapitre`
--
ALTER TABLE `quizz_chapitre`
  ADD CONSTRAINT `FK_DB64C37CDD977F0` FOREIGN KEY (`id_chapitre_quizz_entrainement`) REFERENCES `chapitre` (`id_chapitre`);

--
-- Constraints for table `quizz_cours`
--
ALTER TABLE `quizz_cours`
  ADD CONSTRAINT `FK_7338662B4B38EEB` FOREIGN KEY (`id_cours_quizz_cours`) REFERENCES `cours` (`id_cours`);

--
-- Constraints for table `quizz_final`
--
ALTER TABLE `quizz_final`
  ADD CONSTRAINT `FK_162C5638A5AC5EB1` FOREIGN KEY (`id_cours_quizz_final`) REFERENCES `cours` (`id_cours`);

--
-- Constraints for table `reponse`
--
ALTER TABLE `reponse`
  ADD CONSTRAINT `FK_5FB6DEC7B2E05E0B` FOREIGN KEY (`id_question_reponse`) REFERENCES `question` (`id_question`);

--
-- Constraints for table `score_quizz_chapitre`
--
ALTER TABLE `score_quizz_chapitre`
  ADD CONSTRAINT `FK_435CE1A85690E0DD` FOREIGN KEY (`id_apprenant_score_quizz_chapitre`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_435CE1A8CB81103F` FOREIGN KEY (`id_quizz_chapitre_score_quizz_chapitre`) REFERENCES `quizz_chapitre` (`id_quizz_entrainement`);

--
-- Constraints for table `score_quizz_cours`
--
ALTER TABLE `score_quizz_cours`
  ADD CONSTRAINT `FK_C27837172B9E9D59` FOREIGN KEY (`id_quizz_cours_score_quizz_cours`) REFERENCES `quizz_cours` (`id_quizz_cours`),
  ADD CONSTRAINT `FK_C2783717EE6B8EFD` FOREIGN KEY (`id_apprenant_score_quizz_cours`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `score_quizz_final`
--
ALTER TABLE `score_quizz_final`
  ADD CONSTRAINT `FK_D367E74DD9E58E96` FOREIGN KEY (`id_quizz_final_score_quizz_final`) REFERENCES `quizz_final` (`id_quizz_final`),
  ADD CONSTRAINT `FK_D367E74DFF745EA7` FOREIGN KEY (`id_apprenant_score_quizz_final`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `suividiscipline`
--
ALTER TABLE `suividiscipline`
  ADD CONSTRAINT `FK_961A8902194EFA46` FOREIGN KEY (`id_utilisateur_suivi`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_961A89028A512C16` FOREIGN KEY (`id_discipline_suivi`) REFERENCES `discipline` (`id_discipline`);

--
-- Constraints for table `suivie`
--
ALTER TABLE `suivie`
  ADD CONSTRAINT `FK_955F5D17707CD005` FOREIGN KEY (`id_utilisateur_suivie`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_955F5D17DEB23C3B` FOREIGN KEY (`id_cours_suivie`) REFERENCES `cours` (`id_cours`);

--
-- Constraints for table `sujet`
--
ALTER TABLE `sujet`
  ADD CONSTRAINT `FK_EFD276991EC239B0` FOREIGN KEY (`last_poste`) REFERENCES `message` (`id_message`) ON DELETE SET NULL ON UPDATE SET NULL,
  ADD CONSTRAINT `FK_EFD276992E7532BD` FOREIGN KEY (`id_forum_sujet`) REFERENCES `forum` (`id_forum`),
  ADD CONSTRAINT `FK_EFD2769930B84783` FOREIGN KEY (`id_apprenant_sujet`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_EFD27699A7768E28` FOREIGN KEY (`last_poster`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `trophee`
--
ALTER TABLE `trophee`
  ADD CONSTRAINT `FK_D06A57212D44EF3F` FOREIGN KEY (`id_cours_trophee`) REFERENCES `cours` (`id_cours`),
  ADD CONSTRAINT `FK_D06A5721FE244B36` FOREIGN KEY (`id_apprenant_trophee`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `utilisateur`
--
ALTER TABLE `utilisateur`
  ADD CONSTRAINT `FK_1D1C63B31C18BCE7` FOREIGN KEY (`information_formateur_utilisateur`) REFERENCES `information_formateur` (`id`),
  ADD CONSTRAINT `FK_1D1C63B32ABA784F` FOREIGN KEY (`id_entreprise_utilisateur`) REFERENCES `utilisateur` (`id`),
  ADD CONSTRAINT `FK_1D1C63B39F3A3446` FOREIGN KEY (`information_entreprise_utilisateur`) REFERENCES `information_entreprise` (`id`),
  ADD CONSTRAINT `FK_1D1C63B3F6757F40` FOREIGN KEY (`user_photo`) REFERENCES `userphoto` (`id_photo`);

--
-- Constraints for table `visite`
--
ALTER TABLE `visite`
  ADD CONSTRAINT `FK_B730898D134FCDAC` FOREIGN KEY (`id_cours`) REFERENCES `cours` (`id_cours`),
  ADD CONSTRAINT `FK_B730898D50EAE44` FOREIGN KEY (`id_utilisateur`) REFERENCES `utilisateur` (`id`);

--
-- Constraints for table `vote`
--
ALTER TABLE `vote`
  ADD CONSTRAINT `FK_FA222A5AEBB4B8AD` FOREIGN KEY (`voter_id`) REFERENCES `utilisateur` (`id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
